{"version":3,"sources":["accessToken.ts","CheckAuth.ts","generated/graphql.tsx","components/navbar/AnnouncementBar.tsx","images/Logo.png","components/navbar/Logo.tsx","components/navbar/Navbar.tsx","components/footer/CopyrightBar.tsx","images/Footer_logo.png","components/footer/Footer.tsx","components/products/Products.tsx","components/Preloader.tsx","components/UsersOrders.tsx","components/products/ProductDetails.tsx","redux/actions/userAction.ts","components/checkout/Cart.tsx","components/checkout/Checkout.tsx","components/FAQ.tsx","URI.ts","components/Contact.tsx","components/ShippingPolicy.tsx","routes/Routes.tsx","App.tsx","AppWrapper.tsx","redux/RootReducer.tsx","redux/ReduxStore.tsx","index.tsx"],"names":["accessToken","setAccessToken","s","getAccessToken","checkAuth","token","exp","jwtDecode","Date","now","CheckoutDocument","gql","useCheckoutMutation","baseOptions","Apollo","GetAnnouncementsDocument","GetCurrUserDocument","useGetCurrUserQuery","GetProductDocument","GetProductsDocument","useGetProductsQuery","GetUsersOrdersDocument","LoginDocument","ValidateCouponDocument","AnnouncementBar","data","console","log","useEffect","document","getElementById","textWrapper","innerHTML","textContent","replace","tl","anime","timeline","loop","loopBegin","style","display","loopComplete","add","targets","translateY","translateZ","opacity","easing","duration","delay","el","i","translateX","width","backgroundColor","color","zIndex","position","className","justifyContent","getAnnouncements","length","id","map","_val","text","href","marginRight","marginLeft","Logo","src","LogoSrc","alt","Navbar","elems","querySelectorAll","M","Sidenav","init","login","handler","res","a","variables","user_id","googleId","email","profileObj","response","localStorage","setItem","refreshToken","window","location","reload","signIn","useGoogleLogin","clientId","onSuccess","logout","top","data-target","left","transform","minWidth","onClick","paddingTop","textAlign","CopyrightBar","border","marginTop","marginBottom","fontSize","fontWeight","Footer","height","FooterLogo","Products","loading","_t","value","scale","stagger","start","getProducts","product","margin","product_id","images","img_url","name","maxHeight","Number","price","toFixed","Preloader","direction","elasticity","UsersOrders","useLocation","state","tmp","getUsersOrders","amountOff","order_total","discount","borderLeft","paddingBottom","paddingRight","paddingLeft","order_id","products","j","flexDirection","quantityOrdered","productSubtotal","borderBottom","ProductDetails","split","dispatch","useDispatch","error","Tooltip","percent","getProduct","org_stock","stock","to","maxWidth","desc","data-position","data-tooltip","type","addProductToCart","Cart","useState","refresh","quantities","setState","useSelector","productsInCart","total","quantity","minLength","maxLength","pattern","onBlur","e","newQuantity","target","productIndex","splice","onChange","match","CardSection","options","iconStyle","hidePostalCode","base","iconColor","fontFamily","fontSmoothing","invalid","Checkout","props","checkout","validateCoupon","discountPH","setDiscountPH","getCurrUser","setEmail","setName","coupon","setCoupon","subtotal","setSubtotal","subtotalWtax","setSubtotalWtax","redirect","setRedirect","address","city","line1","zip","billing","setBilling","setAddress","Autocomplete","Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusettes","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","Ohio","Oklahoma","Oregon","Pennsylvania","Tennessee","Texas","Utah","Vermont","Virginia","Washington","Wisconsin","Wyoming","pathname","handleSubmit","stripe","elements","card","getElement","CardElement","createToken","result","products_str","JSON","stringify","token_str","shipping_str","billing_str","shipping_info","billing_info","toast","html","tmp_subtotal","tax","Math","round","minHeight","focusable","viewBox","d","fill-rule","letterSpacing","htmlFor","data-error","coupon_name","classList","attributes","nodeValue","percentage","classes","FAQ","eyeColors","eyeColor","floor","random","URI","Contact","message","setMessage","orderNum","setOrderNum","tmp_email","axios","method","url","then","submitForm","ShippingPolicy","Routes","stripePromise","loadStripe","exact","path","render","App","AppWrapper","pageLoader","setPageLoader","getItem","fetch","credentials","headers","json","initState","serializedState","parse","err","loadState","store","createStore","action","tmp2","push","composeWithDevTools","subscribe","saveState","getState","cache","InMemoryCache","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","setContext","authorization","next","bind","complete","catch","unsubscribe","client","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","fetchAccessToken","handleFetch","handleError","warn","onError","graphQLErrors","networkError","HttpLink","uri","ReactDOM"],"mappings":"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","file":"static/js/main.11a49346.chunk.js","sourcesContent":["export let accessToken = \"\";\r\n\r\nexport const setAccessToken = (s: string) => {\r\n    accessToken = s;\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n    return accessToken;\r\n};\r\n","import { getAccessToken } from \"./accessToken\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const checkAuth = () => {\r\n    const token = getAccessToken();\r\n    if (!token) {\r\n        return false;\r\n    }\r\n    try {\r\n        const { exp } = jwtDecode(token) as any;\r\n        if (Date.now() >= exp * 1000) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    } catch {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default checkAuth();\r\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  getUsersOrders: Array<GetOrdersResponse>;\n  getOrders: Array<GetOrdersResponse>;\n  getProducts: Array<ProductsWithImages>;\n  getProduct: ProductsWithImages;\n  hello: Scalars['String'];\n  getCurrUser: Users;\n  getCoupons: Array<Coupons>;\n  getAnnouncements: Array<Announcements>;\n};\n\n\nexport type QueryGetProductArgs = {\n  product_id: Scalars['Float'];\n};\n\nexport type GetOrdersResponse = {\n  __typename?: 'GetOrdersResponse';\n  products: Array<OrdersProductsWithImages>;\n  order_id: Scalars['Float'];\n  tracking_num?: Maybe<Scalars['String']>;\n  order_total?: Maybe<Scalars['Float']>;\n  coupon?: Maybe<Scalars['String']>;\n  discount?: Maybe<Scalars['String']>;\n};\n\nexport type OrdersProductsWithImages = {\n  __typename?: 'OrdersProductsWithImages';\n  product_id: Scalars['Int'];\n  name: Scalars['String'];\n  desc: Scalars['String'];\n  price: Scalars['Int'];\n  stock: Scalars['Int'];\n  org_stock: Scalars['Int'];\n  exp_date?: Maybe<Scalars['String']>;\n  quantityOrdered: Scalars['Float'];\n  productSubtotal?: Maybe<Scalars['Float']>;\n  images?: Maybe<Array<Images>>;\n};\n\nexport type Images = {\n  __typename?: 'Images';\n  img_id: Scalars['Float'];\n  img_url: Scalars['String'];\n  index: Scalars['Float'];\n};\n\nexport type ProductsWithImages = {\n  __typename?: 'ProductsWithImages';\n  product_id: Scalars['Int'];\n  name: Scalars['String'];\n  desc: Scalars['String'];\n  price: Scalars['Int'];\n  stock: Scalars['Int'];\n  org_stock: Scalars['Int'];\n  exp_date?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Images>>;\n};\n\nexport type Users = {\n  __typename?: 'Users';\n  uuid: Scalars['Float'];\n  user_id?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n};\n\nexport type Coupons = {\n  __typename?: 'Coupons';\n  coupon_id: Scalars['String'];\n  coupon_name: Scalars['String'];\n  discount?: Maybe<Scalars['Int']>;\n};\n\nexport type Announcements = {\n  __typename?: 'Announcements';\n  id: Scalars['String'];\n  text: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  checkout: Scalars['Boolean'];\n  addProduct: Scalars['String'];\n  deleteProduct: Scalars['Boolean'];\n  updateProduct: Scalars['Boolean'];\n  addImgToProduct: Scalars['Boolean'];\n  removeImgFromProduct: Scalars['Boolean'];\n  apiLogin: AuthResponse;\n  login: AuthResponse;\n  addCoupon: Scalars['Boolean'];\n  deleteCoupon: Scalars['Boolean'];\n  validateCoupon: Scalars['String'];\n  addAnnouncement: Scalars['Boolean'];\n  deleteAnnouncement: Scalars['Boolean'];\n};\n\n\nexport type MutationCheckoutArgs = {\n  coupon: Scalars['String'];\n  billing_info: Scalars['String'];\n  shipping_info: Scalars['String'];\n  products: Scalars['String'];\n  user_id: Scalars['String'];\n  token: Scalars['String'];\n};\n\n\nexport type MutationAddProductArgs = {\n  stock: Scalars['Float'];\n  price: Scalars['Float'];\n  desc: Scalars['String'];\n  name: Scalars['String'];\n};\n\n\nexport type MutationDeleteProductArgs = {\n  product_id: Scalars['Float'];\n};\n\n\nexport type MutationUpdateProductArgs = {\n  stock: Scalars['Float'];\n  price: Scalars['Float'];\n  desc: Scalars['String'];\n  product_id: Scalars['Float'];\n  name: Scalars['String'];\n};\n\n\nexport type MutationAddImgToProductArgs = {\n  product_id: Scalars['Float'];\n  img_url: Scalars['String'];\n};\n\n\nexport type MutationApiLoginArgs = {\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\n\nexport type MutationLoginArgs = {\n  email: Scalars['String'];\n  user_id: Scalars['String'];\n};\n\n\nexport type MutationAddCouponArgs = {\n  discount: Scalars['String'];\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationDeleteCouponArgs = {\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationValidateCouponArgs = {\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationAddAnnouncementArgs = {\n  text: Scalars['String'];\n};\n\n\nexport type MutationDeleteAnnouncementArgs = {\n  id: Scalars['String'];\n};\n\nexport type AuthResponse = {\n  __typename?: 'AuthResponse';\n  accessToken?: Maybe<Scalars['String']>;\n  refreshToken?: Maybe<Scalars['String']>;\n};\n\nexport type CheckoutMutationVariables = Exact<{\n  token: Scalars['String'];\n  user_id: Scalars['String'];\n  products: Scalars['String'];\n  shipping_info: Scalars['String'];\n  billing_info: Scalars['String'];\n  coupon: Scalars['String'];\n}>;\n\n\nexport type CheckoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'checkout'>\n);\n\nexport type GetAnnouncementsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAnnouncementsQuery = (\n  { __typename?: 'Query' }\n  & { getAnnouncements: Array<(\n    { __typename?: 'Announcements' }\n    & Pick<Announcements, 'id' | 'text'>\n  )> }\n);\n\nexport type GetCurrUserQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetCurrUserQuery = (\n  { __typename?: 'Query' }\n  & { getCurrUser: (\n    { __typename?: 'Users' }\n    & Pick<Users, 'email' | 'uuid' | 'user_id'>\n  ) }\n);\n\nexport type GetProductQueryVariables = Exact<{\n  product_id: Scalars['Float'];\n}>;\n\n\nexport type GetProductQuery = (\n  { __typename?: 'Query' }\n  & { getProduct: (\n    { __typename?: 'ProductsWithImages' }\n    & Pick<ProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'org_stock' | 'exp_date'>\n    & { images?: Maybe<Array<(\n      { __typename?: 'Images' }\n      & Pick<Images, 'img_id' | 'img_url'>\n    )>> }\n  ) }\n);\n\nexport type GetProductsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetProductsQuery = (\n  { __typename?: 'Query' }\n  & { getProducts: Array<(\n    { __typename?: 'ProductsWithImages' }\n    & Pick<ProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'org_stock' | 'exp_date'>\n    & { images?: Maybe<Array<(\n      { __typename?: 'Images' }\n      & Pick<Images, 'img_id' | 'img_url'>\n    )>> }\n  )> }\n);\n\nexport type GetUsersOrdersQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetUsersOrdersQuery = (\n  { __typename?: 'Query' }\n  & { getUsersOrders: Array<(\n    { __typename?: 'GetOrdersResponse' }\n    & Pick<GetOrdersResponse, 'order_id' | 'tracking_num' | 'order_total' | 'coupon' | 'discount'>\n    & { products: Array<(\n      { __typename?: 'OrdersProductsWithImages' }\n      & Pick<OrdersProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'exp_date' | 'quantityOrdered' | 'productSubtotal'>\n      & { images?: Maybe<Array<(\n        { __typename?: 'Images' }\n        & Pick<Images, 'img_id' | 'img_url' | 'index'>\n      )>> }\n    )> }\n  )> }\n);\n\nexport type LoginMutationVariables = Exact<{\n  user_id: Scalars['String'];\n  email: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'AuthResponse' }\n    & Pick<AuthResponse, 'accessToken' | 'refreshToken'>\n  ) }\n);\n\nexport type ValidateCouponMutationVariables = Exact<{\n  coupon_name: Scalars['String'];\n}>;\n\n\nexport type ValidateCouponMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'validateCoupon'>\n);\n\n\nexport const CheckoutDocument = gql`\n    mutation checkout($token: String!, $user_id: String!, $products: String!, $shipping_info: String!, $billing_info: String!, $coupon: String!) {\n  checkout(\n    token: $token\n    user_id: $user_id\n    products: $products\n    shipping_info: $shipping_info\n    billing_info: $billing_info\n    coupon: $coupon\n  )\n}\n    `;\nexport type CheckoutMutationFn = Apollo.MutationFunction<CheckoutMutation, CheckoutMutationVariables>;\n\n/**\n * __useCheckoutMutation__\n *\n * To run a mutation, you first call `useCheckoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCheckoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [checkoutMutation, { data, loading, error }] = useCheckoutMutation({\n *   variables: {\n *      token: // value for 'token'\n *      user_id: // value for 'user_id'\n *      products: // value for 'products'\n *      shipping_info: // value for 'shipping_info'\n *      billing_info: // value for 'billing_info'\n *      coupon: // value for 'coupon'\n *   },\n * });\n */\nexport function useCheckoutMutation(baseOptions?: Apollo.MutationHookOptions<CheckoutMutation, CheckoutMutationVariables>) {\n        return Apollo.useMutation<CheckoutMutation, CheckoutMutationVariables>(CheckoutDocument, baseOptions);\n      }\nexport type CheckoutMutationHookResult = ReturnType<typeof useCheckoutMutation>;\nexport type CheckoutMutationResult = Apollo.MutationResult<CheckoutMutation>;\nexport type CheckoutMutationOptions = Apollo.BaseMutationOptions<CheckoutMutation, CheckoutMutationVariables>;\nexport const GetAnnouncementsDocument = gql`\n    query getAnnouncements {\n  getAnnouncements {\n    id\n    text\n  }\n}\n    `;\n\n/**\n * __useGetAnnouncementsQuery__\n *\n * To run a query within a React component, call `useGetAnnouncementsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAnnouncementsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAnnouncementsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetAnnouncementsQuery(baseOptions?: Apollo.QueryHookOptions<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>) {\n        return Apollo.useQuery<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>(GetAnnouncementsDocument, baseOptions);\n      }\nexport function useGetAnnouncementsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>) {\n          return Apollo.useLazyQuery<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>(GetAnnouncementsDocument, baseOptions);\n        }\nexport type GetAnnouncementsQueryHookResult = ReturnType<typeof useGetAnnouncementsQuery>;\nexport type GetAnnouncementsLazyQueryHookResult = ReturnType<typeof useGetAnnouncementsLazyQuery>;\nexport type GetAnnouncementsQueryResult = Apollo.QueryResult<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>;\nexport const GetCurrUserDocument = gql`\n    query getCurrUser {\n  getCurrUser {\n    email\n    uuid\n    user_id\n  }\n}\n    `;\n\n/**\n * __useGetCurrUserQuery__\n *\n * To run a query within a React component, call `useGetCurrUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetCurrUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetCurrUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetCurrUserQuery(baseOptions?: Apollo.QueryHookOptions<GetCurrUserQuery, GetCurrUserQueryVariables>) {\n        return Apollo.useQuery<GetCurrUserQuery, GetCurrUserQueryVariables>(GetCurrUserDocument, baseOptions);\n      }\nexport function useGetCurrUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetCurrUserQuery, GetCurrUserQueryVariables>) {\n          return Apollo.useLazyQuery<GetCurrUserQuery, GetCurrUserQueryVariables>(GetCurrUserDocument, baseOptions);\n        }\nexport type GetCurrUserQueryHookResult = ReturnType<typeof useGetCurrUserQuery>;\nexport type GetCurrUserLazyQueryHookResult = ReturnType<typeof useGetCurrUserLazyQuery>;\nexport type GetCurrUserQueryResult = Apollo.QueryResult<GetCurrUserQuery, GetCurrUserQueryVariables>;\nexport const GetProductDocument = gql`\n    query getProduct($product_id: Float!) {\n  getProduct(product_id: $product_id) {\n    product_id\n    name\n    desc\n    price\n    stock\n    org_stock\n    exp_date\n    images {\n      img_id\n      img_url\n    }\n  }\n}\n    `;\n\n/**\n * __useGetProductQuery__\n *\n * To run a query within a React component, call `useGetProductQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetProductQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetProductQuery({\n *   variables: {\n *      product_id: // value for 'product_id'\n *   },\n * });\n */\nexport function useGetProductQuery(baseOptions: Apollo.QueryHookOptions<GetProductQuery, GetProductQueryVariables>) {\n        return Apollo.useQuery<GetProductQuery, GetProductQueryVariables>(GetProductDocument, baseOptions);\n      }\nexport function useGetProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetProductQuery, GetProductQueryVariables>) {\n          return Apollo.useLazyQuery<GetProductQuery, GetProductQueryVariables>(GetProductDocument, baseOptions);\n        }\nexport type GetProductQueryHookResult = ReturnType<typeof useGetProductQuery>;\nexport type GetProductLazyQueryHookResult = ReturnType<typeof useGetProductLazyQuery>;\nexport type GetProductQueryResult = Apollo.QueryResult<GetProductQuery, GetProductQueryVariables>;\nexport const GetProductsDocument = gql`\n    query getProducts {\n  getProducts {\n    product_id\n    name\n    desc\n    price\n    stock\n    org_stock\n    exp_date\n    images {\n      img_id\n      img_url\n    }\n  }\n}\n    `;\n\n/**\n * __useGetProductsQuery__\n *\n * To run a query within a React component, call `useGetProductsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetProductsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetProductsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetProductsQuery(baseOptions?: Apollo.QueryHookOptions<GetProductsQuery, GetProductsQueryVariables>) {\n        return Apollo.useQuery<GetProductsQuery, GetProductsQueryVariables>(GetProductsDocument, baseOptions);\n      }\nexport function useGetProductsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetProductsQuery, GetProductsQueryVariables>) {\n          return Apollo.useLazyQuery<GetProductsQuery, GetProductsQueryVariables>(GetProductsDocument, baseOptions);\n        }\nexport type GetProductsQueryHookResult = ReturnType<typeof useGetProductsQuery>;\nexport type GetProductsLazyQueryHookResult = ReturnType<typeof useGetProductsLazyQuery>;\nexport type GetProductsQueryResult = Apollo.QueryResult<GetProductsQuery, GetProductsQueryVariables>;\nexport const GetUsersOrdersDocument = gql`\n    query getUsersOrders {\n  getUsersOrders {\n    products {\n      product_id\n      name\n      desc\n      price\n      stock\n      exp_date\n      quantityOrdered\n      productSubtotal\n      images {\n        img_id\n        img_url\n        index\n      }\n    }\n    order_id\n    tracking_num\n    order_total\n    coupon\n    discount\n  }\n}\n    `;\n\n/**\n * __useGetUsersOrdersQuery__\n *\n * To run a query within a React component, call `useGetUsersOrdersQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetUsersOrdersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetUsersOrdersQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetUsersOrdersQuery(baseOptions?: Apollo.QueryHookOptions<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>) {\n        return Apollo.useQuery<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>(GetUsersOrdersDocument, baseOptions);\n      }\nexport function useGetUsersOrdersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>) {\n          return Apollo.useLazyQuery<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>(GetUsersOrdersDocument, baseOptions);\n        }\nexport type GetUsersOrdersQueryHookResult = ReturnType<typeof useGetUsersOrdersQuery>;\nexport type GetUsersOrdersLazyQueryHookResult = ReturnType<typeof useGetUsersOrdersLazyQuery>;\nexport type GetUsersOrdersQueryResult = Apollo.QueryResult<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>;\nexport const LoginDocument = gql`\n    mutation login($user_id: String!, $email: String!) {\n  login(user_id: $user_id, email: $email) {\n    accessToken\n    refreshToken\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      user_id: // value for 'user_id'\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        return Apollo.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const ValidateCouponDocument = gql`\n    mutation validateCoupon($coupon_name: String!) {\n  validateCoupon(coupon_name: $coupon_name)\n}\n    `;\nexport type ValidateCouponMutationFn = Apollo.MutationFunction<ValidateCouponMutation, ValidateCouponMutationVariables>;\n\n/**\n * __useValidateCouponMutation__\n *\n * To run a mutation, you first call `useValidateCouponMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useValidateCouponMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [validateCouponMutation, { data, loading, error }] = useValidateCouponMutation({\n *   variables: {\n *      coupon_name: // value for 'coupon_name'\n *   },\n * });\n */\nexport function useValidateCouponMutation(baseOptions?: Apollo.MutationHookOptions<ValidateCouponMutation, ValidateCouponMutationVariables>) {\n        return Apollo.useMutation<ValidateCouponMutation, ValidateCouponMutationVariables>(ValidateCouponDocument, baseOptions);\n      }\nexport type ValidateCouponMutationHookResult = ReturnType<typeof useValidateCouponMutation>;\nexport type ValidateCouponMutationResult = Apollo.MutationResult<ValidateCouponMutation>;\nexport type ValidateCouponMutationOptions = Apollo.BaseMutationOptions<ValidateCouponMutation, ValidateCouponMutationVariables>;","import { FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\nimport { useGetAnnouncementsQuery } from \"../../generated/graphql\";\r\nimport anime from \"animejs\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst pickIntro = () => {\r\n    const animations = [\r\n        {\r\n            targets: \".announcement-1 .letter\",\r\n            translateX: [40, 0],\r\n            translateZ: 0,\r\n            opacity: [0, 1],\r\n            easing: \"easeOutExpo\",\r\n            duration: 1200,\r\n            delay: (el, i) => 500 + 30 * i,\r\n        },\r\n    ]; //define animations here\r\n    let index = Math.floor(Math.random() * animations.length - 1 + 1);\r\n    return animations[index];\r\n};\r\n\r\nconst pickOutro = () => {\r\n    const animations = [\r\n        {\r\n            targets: \".announcement-1 .letter\",\r\n            translateY: [0, -100],\r\n            opacity: [1, 0],\r\n            easing: \"easeInExpo\",\r\n            duration: 1200,\r\n            delay: (el, i) => 100 + 30 * i,\r\n        },\r\n    ]; //define animations here\r\n    let index = Math.floor(Math.random() * animations.length - 1 + 1);\r\n    return animations[index];\r\n};\r\n\r\nconst AnnouncementBar = () => {\r\n    const { data } = useGetAnnouncementsQuery();\r\n    console.log(\"data =>\", data);\r\n\r\n    useEffect(() => {\r\n        let timelines = [] as any[];\r\n\r\n        if (!!data && !!document.getElementById(`announcement-0`)) {\r\n            var textWrapper = document.getElementById(`announcement-0`);\r\n            textWrapper!.innerHTML = textWrapper!.textContent!.replace(\r\n                /\\S/g,\r\n                \"<span class='letter'>$&</span>\"\r\n            );\r\n            var textWrapper = document.getElementById(`announcement-1`);\r\n            textWrapper!.innerHTML = textWrapper!.textContent!.replace(\r\n                /\\S/g,\r\n                \"<span class='letter'>$&</span>\"\r\n            );\r\n            var textWrapper = document.getElementById(`announcement-2`);\r\n            textWrapper!.innerHTML = textWrapper!.textContent!.replace(\r\n                /\\S/g,\r\n                \"<span class='letter'>$&</span>\"\r\n            );\r\n\r\n            let tl = 0;\r\n            anime\r\n                .timeline({\r\n                    loop: true,\r\n                    loopBegin: () => {\r\n                        if (!document.getElementById(`announcement-${tl}`)) {\r\n                            tl = 0;\r\n                        }\r\n                        document.getElementById(\r\n                            `announcement-${tl}`\r\n                        )!.style.display = \"block\";\r\n                    },\r\n                    loopComplete: () => {\r\n                        document.getElementById(\r\n                            `announcement-${tl}`\r\n                        )!.style.display = \"none\";\r\n                        tl++;\r\n                    },\r\n                })\r\n                .add({\r\n                    targets: `.announcement .letter`,\r\n                    translateY: [100, 0],\r\n                    translateZ: 0,\r\n                    opacity: [0, 1],\r\n                    easing: \"easeOutExpo\",\r\n                    duration: 1400,\r\n                    delay: (el, i) => 300 + 30 * i,\r\n                })\r\n                .add(\r\n                    {\r\n                        targets: `.announcement .letter`,\r\n                        translateX: [0, -30],\r\n                        opacity: [1, 0],\r\n                        easing: \"easeOutQuart\",\r\n                        duration: 1000,\r\n                        delay: (el, i) => 100 + 30 * i,\r\n                    },\r\n                    \"+=15000\"\r\n                );\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                backgroundColor: \"rgb(13, 3, 3)\",\r\n                color: \"#fff\",\r\n                zIndex: 3,\r\n                position: \"relative\",\r\n            }}\r\n        >\r\n            <div\r\n                className=\"container\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n                <span\r\n                    className=\"right  noselect\"\r\n                    style={{ color: \"rgb(13, 3, 3)\" }}\r\n                >\r\n                    <FaEnvelope />\r\n                    <FaInstagram />\r\n                </span>\r\n\r\n                <>\r\n                    {data?.getAnnouncements.length === 0 ? (\r\n                        <>Follow us on our socials</>\r\n                    ) : (\r\n                        <span id=\"announcement\">\r\n                            {data?.getAnnouncements.map((_val, i) => {\r\n                                return (\r\n                                    <span\r\n                                        id={`announcement-${i}`}\r\n                                        className=\"announcement \"\r\n                                    >\r\n                                        {data.getAnnouncements[i].text}\r\n                                    </span>\r\n                                );\r\n                            })}\r\n                        </span>\r\n                    )}\r\n                </>\r\n\r\n                <span className=\"right\">\r\n                    <a\r\n                        href=\"mailto:cantrelatejp@gmail.com\"\r\n                        style={{ color: \"#fff\" }}\r\n                    >\r\n                        <FaEnvelope\r\n                            style={{ marginRight: \"5px\", marginLeft: \"5px\" }}\r\n                        />\r\n                    </a>\r\n\r\n                    <a\r\n                        href=\"https://www.instagram.com/cantrelate.jp/\"\r\n                        style={{ color: \"#fff\" }}\r\n                    >\r\n                        <FaInstagram />\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnnouncementBar;\r\n","export default __webpack_public_path__ + \"static/media/Logo.08c94796.png\";","import LogoSrc from \"../../images/Logo.png\";\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <a href=\"#/home\" className=\"brand-logo\">\r\n            <img src={LogoSrc} alt=\"Nari-Store\"></img>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","import { GoogleLogin, useGoogleLogin } from \"react-google-login\";\r\nimport { setAccessToken } from \"../../accessToken\";\r\nimport { checkAuth } from \"../../CheckAuth\";\r\nimport { useLoginMutation } from \"../../generated/graphql\";\r\nimport \"../../css/navbar.scss\";\r\nimport { useEffect } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport AnnouncementBar from \"./AnnouncementBar\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst Navbar = () => {\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll(\".sidenav\");\r\n        M.Sidenav.init(elems);\r\n    });\r\n    const [login] = useLoginMutation();\r\n\r\n    const handler = async res => {\r\n        console.log(\"res :>> \", res);\r\n        let response = await login({\r\n            variables: {\r\n                user_id: res.googleId,\r\n                email: res.profileObj.email,\r\n            },\r\n        });\r\n\r\n        console.log(\"response :>> \", response.data?.login);\r\n        setAccessToken(response.data?.login.accessToken!);\r\n        localStorage.setItem(\"iru5\", response.data?.login.refreshToken!);\r\n        window.location.reload();\r\n    };\r\n\r\n    const { signIn } = useGoogleLogin({\r\n        clientId:\r\n            \"36358700157-4ihpf9tj4bjf4k346b8pnubt4meim4j0.apps.googleusercontent.com\",\r\n        onSuccess: handler,\r\n    });\r\n\r\n    const logout = () => {\r\n        localStorage.setItem(\"iru5\", \"\");\r\n        setAccessToken(\"\");\r\n        window.location.reload();\r\n    };\r\n\r\n    console.log(\"checkAuth() :>> \", checkAuth());\r\n    return (\r\n        <>\r\n            <header style={{ position: \"sticky\", top: 0, zIndex: 997 }}>\r\n                <AnnouncementBar />\r\n                <div style={{ zIndex: 4, position: \"relative\" }}>\r\n                    <nav style={{ backgroundColor: \"#0a0a0a\" }}>\r\n                        <div className=\"nav-wrapper\">\r\n                            <Logo />\r\n\r\n                            <a\r\n                                data-target=\"mobile-demo\"\r\n                                className=\"sidenav-trigger left\"\r\n                            >\r\n                                <i className=\"material-icons noselect\">menu</i>\r\n                            </a>\r\n\r\n                            <ul\r\n                                id=\"nav\"\r\n                                className=\"center\"\r\n                                style={{\r\n                                    left: \"50%\",\r\n                                    transform: \"translateX(-50%)\",\r\n                                    position: \"absolute\",\r\n                                    minWidth: \"600px\",\r\n                                }}\r\n                            >\r\n                                <li>\r\n                                    <a href=\"#/home\">HOME</a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#/products\">PRODUCTS</a>\r\n                                </li>\r\n\r\n                                <li>\r\n                                    {checkAuth() ? (\r\n                                        <a href=\"#/my-orders\">MY ORDERS</a>\r\n                                    ) : (\r\n                                        // eslint-disable-next-line\r\n                                        <a\r\n                                            onClick={async () => {\r\n                                                await signIn();\r\n                                            }}\r\n                                        >\r\n                                            MY ORDERS\r\n                                        </a>\r\n                                    )}\r\n                                </li>\r\n\r\n                                <li>\r\n                                    <a href=\"#/my-cart\">CART</a>\r\n                                </li>\r\n                            </ul>\r\n                            {checkAuth() ? (\r\n                                <i\r\n                                    id=\"desktop-logout\"\r\n                                    className=\"material-icons right\"\r\n                                    style={{ marginRight: \"15%\" }}\r\n                                    onClick={() => logout()}\r\n                                >\r\n                                    exit_to_app\r\n                                </i>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                            <a\r\n                                href=\"#/my-cart\"\r\n                                className=\"right white-text\"\r\n                                style={{ color: \"#000\", marginRight: \"18px\" }}\r\n                            >\r\n                                <i className=\"material-icons\" id=\"mobile-cart\">\r\n                                    shopping_cart\r\n                                </i>\r\n                            </a>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n            <ul\r\n                className=\"sidenav\"\r\n                id=\"mobile-demo\"\r\n                style={{\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.95)\",\r\n                    paddingTop: \"42px\",\r\n                }}\r\n            >\r\n                <li>\r\n                    <a\r\n                        style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                        href=\"#/products\"\r\n                    >\r\n                        Products\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    {checkAuth() ? (\r\n                        <a\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            href=\"#/my-orders\"\r\n                        >\r\n                            My Orders\r\n                        </a>\r\n                    ) : (\r\n                        // eslint-disable-next-line\r\n                        <a\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            onClick={() => {\r\n                                console.log(\"clicked\");\r\n                                signIn();\r\n                            }}\r\n                        >\r\n                            My Orders\r\n                        </a>\r\n                    )}\r\n                </li>\r\n\r\n                <li>\r\n                    {checkAuth() ? (\r\n                        <a\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            onClick={() => logout()}\r\n                        >\r\n                            Logout\r\n                        </a>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </li>\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","const CopyrightBar = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                border: \"1px solid\",\r\n            }}\r\n        >\r\n            <span\r\n                style={{\r\n                    marginTop: \"5px\",\r\n                    marginBottom: \"5px\",\r\n                    fontSize: \"26.5px\",\r\n                    fontWeight: 550,\r\n                }}\r\n            >\r\n                © 2021 CANT RELATE.JP\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CopyrightBar;\r\n","export default __webpack_public_path__ + \"static/media/Footer_logo.64efc7ea.png\";","import CopyrightBar from \"./CopyrightBar\";\r\nimport FooterLogo from \"../../images/Footer_logo.png\";\r\nimport { FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\nimport \"../../css/footer.scss\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <span>\r\n            <footer\r\n                style={{\r\n                    backgroundColor: \"#000\",\r\n                    width: \"100%\",\r\n                    height: \"220px\",\r\n                }}\r\n            >\r\n                <div className=\"container\">\r\n                    <div\r\n                        className=\"row\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <div className=\"col l6 s12\">\r\n                            <img\r\n                                src={FooterLogo}\r\n                                alt=\"footer_logo\"\r\n                                style={{ height: \"220px\" }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col l4 offset-12 s12\">\r\n                            <ul id=\"footer-info\">\r\n                                <li>\r\n                                    <a\r\n                                        href=\"#/shipping_policy\"\r\n                                        className=\"white-text\"\r\n                                    >\r\n                                        <h4 style={{ fontWeight: 600 }}>\r\n                                            Shipping Policy\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#/contact\" className=\"white-text\">\r\n                                        <h4\r\n                                            style={{\r\n                                                marginTop: \"0px\",\r\n                                                fontWeight: 600,\r\n                                            }}\r\n                                        >\r\n                                            Contact Us\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#/FAQ\" className=\"white-text\">\r\n                                        <h4\r\n                                            style={{\r\n                                                marginTop: \"0px\",\r\n                                                fontWeight: 600,\r\n                                            }}\r\n                                        >\r\n                                            FAQ\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a\r\n                                        id=\"social-link\"\r\n                                        href=\"https://www.instagram.com/cantrelate.jp/\"\r\n                                    >\r\n                                        <FaInstagram\r\n                                            style={{\r\n                                                width: \"30px\",\r\n                                                height: \"30px\",\r\n                                                marginRight: \"7px\",\r\n                                            }}\r\n                                        />\r\n                                    </a>\r\n                                    <a\r\n                                        id=\"social-link\"\r\n                                        href=\"mailto:cantrelatejp@gmail.com\"\r\n                                    >\r\n                                        <FaEnvelope\r\n                                            style={{\r\n                                                width: \"30px\",\r\n                                                height: \"30px\",\r\n                                            }}\r\n                                        />\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n            <CopyrightBar />\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { useGetProductsQuery } from \"../../generated/graphql\";\r\nimport \"../../css/products.scss\";\r\nimport { useEffect } from \"react\";\r\nimport anime from \"animejs\";\r\nimport Preloader from \"../Preloader\";\r\n\r\nconst Products = () => {\r\n    const { data, loading } = useGetProductsQuery();\r\n\r\n    useEffect(() => {\r\n        anime({\r\n            duration: function (_t, i) {\r\n                return 900 + i * 75;\r\n            },\r\n            targets: \".card-content\",\r\n            easing: \"easeOutExpo\",\r\n            // delay: function (t, i) {\r\n            //     return i * 50;\r\n            // },\r\n            opacity: { value: [0, 1], easing: \"linear\" },\r\n            scale: [0, 1],\r\n            delay: anime.stagger(150, { start: 100 }),\r\n        });\r\n\r\n        anime({\r\n            duration: function (_t, i) {\r\n                return 900 + i * 75;\r\n            },\r\n            targets: \".card\",\r\n            easing: \"easeOutExpo\",\r\n            // delay: function (t, i) {\r\n            //     return i * 50;\r\n            // },\r\n            opacity: { value: [0, 1], easing: \"linear\" },\r\n            scale: [0, 1],\r\n            delay: anime.stagger(150, { start: 100 }),\r\n        });\r\n    });\r\n\r\n    console.log(\"data :>> \", data?.getProducts);\r\n    return (\r\n        <div className=\"container\">\r\n            <h1\r\n                className=\"center-align\"\r\n                style={{\r\n                    marginTop: \"60px\",\r\n                    marginBottom: \"60px\",\r\n                    fontWeight: 600,\r\n                }}\r\n            >\r\n                Products\r\n            </h1>\r\n\r\n            <div className=\"products-grid\">\r\n                {data?.getProducts.map((_val, i) => {\r\n                    let product: any = data.getProducts[i];\r\n                    return (\r\n                        <div\r\n                            className=\"card z-depth-0\"\r\n                            style={{ margin: \"0px 8px 32px 8px\" }}\r\n                            key={i}\r\n                        >\r\n                            <a\r\n                                className=\"black-text\"\r\n                                href={`#/product-details:${product.product_id}`}\r\n                            >\r\n                                <div className=\"card-image\">\r\n                                    <img\r\n                                        src={product.images[0].img_url!}\r\n                                        alt={product.name}\r\n                                        style={{ maxHeight: \"280px\" }}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"card-content\">\r\n                                    <span className=\"card-title\">\r\n                                        <h5 className=\"center-align\">\r\n                                            {product.name}\r\n                                        </h5>\r\n                                    </span>\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <p\r\n                                            className=\"product-price\"\r\n                                            style={{ fontSize: \"16px\" }}\r\n                                        >\r\n                                            $\r\n                                            {Number(\r\n                                                product.price / 100\r\n                                            ).toFixed(2)}\r\n                                        </p>\r\n                                    </span>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","import \"../css/Preloader.scss\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Preloader = () => {\r\n    useEffect(() => {\r\n        anime({\r\n            targets: [\".circle-1\"],\r\n            translateY: -24,\r\n            direction: \"alternate\",\r\n            loop: true,\r\n            elasticity: 400,\r\n            easing: \"easeInOutElastic\",\r\n            duration: 1600,\r\n            delay: 800,\r\n        });\r\n\r\n        anime({\r\n            targets: [\".circle-2\"],\r\n            translateY: 24,\r\n            direction: \"alternate\",\r\n            loop: true,\r\n            elasticity: 400,\r\n            easing: \"easeInOutElastic\",\r\n            duration: 1600,\r\n            delay: 800,\r\n        });\r\n\r\n        anime({\r\n            targets: [\".circle-3 \"],\r\n            translateY: -24,\r\n            direction: \"alternate\",\r\n            loop: true,\r\n            elasticity: 400,\r\n            easing: \"easeInOutElastic\",\r\n            duration: 1600,\r\n            delay: 800,\r\n        });\r\n\r\n        anime({\r\n            targets: [\".circle-4\"],\r\n            translateY: 24,\r\n            direction: \"alternate\",\r\n            loop: true,\r\n            elasticity: 400,\r\n            easing: \"easeInOutElastic\",\r\n            duration: 1600,\r\n            delay: 800,\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div className=\"loadingWrapper\">\r\n            <div className=\"absolute-center\">\r\n                <div className=\"loader\">\r\n                    <div className=\"circle circle-1\"></div>\r\n                    <div className=\"circle circle-2\"></div>\r\n                    <div className=\"circle circle-3\"></div>\r\n                    <div className=\"circle circle-4\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","import { useGetUsersOrdersQuery } from \"../generated/graphql\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Preloader from \"./Preloader\";\r\n\r\ninterface UserOrders {\r\n    products: [\r\n        {\r\n            product_id: number;\r\n            name: string;\r\n            desc: string;\r\n            price: number;\r\n            stock: number;\r\n            exp_date?: string;\r\n            quantityOrdered: number;\r\n            productSubtotal: number;\r\n            images: [\r\n                {\r\n                    img_id: number;\r\n                    img_url: string;\r\n                    index: number;\r\n                }\r\n            ];\r\n        }\r\n    ];\r\n    order_total: number;\r\n    order_id: number;\r\n    tracking_num?: string;\r\n    coupon: string;\r\n    discount: string;\r\n}\r\n\r\nconst UsersOrders = () => {\r\n    const location: any = useLocation();\r\n    if (!!location.state) {\r\n        if (location.state.reload) {\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    console.log(\"location :>> \", location);\r\n    const { data, loading } = useGetUsersOrdersQuery();\r\n\r\n    if (loading) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    let tmp: [UserOrders] = data?.getUsersOrders as any;\r\n\r\n    console.log(\"tmp :>> \", tmp);\r\n    return (\r\n        <>\r\n            {!!tmp ? (\r\n                <>\r\n                    <div className=\"container\">\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <h3>Your Purchases</h3>\r\n                        </div>\r\n                        {tmp.map((_val, i) => {\r\n                            let amountOff = Number(\r\n                                (tmp[i].order_total *\r\n                                    Number(\"0.\" + tmp[i].discount)) /\r\n                                    100\r\n                            ).toFixed(2);\r\n                            return (\r\n                                <div className=\"row\" key={i}>\r\n                                    <div className=\"col s12\">\r\n                                        <div\r\n                                            className=\"card-header z-depth-2\"\r\n                                            style={{\r\n                                                borderLeft: \"5px solid #ff0000\",\r\n                                                paddingTop: \"13px\",\r\n                                                paddingBottom: \"13px\",\r\n                                                paddingRight: \"25px\",\r\n                                                paddingLeft: \"20px\",\r\n                                                zIndex: 4,\r\n                                                position: \"relative\",\r\n                                            }}\r\n                                        >\r\n                                            <span\r\n                                                style={{\r\n                                                    display: \"inline-block\",\r\n                                                    width: \"41.7%\",\r\n                                                }}\r\n                                            >\r\n                                                <span\r\n                                                    style={{\r\n                                                        color: \"#1d252c\",\r\n                                                        paddingRight: \"1rem\",\r\n                                                        fontWeight: 700,\r\n                                                    }}\r\n                                                >\r\n                                                    Order ID\r\n                                                </span>\r\n                                                <span>\r\n                                                    CRA-{tmp[i].order_id}\r\n                                                </span>\r\n                                            </span>\r\n                                            <span\r\n                                                style={{\r\n                                                    display: \"inline-block\",\r\n                                                    width: \"27%\",\r\n                                                }}\r\n                                            >\r\n                                                {/* Feb 15, 2021 */}\r\n                                            </span>\r\n                                            <span\r\n                                                style={{\r\n                                                    display: \"inline-block\",\r\n                                                    width: \"30.3%\",\r\n                                                    fontWeight: 700,\r\n                                                }}\r\n                                            >\r\n                                                <span\r\n                                                    style={{\r\n                                                        display: \"flex\",\r\n                                                        justifyContent:\r\n                                                            \"space-between\",\r\n                                                    }}\r\n                                                >\r\n                                                    <span>\r\n                                                        $\r\n                                                        {Number(\r\n                                                            tmp[i].order_total /\r\n                                                                100\r\n                                                        ).toFixed(2)}{\" \"}\r\n                                                        {tmp[i].discount ? (\r\n                                                            <span>\r\n                                                                (\r\n                                                                <span\r\n                                                                    style={{\r\n                                                                        color:\r\n                                                                            \"rgb(255, 0, 0)\",\r\n                                                                    }}\r\n                                                                >\r\n                                                                    -$\r\n                                                                    {amountOff}\r\n                                                                </span>\r\n                                                                )\r\n                                                            </span>\r\n                                                        ) : (\r\n                                                            <></>\r\n                                                        )}\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        {/* <a href=\"\">\r\n                                                            See details{\" \"}\r\n                                                             <i className=\"material-icons\">\r\n                                                        chevron_right\r\n                                                    </i> \r\n                                                        </a> */}\r\n                                                    </span>\r\n                                                </span>\r\n                                            </span>\r\n                                        </div>\r\n\r\n                                        <div className=\"divider\"></div>\r\n\r\n                                        <div\r\n                                            className=\"card-body z-depth-2\"\r\n                                            style={{\r\n                                                backgroundColor: \"white\",\r\n                                                zIndex: 2,\r\n                                                position: \"relative\",\r\n                                            }}\r\n                                        >\r\n                                            {tmp[i].products.map((_val, j) => {\r\n                                                return (\r\n                                                    <div className=\"row\">\r\n                                                        <div className=\"col s12 m4\">\r\n                                                            <img\r\n                                                                style={{\r\n                                                                    width:\r\n                                                                        \"100%\",\r\n                                                                }}\r\n                                                                src={\r\n                                                                    tmp[i]\r\n                                                                        .products[\r\n                                                                        j\r\n                                                                    ].images[0]\r\n                                                                        .img_url\r\n                                                                }\r\n                                                            />\r\n                                                        </div>\r\n                                                        <div\r\n                                                            style={{\r\n                                                                display: \"flex\",\r\n                                                                flexDirection:\r\n                                                                    \"column\",\r\n                                                                justifyContent:\r\n                                                                    \"space-between\",\r\n                                                                height: \"100%\",\r\n                                                                paddingLeft: 0,\r\n                                                            }}\r\n                                                            className=\"col s12 m2 offset-m1\"\r\n                                                        >\r\n                                                            <p\r\n                                                                className=\"flow-text\"\r\n                                                                style={{\r\n                                                                    fontSize:\r\n                                                                        \"16px\",\r\n                                                                    fontWeight:\r\n                                                                        \"bold\",\r\n                                                                }}\r\n                                                            >\r\n                                                                {\r\n                                                                    tmp[i]\r\n                                                                        .products[\r\n                                                                        j\r\n                                                                    ].name\r\n                                                                }\r\n                                                            </p>\r\n                                                            <p>\r\n                                                                Qty:{\" \"}\r\n                                                                {\r\n                                                                    tmp[i]\r\n                                                                        .products[\r\n                                                                        j\r\n                                                                    ]\r\n                                                                        .quantityOrdered\r\n                                                                }{\" \"}\r\n                                                                ($\r\n                                                                {Number(\r\n                                                                    tmp[i]\r\n                                                                        .products[\r\n                                                                        j\r\n                                                                    ]\r\n                                                                        .productSubtotal /\r\n                                                                        100\r\n                                                                ).toFixed(2)}\r\n                                                                )\r\n                                                            </p>\r\n                                                        </div>\r\n                                                        <div className=\"col offset-m1 m3\">\r\n                                                            <p\r\n                                                                style={{\r\n                                                                    fontWeight: 700,\r\n                                                                }}\r\n                                                            >\r\n                                                                Order is being\r\n                                                                proccessed\r\n                                                            </p>\r\n                                                            <div\r\n                                                                style={{\r\n                                                                    width:\r\n                                                                        \"100%\",\r\n                                                                    borderBottom:\r\n                                                                        \" 4px solid #ff0000\",\r\n                                                                }}\r\n                                                            ></div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <h1>You haven't ordered anything yet</h1>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UsersOrders;\r\n","import { Redirect } from \"react-router\";\r\nimport { useGetProductQuery } from \"../../generated/graphql\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addProductToCart } from \"../../redux/actions/userAction\";\r\nimport { useEffect } from \"react\";\r\nimport anime from \"animejs\";\r\nimport Preloader from \"../Preloader\";\r\n\r\nconst ProductDetails = () => {\r\n    let product_id: number;\r\n    if (process.env.NODE_ENV === \"production\") {\r\n        product_id = Number(window.location.href.split(\":\")[2]);\r\n    } else {\r\n        product_id = Number(window.location.href.split(\":\")[3]);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { data, loading, error } = useGetProductQuery({\r\n        variables: {\r\n            product_id,\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll(\".tooltipped\");\r\n        M.Tooltip.init(elems);\r\n        if (!loading) {\r\n            // (stock * 100)/ org_stock\r\n            let percent = 50;\r\n            if (!data!.getProduct.org_stock) {\r\n                percent = 100;\r\n            } else {\r\n                percent =\r\n                    (data!.getProduct.stock * 100) / data!.getProduct.org_stock;\r\n            }\r\n\r\n            anime({\r\n                targets: \".filler\",\r\n                width: [\"0%\", `${percent}%`],\r\n                easing: \"easeInOutExpo\",\r\n            });\r\n        }\r\n    });\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!data || error) {\r\n        return <Redirect to=\"/products\" />;\r\n    }\r\n\r\n    let product: any = data!.getProduct;\r\n\r\n    console.log(\"product :>> \", product);\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-align\">{product.name}</h3>\r\n            <h6 className=\"center-align\">\r\n                ${Number(product.price / 100).toFixed(2)}\r\n            </h6>\r\n\r\n            <div className=\"row\">\r\n                <div\r\n                    className=\"col s4 offset-s2\"\r\n                    style={{ display: \"flex\", justifyContent: \"end\" }}\r\n                >\r\n                    <div>\r\n                        <img\r\n                            src={product.images[0].img_url || \"\"}\r\n                            alt=\"product\"\r\n                            style={{ maxWidth: \"100%\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s3 offset-s1\">\r\n                    <div style={{ marginBottom: \"16px\" }}>{product.desc}</div>\r\n                    <div\r\n                        className=\"divider\"\r\n                        style={{ marginBottom: \"16px\" }}\r\n                    ></div>\r\n                    <a\r\n                        className=\"tooltipped\"\r\n                        data-position=\"right\"\r\n                        data-tooltip={`${product.stock} remaining`}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                height: \"55px\",\r\n                                width: \"100%\",\r\n                                border: \"1px solid black\",\r\n                                marginBottom: \"16px\",\r\n                            }}\r\n                        >\r\n                            <span\r\n                                className=\"filler\"\r\n                                style={{\r\n                                    display: \"inline-block\",\r\n                                    height: \"100%\",\r\n                                    backgroundColor: \"black\",\r\n                                }}\r\n                            ></span>\r\n                        </div>\r\n                    </a>\r\n\r\n                    <button\r\n                        style={{\r\n                            width: \"100%\",\r\n                            backgroundColor: \"#000\",\r\n                            color: \"#fff\",\r\n                            border: \"none\",\r\n                        }}\r\n                        onClick={() => {\r\n                            dispatch(addProductToCart(product));\r\n                        }}\r\n                    >\r\n                        Add to Cart\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import { Product, ProductInCart } from \"../RootReducer\";\r\n\r\nexport const addProductToCart = (product: Product) => {\r\n    return {\r\n        type: \"ADD_PRODUCT_TO_CART\",\r\n        product,\r\n    };\r\n};\r\n\r\nexport const changeQuantityOnProduct = (\r\n    newQuantity: number,\r\n    productIndex: number\r\n) => {\r\n    return { type: \"CHANGE_QUANTITY_ON_PRODUCT\", newQuantity, productIndex };\r\n};\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    useCheckoutMutation,\r\n    useGetProductsQuery,\r\n} from \"../../generated/graphql\";\r\nimport { changeQuantityOnProduct } from \"../../redux/actions/userAction\";\r\nimport Preloader from \"../Preloader\";\r\n\r\nconst Cart = () => {\r\n    const { data, loading } = useGetProductsQuery();\r\n    const [checkout] = useCheckoutMutation();\r\n    const [state, setState] = useState({\r\n        refresh: false,\r\n        quantities: [],\r\n    });\r\n\r\n    const products = useSelector(state => state.productsInCart);\r\n    const dispatch = useDispatch();\r\n    console.log(\"products cart :>> \", products);\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    let total = 0;\r\n    for (let i = 0; i < products.length; i++) {\r\n        // cart item validation\r\n        total += products[i].price * products[i].quantity;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {products.length === 0 ? (\r\n                <h3 className=\"center-align\">Your Shopping Cart Is Empty!</h3>\r\n            ) : (\r\n                <>\r\n                    <h3 className=\"center-align\" style={{ fontWeight: \"bold\" }}>\r\n                        Subtotal\r\n                    </h3>\r\n                    <h6 className=\"center-align\" style={{ fontWeight: 600 }}>\r\n                        ${Number(total / 100).toFixed(2)}\r\n                    </h6>\r\n                    {products.map((_val, i) => {\r\n                        return (\r\n                            <>\r\n                                <div\r\n                                    id={`product-${i}`}\r\n                                    className={`product-${i} row container`}\r\n                                >\r\n                                    <div className={` col s4`}>\r\n                                        <img\r\n                                            src={products[i].images[0].img_url}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div\r\n                                        className=\"col s4\"\r\n                                        style={{\r\n                                            height: \"100%\",\r\n                                            display: \"flex\",\r\n                                            flexDirection: \"column\",\r\n                                            justifyContent: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <h6>{products[i].name}</h6>\r\n                                    </div>\r\n\r\n                                    <div className=\"col s2\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={\r\n                                                state.quantities[i] ||\r\n                                                state.quantities[i] === 0\r\n                                                    ? state.quantities[i]\r\n                                                    : products[i].quantity\r\n                                            }\r\n                                            minLength={0}\r\n                                            maxLength={2}\r\n                                            pattern=\"\\D\"\r\n                                            onBlur={e => {\r\n                                                dispatch(\r\n                                                    changeQuantityOnProduct(\r\n                                                        Number(e.target.value),\r\n                                                        i\r\n                                                    )\r\n                                                );\r\n\r\n                                                let tmp = state.quantities;\r\n                                                tmp.splice(i, 1);\r\n\r\n                                                // if (e.target.value === \"0\") {\r\n                                                //     anime({\r\n                                                //         duration: 400,\r\n                                                //         targets: `.product-${i}`,\r\n                                                //         easing: \"easeOutExpo\",\r\n                                                //         opacity: {\r\n                                                //             value: [1, 0],\r\n                                                //             easing: \"linear\",\r\n                                                //         },\r\n                                                //     });\r\n                                                // }\r\n                                                setState({\r\n                                                    ...state,\r\n                                                    quantities: tmp,\r\n                                                    refresh: !state.refresh,\r\n                                                });\r\n                                            }}\r\n                                            onChange={e => {\r\n                                                let tmp: any = state.quantities;\r\n\r\n                                                if (!e.target.value) {\r\n                                                    tmp[i] = 0;\r\n                                                    setState({\r\n                                                        ...state,\r\n                                                        quantities: tmp,\r\n                                                    });\r\n                                                }\r\n                                                if (\r\n                                                    e.target.value.match(/\\d/g)\r\n                                                ) {\r\n                                                    tmp[i] = Number(\r\n                                                        e.target.value\r\n                                                    );\r\n                                                    setState({\r\n                                                        ...state,\r\n                                                        quantities: tmp,\r\n                                                    });\r\n                                                }\r\n                                            }}\r\n                                            style={{\r\n                                                textAlign: \"center\",\r\n                                                border: \"1px solid #000\",\r\n                                                height: \"56px\",\r\n                                                width: \"56px\",\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col s2\">\r\n                                        <span></span>$\r\n                                        {Number(\r\n                                            products[i].price / 100\r\n                                        ).toFixed(2)}\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        );\r\n                    })}\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            marginBottom: \"40px\",\r\n                        }}\r\n                    >\r\n                        <a\r\n                            className=\"btn\"\r\n                            style={{\r\n                                marginTop: \"16px\",\r\n                                width: \"380px\",\r\n                                backgroundColor: \"#343145\",\r\n                            }}\r\n                            href=\"#/checkout\"\r\n                        >\r\n                            checkout\r\n                        </a>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n    useCheckoutMutation,\r\n    useGetCurrUserQuery,\r\n    useValidateCouponMutation,\r\n} from \"../../generated/graphql\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport { Redirect } from \"react-router\";\r\nimport { checkAuth } from \"../../CheckAuth\";\r\n\r\nfunction CardSection() {\r\n    const CARD_ELEMENT_OPTIONS: any = {\r\n        iconStyle: \"solid\",\r\n        hidePostalCode: true,\r\n        style: {\r\n            base: {\r\n                iconColor: \"rgb(240, 57, 122)\",\r\n                color: \"rgb(240, 57, 122)\",\r\n                fontSize: \"16px\",\r\n                fontFamily: '\"Open Sans\", sans-serif',\r\n                fontSmoothing: \"antialiased\",\r\n                \"::placeholder\": {\r\n                    color: \"#CFD7DF\",\r\n                },\r\n            },\r\n\r\n            invalid: {\r\n                color: \"#e5424d\",\r\n                \":focus\": {\r\n                    color: \"#303238\",\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return <CardElement options={CARD_ELEMENT_OPTIONS} />;\r\n}\r\n\r\nconst Checkout = props => {\r\n    const { data } = useGetCurrUserQuery();\r\n    const [checkout] = useCheckoutMutation();\r\n    const [validateCoupon] = useValidateCouponMutation();\r\n    const [discountPH, setDiscountPH] = useState(0);\r\n    const products = useSelector(state => state.productsInCart);\r\n    const [email, setEmail] = useState(data?.getCurrUser.email || \"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [coupon, setCoupon] = useState(\"\");\r\n    const [subtotal, setSubtotal] = useState(-1);\r\n    const [subtotalWtax, setSubtotalWtax] = useState(-1);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [billing, setBilling] = useState({\r\n        refresh: false,\r\n        email: \"\",\r\n        name: \"\",\r\n        address: {\r\n            city: \"\",\r\n            line1: \"\",\r\n            zip: \"\",\r\n            state: \"\",\r\n        },\r\n    });\r\n\r\n    const [address, setAddress] = useState({\r\n        city: \"\",\r\n        line1: \"\",\r\n        zip: \"\",\r\n        state: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll(\".autocomplete\");\r\n        M.Autocomplete.init(elems, {\r\n            data: {\r\n                Alabama: null,\r\n                Alaska: null,\r\n                Arizona: null,\r\n                Arkansas: null,\r\n                California: null,\r\n                Colorado: null,\r\n                Connecticut: null,\r\n                Delaware: null,\r\n                Florida: null,\r\n                Georgia: null,\r\n                Hawaii: null,\r\n                Idaho: null,\r\n                Illinois: null,\r\n                Indiana: null,\r\n                Iowa: null,\r\n                Kansas: null,\r\n                Kentucky: null,\r\n                Louisiana: null,\r\n                Maine: null,\r\n                Maryland: null,\r\n                Massachusettes: null,\r\n                Michigan: null,\r\n                Minnesota: null,\r\n                Mississippi: null,\r\n                Missouri: null,\r\n                Montana: null,\r\n                Nebraska: null,\r\n                Nevada: null,\r\n                \"New Hampshire\": null,\r\n                \"New Jersey\": null,\r\n                \"New Mexico\": null,\r\n                \"New York\": null,\r\n                \"North Carolina\": null,\r\n                \"North Dakota\": null,\r\n                Ohio: null,\r\n                Oklahoma: null,\r\n                Oregon: null,\r\n                Pennsylvania: null,\r\n                \"Rhode Island\": null,\r\n                \"South Carolina\": null,\r\n                \"South Dakota\": null,\r\n                Tennessee: null,\r\n                Texas: null,\r\n                Utah: null,\r\n                Vermont: null,\r\n                Virginia: null,\r\n                Washington: null,\r\n                \"West Virginia\": null,\r\n                Wisconsin: null,\r\n                Wyoming: null,\r\n            },\r\n        });\r\n    });\r\n\r\n    if (redirect) {\r\n        console.log(\"checkAuth() :>> \", checkAuth());\r\n        if (checkAuth()) {\r\n            return (\r\n                <Redirect\r\n                    to={{ pathname: \"/my-orders\", state: { reload: true } }}\r\n                />\r\n            );\r\n        } else {\r\n            return <Redirect to=\"/products\" />;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const { stripe, elements } = props;\r\n        if (!stripe || !elements) {\r\n            return;\r\n        }\r\n\r\n        const card = elements.getElement(CardElement);\r\n        const result = await stripe.createToken(card);\r\n\r\n        if (result.error) {\r\n            console.log(\"result.error :>> \", result.error);\r\n        } else {\r\n            console.log(\"result.token :>> \", result.token);\r\n            let tmp: any = address;\r\n            tmp.email = email;\r\n            let products_str = JSON.stringify(products),\r\n                token_str = JSON.stringify(result.token),\r\n                shipping_str = JSON.stringify(tmp);\r\n\r\n            let user_id;\r\n            if (!data) {\r\n                user_id = \"NONE\";\r\n            } else {\r\n                user_id = data.getCurrUser!.user_id!;\r\n            }\r\n\r\n            let billing_str = \"\";\r\n            if (billing.refresh) {\r\n                billing_str = JSON.stringify(billing);\r\n            } else {\r\n                billing_str = \"NONE\";\r\n            }\r\n\r\n            let response = await checkout({\r\n                variables: {\r\n                    token: token_str,\r\n                    user_id,\r\n                    products: products_str,\r\n                    shipping_info: shipping_str,\r\n                    billing_info: billing_str,\r\n                    coupon,\r\n                },\r\n            });\r\n\r\n            console.log(\"response :>> \", response);\r\n            if (!response!.data!.checkout) {\r\n                M.toast({ html: \"Failed to checkout\" });\r\n                M.toast({ html: \"Please double check your details\" });\r\n            } else if (response!.data!.checkout) {\r\n                setRedirect(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (subtotal === -1) {\r\n        let tmp_subtotal = 0;\r\n\r\n        for (let i = 0; i < products.length; i++) {\r\n            tmp_subtotal += products[i].price * products[i].quantity;\r\n        }\r\n\r\n        let tax = Math.round(tmp_subtotal * 0.095);\r\n        console.log(\"tax :>> \", tax);\r\n        // tmp_subtotal += tax;\r\n        setSubtotal(tmp_subtotal);\r\n        setSubtotalWtax(tmp_subtotal + tax);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\" style={{ height: \"100%\", margin: \"0\" }}>\r\n            <div className=\"col s12 m6 \" style={{ minHeight: \"93vh\" }}>\r\n                <div className=\"container\" style={{ marginTop: \"50px\" }}>\r\n                    <div className=\"row\">\r\n                        <a href=\"#/my-cart\">\r\n                            <svg\r\n                                style={{ marginRight: \"8px\" }}\r\n                                focusable=\"false\"\r\n                                width=\"12\"\r\n                                height=\"12\"\r\n                                viewBox=\"0 0 16 16\"\r\n                            >\r\n                                <path\r\n                                    d=\"M3.417 7H15a1 1 0 0 1 0 2H3.417l4.591 4.591a1 1 0 0 1-1.415 1.416l-6.3-6.3a1 1 0 0 1 0-1.414l6.3-6.3A1 1 0 0 1 8.008 2.41z\"\r\n                                    fill-rule=\"evenodd\"\r\n                                ></path>\r\n                            </svg>\r\n                            <span>Back To Cart</span>\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <div\r\n                            className=\"ProductSummary container\"\r\n                            style={{ marginTop: \"32px\" }}\r\n                        >\r\n                            <div\r\n                                className=\"ProductSummary-info\"\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    style={{\r\n                                        color: \"rgba(26,26,26,.6)\",\r\n                                        fontWeight: \"bold\",\r\n                                    }}\r\n                                >\r\n                                    Total\r\n                                </span>\r\n                                <span\r\n                                    style={{\r\n                                        fontSize: \"36px\",\r\n                                        letterSpacing: \"-.03rem\",\r\n                                        color: \"#303030\",\r\n                                    }}\r\n                                >\r\n                                    ${Number(subtotalWtax / 100).toFixed(2)}\r\n                                </span>\r\n                                <span\r\n                                    style={{\r\n                                        marginTop: \"32px\",\r\n                                        marginBottom: \"32px\",\r\n                                    }}\r\n                                    id=\"Products-summary\"\r\n                                >\r\n                                    {products.map((_val, i) => {\r\n                                        return (\r\n                                            <div\r\n                                                className=\"product\"\r\n                                                style={{\r\n                                                    marginBottom: \"16px\",\r\n                                                    display: \"flex\",\r\n                                                    justifyContent:\r\n                                                        \"space-between\",\r\n                                                }}\r\n                                            >\r\n                                                <div\r\n                                                    className=\"product-name\"\r\n                                                    style={{\r\n                                                        fontSize: \"16px\",\r\n                                                        fontWeight: 600,\r\n                                                    }}\r\n                                                >\r\n                                                    {products[i].name}\r\n                                                    {products[i].quantity !==\r\n                                                    1 ? (\r\n                                                        <>\r\n                                                            {\" \"}\r\n                                                            x\r\n                                                            {\r\n                                                                products[i]\r\n                                                                    .quantity\r\n                                                            }\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <></>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div\r\n                                                    className=\"product-subtotal\"\r\n                                                    style={{ fontWeight: 390 }}\r\n                                                >\r\n                                                    {Number(\r\n                                                        (products[i].price *\r\n                                                            products[i]\r\n                                                                .quantity) /\r\n                                                            100\r\n                                                    ).toFixed(2)}\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                    <div\r\n                                        className=\"subtotal\"\r\n                                        style={{\r\n                                            paddingBottom: \"16px\",\r\n                                            paddingTop: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Subtotal</span>\r\n                                        <span>\r\n                                            {Number(subtotal / 100).toFixed(2)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"divider\"></div>\r\n\r\n                                    <div\r\n                                        id=\"coupon-applied\"\r\n                                        style={{\r\n                                            display: \"none\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Coupon Applied</span>\r\n                                        <span style={{ fontWeight: \"bold\" }}>\r\n                                            -\r\n                                            {Number(discountPH / 100).toFixed(\r\n                                                2\r\n                                            )}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"row\" id=\"promocode-input\">\r\n                                        <div className=\"col s9\">\r\n                                            <div className=\"input-field\">\r\n                                                <input\r\n                                                    id=\"PromoCode\"\r\n                                                    type=\"text\"\r\n                                                    className=\"validate\"\r\n                                                    value={coupon}\r\n                                                    onChange={e =>\r\n                                                        setCoupon(\r\n                                                            e.target.value\r\n                                                        )\r\n                                                    }\r\n                                                />\r\n                                                <label htmlFor=\"PromoCode\">\r\n                                                    Add a promotion code\r\n                                                </label>\r\n                                                <span\r\n                                                    id=\"coupon-helper\"\r\n                                                    className=\"helper-text\"\r\n                                                    data-error=\"Please enter a valid email\"\r\n                                                ></span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col s3\">\r\n                                            <button\r\n                                                className=\"btn\"\r\n                                                style={{\r\n                                                    backgroundColor: \"#343145\",\r\n                                                    marginTop: \"25px\",\r\n                                                    marginBottom: \"15px\",\r\n                                                }}\r\n                                                onClick={async () => {\r\n                                                    //validate  coupon\r\n                                                    if (coupon.length !== 0) {\r\n                                                        let type = await validateCoupon(\r\n                                                            {\r\n                                                                variables: {\r\n                                                                    coupon_name: coupon,\r\n                                                                },\r\n                                                            }\r\n                                                        );\r\n                                                        console.log(\r\n                                                            \"type :>> \",\r\n                                                            type\r\n                                                        );\r\n                                                        if (\r\n                                                            type.data!\r\n                                                                .validateCoupon ===\r\n                                                            \"INVALID\"\r\n                                                        ) {\r\n                                                            document\r\n                                                                .getElementById(\r\n                                                                    \"PromoCode\"\r\n                                                                )!\r\n                                                                .classList.add(\r\n                                                                    \"invalid\"\r\n                                                                );\r\n\r\n                                                            document.getElementById(\r\n                                                                \"coupon-helper\"\r\n                                                            )!.attributes[\r\n                                                                \"data-error\"\r\n                                                            ].nodeValue = `The coupon you entered(${coupon}) is not valid`;\r\n\r\n                                                            setCoupon(\"\");\r\n                                                        } else if (\r\n                                                            type.data!\r\n                                                                .validateCoupon ===\r\n                                                            \"FREE_SHIPPING\"\r\n                                                        ) {\r\n                                                            // Handle Free Shipping here\r\n                                                        } else {\r\n                                                            // amount to subtract from subtotal = subtotal * percentage\r\n                                                            let percentage =\r\n                                                                \"0.\" +\r\n                                                                type.data!\r\n                                                                    .validateCoupon;\r\n\r\n                                                            let discount = Math.round(\r\n                                                                subtotal *\r\n                                                                    Number(\r\n                                                                        percentage\r\n                                                                    )\r\n                                                            );\r\n\r\n                                                            let tmp = subtotal;\r\n                                                            tmp -= discount;\r\n\r\n                                                            let tax = Math.round(\r\n                                                                tmp * 0.095\r\n                                                            );\r\n\r\n                                                            setSubtotalWtax(\r\n                                                                tmp + tax\r\n                                                            );\r\n                                                            console.log(\r\n                                                                \"tax :>> \",\r\n                                                                tax\r\n                                                            );\r\n                                                            setSubtotal(tmp);\r\n                                                            setDiscountPH(\r\n                                                                discount\r\n                                                            );\r\n\r\n                                                            // hide promo input and submit button\r\n                                                            document.getElementById(\r\n                                                                \"promocode-input\"\r\n                                                            )!.style.display =\r\n                                                                \"none\";\r\n                                                            // replace promo input and submit button with a icon that shows the coupon and discount applied\r\n                                                            document.getElementById(\r\n                                                                \"coupon-applied\"\r\n                                                            )!.style.display =\r\n                                                                \"flex\";\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            marginTop: \"8px\",\r\n                                            marginBottom: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Sales Tax</span>\r\n                                        <span style={{ fontWeight: \"bold\" }}>\r\n                                            {Number(\r\n                                                Math.round(subtotal * 0.095) /\r\n                                                    100\r\n                                            ).toFixed(2)}\r\n                                            (9.5%)\r\n                                        </span>\r\n                                    </span>\r\n\r\n                                    <div className=\"divider\"></div>\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            marginTop: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Total Due</span>\r\n                                        <span>\r\n                                            {Number(subtotalWtax / 100).toFixed(\r\n                                                2\r\n                                            )}\r\n                                        </span>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className=\"col s12 m6 z-depth-3 \"\r\n                style={{ minHeight: \"93vh\" }}\r\n            >\r\n                <div className=\"container\">\r\n                    <h2\r\n                        style={{\r\n                            color: \"rgba(26,26,26,.9)\",\r\n                            fontWeight: 500,\r\n                            fontSize: \"16px\",\r\n                        }}\r\n                    >\r\n                        Shipping Information\r\n                    </h2>\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"text\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please your email\"\r\n                        ></span>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"name\"\r\n                            value={name}\r\n                            type=\"text\"\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please your name\"\r\n                        ></span>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"address\"\r\n                            value={address.line1}\r\n                            type=\"text\"\r\n                            onChange={e =>\r\n                                setAddress({\r\n                                    ...address,\r\n                                    line1: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <label htmlFor=\"address\">Address</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please your address\"\r\n                        ></span>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s6\">\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"city\"\r\n                                    value={address.city}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setAddress({\r\n                                            ...address,\r\n                                            city: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"city\">City</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please your city\"\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"zip\"\r\n                                    value={address.zip}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setAddress({\r\n                                            ...address,\r\n                                            zip: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"zip\">Zip</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please your zip\"\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"state\"\r\n                            value={address.state}\r\n                            className=\"autocomplete\"\r\n                            type=\"text\"\r\n                            onChange={e =>\r\n                                setAddress({\r\n                                    ...address,\r\n                                    state: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <label htmlFor=\"state\">State</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please Pick a State\"\r\n                        ></span>\r\n                    </div>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <p>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"Billing_input\"\r\n                                onClick={() => {\r\n                                    setBilling({\r\n                                        refresh: !billing.refresh,\r\n                                        email: \"\",\r\n                                        name: \"\",\r\n                                        address: {\r\n                                            city: \"\",\r\n                                            line1: \"\",\r\n                                            zip: \"\",\r\n                                            state: \"\",\r\n                                        },\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <span>Billing is different from shipping</span>\r\n                        </label>\r\n                    </p>\r\n\r\n                    {billing.refresh ? (\r\n                        <>\r\n                            <h2\r\n                                style={{\r\n                                    color: \"rgba(26,26,26,.9)\",\r\n                                    fontWeight: 500,\r\n                                    fontSize: \"16px\",\r\n                                }}\r\n                            >\r\n                                Billing Information\r\n                            </h2>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_email\"\r\n                                    type=\"text\"\r\n                                    value={billing.email}\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            email: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_email\">\r\n                                    Billing Email\r\n                                </label>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_name\"\r\n                                    value={billing.name}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            name: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_name\">Name</label>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_address\"\r\n                                    value={billing.address.line1}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            address: {\r\n                                                ...billing.address,\r\n                                                line1: e.target.value,\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_address\">Address</label>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            id=\"billing_city\"\r\n                                            value={billing.address.city}\r\n                                            type=\"text\"\r\n                                            onChange={e =>\r\n                                                setBilling({\r\n                                                    ...billing,\r\n                                                    address: {\r\n                                                        ...billing.address,\r\n                                                        city: e.target.value,\r\n                                                    },\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor=\"billing_city\">\r\n                                            City\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            id=\"billing_zip\"\r\n                                            value={billing.address.zip}\r\n                                            type=\"text\"\r\n                                            onChange={e =>\r\n                                                setBilling({\r\n                                                    ...billing,\r\n                                                    address: {\r\n                                                        ...billing.address,\r\n                                                        zip: e.target.value,\r\n                                                    },\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor=\"billing_zip\">Zip</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_state\"\r\n                                    value={billing.address.state}\r\n                                    className=\"autocomplete\"\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            address: {\r\n                                                ...billing.address,\r\n                                                state: e.target.value,\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_state\">State</label>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                    <h2\r\n                        style={{\r\n                            color: \"rgba(26,26,26,.9)\",\r\n                            fontWeight: 500,\r\n                            fontSize: \"16px\",\r\n                        }}\r\n                    >\r\n                        Payment Details\r\n                    </h2>\r\n                    <CardSection />\r\n\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <button\r\n                            className=\"btn\"\r\n                            style={{\r\n                                marginTop: \"16px\",\r\n                                marginBottom: \"16px\",\r\n                                width: \"380px\",\r\n                                backgroundColor: \"#343145\",\r\n                            }}\r\n                            onClick={() => {\r\n                                if (\r\n                                    !name ||\r\n                                    !email ||\r\n                                    !address.line1 ||\r\n                                    !address.city ||\r\n                                    !address.zip ||\r\n                                    !address.state\r\n                                ) {\r\n                                    if (!email) {\r\n                                        document\r\n                                            .getElementById(\"email\")!\r\n                                            .classList.add(\"invalid\");\r\n                                    }\r\n                                    if (!name) {\r\n                                        document\r\n                                            .getElementById(\"name\")!\r\n                                            .classList.add(\"invalid\");\r\n                                    }\r\n\r\n                                    if (!address.line1) {\r\n                                        document\r\n                                            .getElementById(\"address\")!\r\n                                            .classList.add(\"invalid\");\r\n                                    }\r\n\r\n                                    if (!address.city) {\r\n                                        document\r\n                                            .getElementById(\"city\")!\r\n                                            .classList.add(\"invalid\");\r\n                                    }\r\n\r\n                                    if (!address.zip) {\r\n                                        document\r\n                                            .getElementById(\"zip\")!\r\n                                            .classList.add(\"invalid\");\r\n                                    }\r\n\r\n                                    if (!address.state) {\r\n                                        document\r\n                                            .getElementById(\"state\")!\r\n                                            .classList.add(\"invalid\");\r\n                                    }\r\n                                    M.toast({\r\n                                        html: \"Please fill in the missing data\",\r\n                                        classes: \"rounded\",\r\n                                    });\r\n                                } else {\r\n                                    handleSubmit();\r\n                                }\r\n                            }}\r\n                        >\r\n                            Pay ${Number(subtotalWtax / 100).toFixed(2)}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","const FAQ = () => {\r\n    var eyeColors = [\r\n        \"rgb(36, 146, 242)\",\r\n        \"rgb(154, 24, 213)\",\r\n        \"#ff0000\",\r\n        \"#000\",\r\n    ];\r\n    let eyeColor = eyeColors[Math.floor(Math.random() * eyeColors.length)];\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <h1>FAQ</h1>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div style={{ width: \"50%\" }}>\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderBottom: \" 4px solid #ff0000\",\r\n                        }}\r\n                    ></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>Late Orders</h3>\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - Please be patient as the pandemic has slowed down mail\r\n                        times.\r\n                    </p>\r\n                    <div className=\"divider\"></div>\r\n                    <h3 style={{ fontWeight: 550 }}>Lost or Damaged Items</h3>\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> Please{\" \"}\r\n                        <a href=\"#/contact\"> contact us </a> about any lost or\r\n                        damaged items, and attach your order number.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        -{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            CantRelate.JP\r\n                        </strong>{\" \"}\r\n                        is not responsible for lost or damaged items but will\r\n                        replace when possible.\r\n                    </p>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>\r\n                        Incorrect Shipping Address\r\n                    </h3>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - Please double-check your orders before you place them.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> If wrong\r\n                        address is inputted,{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            please\r\n                            <a href=\"#/contact\"> contact us</a> as soon as\r\n                            possible\r\n                        </strong>\r\n                        . We will do our best to update your order.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - However{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            CantRelate.JP\r\n                        </strong>{\" \"}\r\n                        is not responsible for the user's error, and we will not\r\n                        replace the order if it has been shipped.\r\n                    </p>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>\r\n                        Thank you for checking out Can't Relate.JP!\r\n                    </h3>\r\n\r\n                    <p\r\n                        className=\"flow-text\"\r\n                        style={{\r\n                            fontWeight: 525,\r\n                            marginLeft: \"32px\",\r\n                        }}\r\n                    >\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> Happy\r\n                        Shopping! ٩(\r\n                        <strong style={{ color: eyeColor }}>◕</strong>‿\r\n                        <strong style={{ color: eyeColor }}>◕</strong>\r\n                        ｡)۶\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FAQ;\r\n","let URI = \"\";\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    URI = \"https://infinite-bayou-56493.herokuapp.com\";\r\n} else {\r\n    URI = \"http://localhost:4000\";\r\n}\r\n\r\nexport default URI;\r\n","import { useState } from \"react\";\r\nimport URI from \"../URI\";\r\nimport \"../css/contact.scss\";\r\nimport { FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\nimport { checkAuth } from \"../CheckAuth\";\r\nimport { useGetCurrUserQuery } from \"../generated/graphql\";\r\nimport axios from \"axios\";\r\n\r\nconst Contact = () => {\r\n    const { data } = useGetCurrUserQuery();\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [orderNum, setOrderNum] = useState(\"\");\r\n\r\n    const submitForm = () => {\r\n        let tmp_email;\r\n        if (!!data) {\r\n            tmp_email = data!.getCurrUser.email;\r\n        } else {\r\n            tmp_email = email;\r\n        }\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${URI}/api/contact`,\r\n            data: {\r\n                name,\r\n                email: tmp_email,\r\n                message,\r\n                orderNum,\r\n            },\r\n        }).then((res: any) => {\r\n            console.log(\"res :>> \", res);\r\n            if (res.data === \"SUCCess\") {\r\n                M.toast({ html: \"SUCCessfully sent message.\" });\r\n                setName(\"\");\r\n                setEmail(\"\");\r\n                setMessage(\"\");\r\n                setOrderNum(\"\");\r\n            } else {\r\n                //handle failure\r\n                M.toast({ html: \"Failed to send message.\" });\r\n                M.toast({ html: \"Please Contact Us via Instagram or Email\" });\r\n            }\r\n        });\r\n\r\n        // fetch(`${URI}/api/contact`, {\r\n        //     method: \"POST\",\r\n        //     body: JSON.stringify({\r\n        //         name,\r\n        //         email: tmp_email,\r\n        //         message,\r\n        //         orderNum,\r\n        //     }),\r\n        // }).\r\n    };\r\n\r\n    return (\r\n        <div id=\"contact-form\" className=\"container\">\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <h1>Contact Us</h1>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginBottom: \"10px\",\r\n                }}\r\n            >\r\n                <span className=\"w-30\">\r\n                    <FaEnvelope\r\n                        style={{ marginRight: \"5px\", fontSize: \"20px\" }}\r\n                    />{\" \"}\r\n                    <a href=\"mailto:cantrelatejp@gmail.com\">\r\n                        cantrelatejp@gmail.com\r\n                    </a>\r\n                </span>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginBottom: \"10px\",\r\n                }}\r\n            >\r\n                <span className=\"w-30\">\r\n                    <FaInstagram\r\n                        style={{ marginRight: \"5px\", fontSize: \"20px\" }}\r\n                    />\r\n                    <a href=\"https://www.instagram.com/cantrelate.jp/\">\r\n                        @CantRelate.jp\r\n                    </a>\r\n                </span>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"orderNum\">Order Number</label>\r\n                    </div>\r\n                    <input\r\n                        id=\"orderNum\"\r\n                        type=\"text\"\r\n                        className=\"validate browser-default\"\r\n                        value={orderNum}\r\n                        onChange={e => setOrderNum(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"message\">Message</label>\r\n                    </div>\r\n                    <textarea\r\n                        id=\"message\"\r\n                        className=\"validate browser-default\"\r\n                        value={message}\r\n                        onChange={e => setMessage(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"name\">Your Name</label>\r\n                    </div>\r\n                    <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        className=\"validate browser-default\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {checkAuth() ? (\r\n                <></>\r\n            ) : (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div className=\"w-30\">\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <label className=\" browser-default\" htmlFor=\"email\">\r\n                                Your Email\r\n                            </label>\r\n                        </div>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"text\"\r\n                            className=\"validate browser-default\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <button\r\n                    className=\"btn black\"\r\n                    style={{ width: \"25%\", marginTop: \"30px\" }}\r\n                    onClick={() => submitForm()}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","const ShippingPolicy = () => {\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <h3\r\n                    style={{\r\n                        fontWeight: 550,\r\n                    }}\r\n                >\r\n                    Shipping Policy\r\n                </h3>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        borderBottom: \" 4px solid #ff0000\",\r\n                    }}\r\n                ></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"divider\"></div>\r\n\r\n                <div style={{ width: \"50%\" }}>\r\n                    <blockquote style={{ borderLeft: \"5px solid black\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>Preorders</h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please allow 2-3 weeks for orders to be processed\r\n                            after pre-orders close.\r\n                        </p>\r\n                    </blockquote>\r\n                    <div className=\"divider\"></div>\r\n                    <blockquote style={{ borderLeft: \"5px solid black\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            Apparel or other specialty items\r\n                        </h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please allow for 3-4 weeks as they are specialty\r\n                            items\r\n                        </p>\r\n                    </blockquote>\r\n                    <div className=\"divider\"></div>\r\n                    <blockquote style={{ borderLeft: \"5px solid #ff0000\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            Lost or damaged items\r\n                        </h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please contact via instagram or email.\r\n                        </p>\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShippingPolicy;\r\n","import { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Products from \"../components/products/Products\";\r\nimport UsersOrders from \"../components/UsersOrders\";\r\nimport ProductDetails from \"../components/products/ProductDetails\";\r\nimport Cart from \"../components/checkout/Cart\";\r\nimport Checkout from \"../components/checkout/Checkout\";\r\nimport { Elements, ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport FAQ from \"../components/FAQ\";\r\nimport Contact from \"../components/Contact\";\r\nimport ShippingPolicy from \"../components/ShippingPolicy\";\r\n\r\nexport const Routes = () => {\r\n    const stripePromise = loadStripe(\r\n        \"pk_test_51IM63dFngR9vHhwSep5ZkKLLach7ZP7BXFkDjSgo6FmQRdy8DOkV96RdHREb1L4vMgQ1fK6FlNfwDdlFX8zKdf1D00wHpHGbCC\"\r\n    );\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/products\" render={() => <Products />} />\r\n            <Route\r\n                exact\r\n                path=\"/product-details:id\"\r\n                render={() => <ProductDetails />}\r\n            />\r\n            <Route exact path=\"/my-orders\" render={() => <UsersOrders />} />\r\n            <Route exact path=\"/my-cart\" render={() => <Cart />} />\r\n            <Route\r\n                exact\r\n                path=\"/checkout\"\r\n                render={() => (\r\n                    <Elements stripe={stripePromise}>\r\n                        <ElementsConsumer>\r\n                            {({ stripe, elements }) => (\r\n                                <Checkout stripe={stripe} elements={elements} />\r\n                            )}\r\n                        </ElementsConsumer>\r\n                    </Elements>\r\n                )}\r\n            />\r\n            <Route\r\n                exact\r\n                path=\"/shipping_policy\"\r\n                render={() => <ShippingPolicy />}\r\n            />\r\n            <Route exact path=\"/FAQ\" render={() => <FAQ />} />\r\n            <Route exact path=\"/contact\" render={() => <Contact />} />\r\n            <Route render={() => <Redirect to=\"/products\" />} />\r\n        </Switch>\r\n    );\r\n};\r\n","import Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport { Routes } from \"./routes/Routes\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./css/app.scss\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <div style={{ height: \"100%\", width: \"100%\" }}>\n                    <Navbar />\n                    <Routes />\n                    <Footer />\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\nimport { setAccessToken } from \"./accessToken\";\r\nimport App from \"./App\";\r\nimport Preloader from \"./components/Preloader\";\r\nimport URI from \"./URI\";\r\n\r\nconst AppWrapper = () => {\r\n    const [pageLoader, setPageLoader] = useState(true);\r\n\r\n    useEffect(() => {\r\n        //get new accessToken & refreshToken with fetch to URI/refresh_token\r\n        try {\r\n            let tmp = localStorage.getItem(\"iru5\") as string;\r\n            fetch(`${URI}/refresh_token`, {\r\n                method: \"POST\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    refreshToken: tmp,\r\n                },\r\n            }).then(async res => {\r\n                const { accessToken, refreshToken } = await res.json();\r\n                setAccessToken(accessToken);\r\n                localStorage.setItem(\"iru5\", refreshToken);\r\n                setPageLoader(false);\r\n            });\r\n        } catch {\r\n            setPageLoader(false);\r\n        }\r\n    });\r\n\r\n    if (pageLoader) {\r\n        return <Preloader />;\r\n    } else {\r\n        return <App />;\r\n    }\r\n};\r\n\r\nexport default AppWrapper;\r\n","import { useGetProductQuery, useGetProductsQuery } from \"../generated/graphql\";\r\n\r\nexport interface Product {\r\n    product_id: number;\r\n    name: string;\r\n    price: number;\r\n    stock: number;\r\n}\r\n\r\nexport interface ProductInCart {\r\n    product_id: number;\r\n    name: string;\r\n    price: number;\r\n    stock: number;\r\n    quantity: number;\r\n}\r\n\r\nexport interface State {\r\n    productsInCart: [\r\n        {\r\n            product_id: number;\r\n            name: string;\r\n            price: number;\r\n            stock: number;\r\n            quantity: number;\r\n        }\r\n    ];\r\n}\r\n\r\nconst loadState = () => {\r\n    try {\r\n        let serializedState = localStorage.getItem(\"store-state\");\r\n        if (serializedState) {\r\n            let state = JSON.parse(serializedState);\r\n            console.log(\"state :>> \", state);\r\n            return state;\r\n        }\r\n    } catch (err) {\r\n        console.log(\"err :>> \", err);\r\n    }\r\n};\r\n\r\nconst initState = loadState() || {\r\n    productsInCart: [],\r\n};\r\n\r\ntype Actions = {\r\n    type: string;\r\n    product?: Product;\r\n    newQuantity?: number;\r\n    productIndex?: number;\r\n};\r\n\r\nexport const RootReducer = (state = initState, action: Actions) => {\r\n    switch (action.type) {\r\n        case \"ADD_PRODUCT_TO_CART\": {\r\n            let tmp = state.productsInCart;\r\n\r\n            //if product is already in cart increase quantity instead of adding a new product\r\n            for (let i = 0; i < tmp.length; i++) {\r\n                if (tmp[i].product_id === action.product!.product_id) {\r\n                    tmp[i].quantity++;\r\n                    return { ...state, productsInCart: tmp };\r\n                }\r\n            }\r\n            let tmp2: any = action.product;\r\n            tmp2.quantity = 1;\r\n\r\n            tmp.push(tmp2);\r\n\r\n            return { ...state, productsInCart: tmp };\r\n        }\r\n\r\n        case \"CHANGE_QUANTITY_ON_PRODUCT\": {\r\n            let productsInCart = state.productsInCart;\r\n            if (action.newQuantity === 0) {\r\n                //remove product if quantity is 0\r\n                productsInCart.splice(action.productIndex!, 1);\r\n            } else {\r\n                productsInCart[\r\n                    action.productIndex!\r\n                ].quantity = action.newQuantity!;\r\n            }\r\n            return { ...state, productsInCart };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { RootReducer } from \"./RootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst saveState = state => {\r\n    try {\r\n        let serializedState = JSON.stringify(state);\r\n        localStorage.setItem(\"store-state\", serializedState);\r\n    } catch (err) {\r\n        console.log(\"err :>> \", err);\r\n    }\r\n};\r\n\r\nexport const store = createStore(RootReducer as any, composeWithDevTools());\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n","import ReactDOM from \"react-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport jwtDecode from \"jwt-decode\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ApolloLink, Observable } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { onError } from \"apollo-link-error\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\nimport URI from \"./URI\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/ReduxStore\";\n\nconst cache = new InMemoryCache({});\nconst requestLink = new ApolloLink(\n    (operation, forward) =>\n        new Observable(observer => {\n            let handle: any;\n            Promise.resolve(operation)\n                .then(operation => {\n                    const accessToken = getAccessToken();\n                    operation.setContext({\n                        headers: {\n                            authorization: accessToken\n                                ? `bearer ${accessToken}`\n                                : \"\",\n                        },\n                    });\n                })\n                .then(() => {\n                    handle = forward(operation).subscribe({\n                        next: observer.next.bind(observer),\n                        error: observer.error.bind(observer),\n                        complete: observer.complete.bind(observer),\n                    });\n                })\n                .catch(observer.error.bind(observer));\n\n            return () => {\n                if (handle) handle.unsubscribe();\n            };\n        })\n);\n\nconst client = new ApolloClient({\n    link: ApolloLink.from([\n        new TokenRefreshLink({\n            accessTokenField: \"accessToken\",\n            isTokenValidOrUndefined: () => {\n                const token = getAccessToken();\n\n                if (!token) {\n                    return true;\n                }\n\n                try {\n                    const { exp } = jwtDecode(token) as any;\n                    if (Date.now() >= exp * 1000) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                } catch {\n                    return false;\n                }\n            },\n            fetchAccessToken: () => {\n                return fetch(`${URI}/refresh_token`, {\n                    method: \"POST\",\n                    credentials: \"include\",\n                });\n            },\n            handleFetch: (accessToken: string) => {\n                setAccessToken(accessToken);\n            },\n            handleError: (err: any) => {\n                console.warn(\"Your refresh token is invalid. Try to relogin\");\n                console.error(err);\n            },\n        }) as any,\n        onError(({ graphQLErrors, networkError }) => {\n            console.log(graphQLErrors);\n            console.log(networkError);\n        }),\n        requestLink,\n        new HttpLink({\n            uri: `${URI}/graphql`,\n            credentials: \"include\",\n        }),\n    ]),\n    cache,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client as any}>\n        <Provider store={store}>\n            <AppWrapper />\n        </Provider>\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
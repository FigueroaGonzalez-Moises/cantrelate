{"version":3,"sources":["accessToken.ts","CheckAuth.ts","generated/graphql.tsx","components/navbar/AnnouncementBar.tsx","images/White_Blank_Logo.png","components/navbar/Logo.tsx","components/navbar/Navbar.tsx","components/footer/CopyrightBar.tsx","images/Blank_Footer_logo.png","components/footer/Footer.tsx","components/products/Products.tsx","components/UsersOrders.tsx","redux/actions/userAction.ts","components/products/ProductDetails.tsx","components/checkout/Cart.tsx","components/checkout/Paid.tsx","components/checkout/Checkout.tsx","components/FAQ.tsx","components/Contact.tsx","components/ShippingPolicy.tsx","components/OrderSuccess.tsx","components/Sections/ViewSection.tsx","routes/Routes.tsx","App.tsx","components/Preloader.tsx","GetMaintenance.ts","URI.ts","AppWrapper.tsx","redux/RootReducer.tsx","redux/ReduxStore.tsx","index.tsx"],"names":["accessToken","setAccessToken","s","getAccessToken","checkAuth","token","exp","jwtDecode","Date","now","checkMainAuth","AddPaypalOrderDocument","gql","CheckoutDocument","GetAnnouncementsDocument","GetCurrUserDocument","GetMaintenanceDocument","GetProductDocument","GetProductsDocument","useGetProductsQuery","baseOptions","Apollo","GetSectionByIdDocument","GetSectionsDocument","GetSectionsProductsDocument","GetSocialsDocument","GetUsersOrdersDocument","LoginDocument","MaintenanceLoginDocument","PaypalCheckoutDocument","ValidateCouponDocument","AnnouncementBar","data","loading","useEffect","document","getElementById","i","getAnnouncements","length","textWrapper","innerHTML","textContent","replace","tl","anime","timeline","loop","loopBegin","style","display","loopComplete","add","targets","translateY","translateZ","opacity","easing","duration","delay","el","translateX","width","backgroundColor","color","zIndex","position","className","justifyContent","id","map","_val","text","href","marginRight","marginLeft","Logo","src","LogoSrc","alt","Navbar","elems","querySelectorAll","M","Sidenav","init","login","handler","res","a","variables","user_id","googleId","email","profileObj","response","localStorage","setItem","refreshToken","window","location","reload","signIn","useGoogleLogin","clientId","onSuccess","logout","top","data-target","left","transform","onClick","paddingTop","textAlign","CopyrightBar","border","marginTop","marginBottom","fontSize","fontWeight","Footer","component","console","log","getSocials","height","FooterLogo","social_url","social_logo","SocialIcon","GetSections","sdata","sloading","Products","_t","value","scale","stagger","start","getSections","section","margin","section_id","thumbnail","name","getProducts","product","product_id","images","img_url","Number","price","toFixed","showDetails","tmp","classList","contains","products","Subtotal","sTotal","productSubtotal","quantityOrdered","productsSubtotal","shippingTotal","calcSubtotals","remove","UsersOrders","useLocation","state","getUsersOrders","reverse","minHeight","str","dateOfPurchase","amountOff","order_total","discount","date_of_purchase","split","padding","borderLeft","paddingBottom","paddingRight","paddingLeft","order_id","coupon","j","flexDirection","tracking_num","borderBottom","changeQuantityOnProduct","newQuantity","productIndex","type","ProductDetails","dispatch","useDispatch","error","Tooltip","Carousel","percent","getProduct","org_stock","stock","to","maxHeight","getInstance","prev","next","maxWidth","desc","data-position","data-tooltip","toast","html","addProductToCart","Cart","useSelector","productsInCart","useState","refresh","quantities","setState","total","useRef","current","quantity","minLength","maxLength","pattern","onBlur","e","target","splice","complete","onChange","match","Paid","CardSection","options","iconStyle","hidePostalCode","base","iconColor","fontFamily","fontSmoothing","invalid","Checkout","props","useCheckoutMutation","checkout","useValidateCouponMutation","validateCoupon","usePaypalCheckoutMutation","paypalCheckout","useAddPaypalOrderMutation","addPaypalOrder","discountPH","setDiscountPH","setName","setCoupon","subtotal","setSubtotal","Total","setTotal","shipping","setShipping","redirect","setRedirect","address","city","line1","zip","country","billing","setBilling","paidFor","setPaidFor","err","setError","setAddress","paypalRef","couponRef","Autocomplete","Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusettes","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","Ohio","Oklahoma","Oregon","Pennsylvania","Tennessee","Texas","Utah","Vermont","Virginia","Washington","Wisconsin","Wyoming","win","children","paypal","Buttons","createOrder","actions","products_str","JSON","stringify","order","create","purchase_units","description","amount","currency_code","onApprove","_ppdata","capture","purchaseUnits_str","getCurrUser","payee","email_address","onError","render","pathname","handleSubmit","stripe","elements","card","getElement","CardElement","createToken","result","token_str","shipping_str","billing_str","shipping_info","billing_info","tmp_subtotal","shipping_total","tax","Math","round","focusable","viewBox","d","fillRule","letterSpacing","toLowerCase","htmlFor","data-error","coupon_name","attributes","nodeValue","percentage","ref","borderRadius","tmp_email","validateForm","FAQ","eyeColors","eyeColor","floor","random","Contact","ShippingPolicy","OrderSuccess","GetSection","ViewSection","getSectionById","getSectionsProducts","Routes","stripePromise","loadStripe","exact","path","App","Preloader","setTimeout","_el","elasticity","GetMaintenance","URI","AppWrapper","maintLogin","maintance","pageLoader","setPageLoader","setMainLoader","getItem","fetch","method","credentials","headers","then","json","getMaintenance","acc","pass","access_id","password","maintenanceLogin","initState","serializedState","parse","loadState","store","createStore","action","tmp2","push","composeWithDevTools","subscribe","saveState","getState","cache","InMemoryCache","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","setContext","authorization","bind","catch","unsubscribe","client","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","fetchAccessToken","handleFetch","handleError","warn","graphQLErrors","networkError","HttpLink","uri","ReactDOM"],"mappings":"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","file":"static/js/main.9e603020.chunk.js","sourcesContent":["export let accessToken = \"\";\r\n\r\nexport const setAccessToken = (s: string) => {\r\n    accessToken = s;\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n    return accessToken;\r\n};\r\n\r\nexport const setMainAccessToken = (s: string) => {\r\n    accessToken = s;\r\n};\r\n\r\nexport const getMainAccessToken = () => {\r\n    return accessToken;\r\n};\r\n","import { getAccessToken, getMainAccessToken } from \"./accessToken\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const checkAuth = () => {\r\n    const token = getAccessToken();\r\n    if (!token) {\r\n        return false;\r\n    }\r\n    try {\r\n        const { exp } = jwtDecode(token) as any;\r\n        if (Date.now() >= exp * 1000) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    } catch {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const checkMainAuth = () => {\r\n    const token = getMainAccessToken();\r\n    if (!token) {\r\n        return false;\r\n    }\r\n    try {\r\n        const { exp } = jwtDecode(token) as any;\r\n        if (Date.now() >= exp * 1000) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    } catch {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default checkAuth();\r\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  getUsersOrders: Array<GetOrdersResponse>;\n  getOrders: Array<GetOrdersResponse>;\n  getOrderById: GetOrdersResponse;\n  getProducts: Array<ProductsWithImages>;\n  getProduct: ProductsWithImages;\n  getApiUsers: Array<ApiUser>;\n  getCurrUser: Users;\n  getCoupons: Array<Coupons>;\n  getAnnouncements: Array<Announcements>;\n  getMaintenance: Scalars['Boolean'];\n  getSocials: Array<Socials>;\n  getSections: Array<Sections>;\n  getSectionById: Sections;\n  getProductsSections: Array<SectionsOrNull>;\n  getSectionsProducts: Array<ProductsWithImages>;\n};\n\n\nexport type QueryGetOrderByIdArgs = {\n  order_id: Scalars['Float'];\n};\n\n\nexport type QueryGetProductArgs = {\n  product_id: Scalars['Float'];\n};\n\n\nexport type QueryGetSocialsArgs = {\n  component: Scalars['String'];\n};\n\n\nexport type QueryGetSectionByIdArgs = {\n  section_id: Scalars['Float'];\n};\n\n\nexport type QueryGetProductsSectionsArgs = {\n  product_id: Scalars['Float'];\n};\n\n\nexport type QueryGetSectionsProductsArgs = {\n  section_id: Scalars['Float'];\n};\n\nexport type GetOrdersResponse = {\n  __typename?: 'GetOrdersResponse';\n  products?: Maybe<Array<OrdersProductsWithImages>>;\n  order_id: Scalars['Float'];\n  tracking_num?: Maybe<Scalars['String']>;\n  order_total?: Maybe<Scalars['Float']>;\n  coupon?: Maybe<Scalars['String']>;\n  discount?: Maybe<Scalars['String']>;\n  shipping?: Maybe<Scalars['String']>;\n  warning?: Maybe<Scalars['String']>;\n  date_of_purchase?: Maybe<Scalars['String']>;\n};\n\nexport type OrdersProductsWithImages = {\n  __typename?: 'OrdersProductsWithImages';\n  product_id: Scalars['Int'];\n  name: Scalars['String'];\n  desc: Scalars['String'];\n  price: Scalars['Int'];\n  stock: Scalars['Int'];\n  org_stock?: Maybe<Scalars['Int']>;\n  exp_date?: Maybe<Scalars['String']>;\n  quantityOrdered: Scalars['Float'];\n  productSubtotal?: Maybe<Scalars['Float']>;\n  images?: Maybe<Array<Images>>;\n};\n\nexport type Images = {\n  __typename?: 'Images';\n  img_id: Scalars['Float'];\n  img_url: Scalars['String'];\n  index: Scalars['Float'];\n};\n\nexport type ProductsWithImages = {\n  __typename?: 'ProductsWithImages';\n  product_id: Scalars['Int'];\n  name: Scalars['String'];\n  desc: Scalars['String'];\n  price: Scalars['Int'];\n  stock: Scalars['Int'];\n  org_stock?: Maybe<Scalars['Int']>;\n  exp_date?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Images>>;\n};\n\nexport type ApiUser = {\n  __typename?: 'ApiUser';\n  uuid: Scalars['Float'];\n  username: Scalars['String'];\n  password: Scalars['String'];\n};\n\nexport type Users = {\n  __typename?: 'Users';\n  uuid: Scalars['Float'];\n  user_id?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n};\n\nexport type Coupons = {\n  __typename?: 'Coupons';\n  coupon_id: Scalars['String'];\n  coupon_name: Scalars['String'];\n  discount?: Maybe<Scalars['String']>;\n};\n\nexport type Announcements = {\n  __typename?: 'Announcements';\n  id: Scalars['String'];\n  text: Scalars['String'];\n};\n\nexport type Socials = {\n  __typename?: 'Socials';\n  id: Scalars['Int'];\n  index: Scalars['Int'];\n  component: Scalars['String'];\n  display: Scalars['Boolean'];\n  social_logo: Scalars['String'];\n  social_url: Scalars['String'];\n};\n\nexport type Sections = {\n  __typename?: 'Sections';\n  section_id: Scalars['Int'];\n  name: Scalars['String'];\n  thumbnail: Scalars['String'];\n};\n\nexport type SectionsOrNull = {\n  __typename?: 'SectionsOrNull';\n  section_id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n  thumbnail?: Maybe<Scalars['String']>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  editTracking: Scalars['Boolean'];\n  paypalCheckout: Scalars['String'];\n  addPaypalOrder: Scalars['Boolean'];\n  checkout: Scalars['String'];\n  addProduct: Scalars['String'];\n  deleteProduct: Scalars['Boolean'];\n  updateProduct: Scalars['Boolean'];\n  addImgToProduct: Scalars['Boolean'];\n  removeImgFromProduct: Scalars['Boolean'];\n  apiLogin: AuthResponse;\n  deleteApiUser: Scalars['Boolean'];\n  addApiUser: Scalars['Boolean'];\n  removeWarning: Scalars['Boolean'];\n  login: AuthResponse;\n  addCoupon: Scalars['Boolean'];\n  deleteCoupon: Scalars['Boolean'];\n  validateCoupon: Scalars['String'];\n  addAnnouncement: Scalars['Boolean'];\n  deleteAnnouncement: Scalars['Boolean'];\n  toggleMaintenance: Scalars['Boolean'];\n  maintenanceLogin: AuthResponse;\n  updateSocialUrl: Scalars['Boolean'];\n  toggleSocialDisplay: Scalars['Boolean'];\n  initSocials: Scalars['Boolean'];\n  addSection: Scalars['Boolean'];\n  deleteSection: Scalars['Boolean'];\n  addProductToSection: Scalars['String'];\n  removeProductFromSection: Scalars['Boolean'];\n  updateSection: Scalars['Boolean'];\n};\n\n\nexport type MutationEditTrackingArgs = {\n  order_id: Scalars['Float'];\n  new_tracking_num: Scalars['String'];\n};\n\n\nexport type MutationPaypalCheckoutArgs = {\n  coupon: Scalars['String'];\n  products: Scalars['String'];\n};\n\n\nexport type MutationAddPaypalOrderArgs = {\n  purchase_units: Scalars['String'];\n  products: Scalars['String'];\n  coupon: Scalars['String'];\n  user_id: Scalars['String'];\n};\n\n\nexport type MutationCheckoutArgs = {\n  coupon: Scalars['String'];\n  billing_info: Scalars['String'];\n  shipping_info: Scalars['String'];\n  products: Scalars['String'];\n  user_id: Scalars['String'];\n  token: Scalars['String'];\n};\n\n\nexport type MutationAddProductArgs = {\n  stock: Scalars['Float'];\n  price: Scalars['Float'];\n  desc: Scalars['String'];\n  name: Scalars['String'];\n};\n\n\nexport type MutationDeleteProductArgs = {\n  product_id: Scalars['Float'];\n};\n\n\nexport type MutationUpdateProductArgs = {\n  stock: Scalars['Float'];\n  price: Scalars['Float'];\n  desc: Scalars['String'];\n  product_id: Scalars['Float'];\n  name: Scalars['String'];\n};\n\n\nexport type MutationAddImgToProductArgs = {\n  product_id: Scalars['Float'];\n  img_url: Scalars['String'];\n};\n\n\nexport type MutationRemoveImgFromProductArgs = {\n  img_id: Scalars['Float'];\n};\n\n\nexport type MutationApiLoginArgs = {\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\n\nexport type MutationDeleteApiUserArgs = {\n  uuid: Scalars['Float'];\n};\n\n\nexport type MutationAddApiUserArgs = {\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\n\nexport type MutationRemoveWarningArgs = {\n  order_id: Scalars['Float'];\n};\n\n\nexport type MutationLoginArgs = {\n  email: Scalars['String'];\n  user_id: Scalars['String'];\n};\n\n\nexport type MutationAddCouponArgs = {\n  discount: Scalars['String'];\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationDeleteCouponArgs = {\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationValidateCouponArgs = {\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationAddAnnouncementArgs = {\n  text: Scalars['String'];\n};\n\n\nexport type MutationDeleteAnnouncementArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type MutationMaintenanceLoginArgs = {\n  password: Scalars['String'];\n  access_id: Scalars['String'];\n};\n\n\nexport type MutationUpdateSocialUrlArgs = {\n  id: Scalars['Float'];\n  url: Scalars['String'];\n};\n\n\nexport type MutationToggleSocialDisplayArgs = {\n  id: Scalars['Float'];\n};\n\n\nexport type MutationAddSectionArgs = {\n  thumbnail: Scalars['String'];\n  name: Scalars['String'];\n};\n\n\nexport type MutationDeleteSectionArgs = {\n  section_id: Scalars['Float'];\n};\n\n\nexport type MutationAddProductToSectionArgs = {\n  section_id: Scalars['Float'];\n  product_id: Scalars['Float'];\n};\n\n\nexport type MutationRemoveProductFromSectionArgs = {\n  section_id: Scalars['Float'];\n  product_id: Scalars['Float'];\n};\n\n\nexport type MutationUpdateSectionArgs = {\n  section_id: Scalars['Float'];\n  thumbnail: Scalars['String'];\n  name: Scalars['String'];\n};\n\nexport type AuthResponse = {\n  __typename?: 'AuthResponse';\n  accessToken?: Maybe<Scalars['String']>;\n  refreshToken?: Maybe<Scalars['String']>;\n};\n\nexport type AddPaypalOrderMutationVariables = Exact<{\n  user_id: Scalars['String'];\n  coupon: Scalars['String'];\n  products: Scalars['String'];\n  purchase_units: Scalars['String'];\n}>;\n\n\nexport type AddPaypalOrderMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'addPaypalOrder'>\n);\n\nexport type CheckoutMutationVariables = Exact<{\n  token: Scalars['String'];\n  user_id: Scalars['String'];\n  products: Scalars['String'];\n  shipping_info: Scalars['String'];\n  billing_info: Scalars['String'];\n  coupon: Scalars['String'];\n}>;\n\n\nexport type CheckoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'checkout'>\n);\n\nexport type GetAnnouncementsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAnnouncementsQuery = (\n  { __typename?: 'Query' }\n  & { getAnnouncements: Array<(\n    { __typename?: 'Announcements' }\n    & Pick<Announcements, 'id' | 'text'>\n  )> }\n);\n\nexport type GetCurrUserQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetCurrUserQuery = (\n  { __typename?: 'Query' }\n  & { getCurrUser: (\n    { __typename?: 'Users' }\n    & Pick<Users, 'email' | 'uuid' | 'user_id'>\n  ) }\n);\n\nexport type GetMaintenanceQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetMaintenanceQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'getMaintenance'>\n);\n\nexport type GetProductQueryVariables = Exact<{\n  product_id: Scalars['Float'];\n}>;\n\n\nexport type GetProductQuery = (\n  { __typename?: 'Query' }\n  & { getProduct: (\n    { __typename?: 'ProductsWithImages' }\n    & Pick<ProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'org_stock' | 'exp_date'>\n    & { images?: Maybe<Array<(\n      { __typename?: 'Images' }\n      & Pick<Images, 'img_id' | 'img_url'>\n    )>> }\n  ) }\n);\n\nexport type GetProductsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetProductsQuery = (\n  { __typename?: 'Query' }\n  & { getProducts: Array<(\n    { __typename?: 'ProductsWithImages' }\n    & Pick<ProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'org_stock' | 'exp_date'>\n    & { images?: Maybe<Array<(\n      { __typename?: 'Images' }\n      & Pick<Images, 'img_id' | 'img_url'>\n    )>> }\n  )> }\n);\n\nexport type GetSectionByIdQueryVariables = Exact<{\n  section_id: Scalars['Float'];\n}>;\n\n\nexport type GetSectionByIdQuery = (\n  { __typename?: 'Query' }\n  & { getSectionById: (\n    { __typename?: 'Sections' }\n    & Pick<Sections, 'section_id' | 'thumbnail' | 'name'>\n  ) }\n);\n\nexport type GetSectionsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetSectionsQuery = (\n  { __typename?: 'Query' }\n  & { getSections: Array<(\n    { __typename?: 'Sections' }\n    & Pick<Sections, 'section_id' | 'name' | 'thumbnail'>\n  )> }\n);\n\nexport type GetSectionsProductsQueryVariables = Exact<{\n  section_id: Scalars['Float'];\n}>;\n\n\nexport type GetSectionsProductsQuery = (\n  { __typename?: 'Query' }\n  & { getSectionsProducts: Array<(\n    { __typename?: 'ProductsWithImages' }\n    & Pick<ProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'org_stock'>\n    & { images?: Maybe<Array<(\n      { __typename?: 'Images' }\n      & Pick<Images, 'img_id' | 'img_url' | 'index'>\n    )>> }\n  )> }\n);\n\nexport type GetSocialsQueryVariables = Exact<{\n  component: Scalars['String'];\n}>;\n\n\nexport type GetSocialsQuery = (\n  { __typename?: 'Query' }\n  & { getSocials: Array<(\n    { __typename?: 'Socials' }\n    & Pick<Socials, 'id' | 'index' | 'social_url' | 'social_logo' | 'display'>\n  )> }\n);\n\nexport type GetUsersOrdersQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetUsersOrdersQuery = (\n  { __typename?: 'Query' }\n  & { getUsersOrders: Array<(\n    { __typename?: 'GetOrdersResponse' }\n    & Pick<GetOrdersResponse, 'order_id' | 'tracking_num' | 'order_total' | 'coupon' | 'discount' | 'date_of_purchase'>\n    & { products?: Maybe<Array<(\n      { __typename?: 'OrdersProductsWithImages' }\n      & Pick<OrdersProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'exp_date' | 'quantityOrdered' | 'productSubtotal'>\n      & { images?: Maybe<Array<(\n        { __typename?: 'Images' }\n        & Pick<Images, 'img_id' | 'img_url' | 'index'>\n      )>> }\n    )>> }\n  )> }\n);\n\nexport type LoginMutationVariables = Exact<{\n  user_id: Scalars['String'];\n  email: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'AuthResponse' }\n    & Pick<AuthResponse, 'accessToken' | 'refreshToken'>\n  ) }\n);\n\nexport type MaintenanceLoginMutationVariables = Exact<{\n  access_id: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type MaintenanceLoginMutation = (\n  { __typename?: 'Mutation' }\n  & { maintenanceLogin: (\n    { __typename?: 'AuthResponse' }\n    & Pick<AuthResponse, 'refreshToken' | 'accessToken'>\n  ) }\n);\n\nexport type PaypalCheckoutMutationVariables = Exact<{\n  products: Scalars['String'];\n  coupon: Scalars['String'];\n}>;\n\n\nexport type PaypalCheckoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'paypalCheckout'>\n);\n\nexport type ValidateCouponMutationVariables = Exact<{\n  coupon_name: Scalars['String'];\n}>;\n\n\nexport type ValidateCouponMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'validateCoupon'>\n);\n\n\nexport const AddPaypalOrderDocument = gql`\n    mutation addPaypalOrder($user_id: String!, $coupon: String!, $products: String!, $purchase_units: String!) {\n  addPaypalOrder(\n    user_id: $user_id\n    coupon: $coupon\n    products: $products\n    purchase_units: $purchase_units\n  )\n}\n    `;\nexport type AddPaypalOrderMutationFn = Apollo.MutationFunction<AddPaypalOrderMutation, AddPaypalOrderMutationVariables>;\n\n/**\n * __useAddPaypalOrderMutation__\n *\n * To run a mutation, you first call `useAddPaypalOrderMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useAddPaypalOrderMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [addPaypalOrderMutation, { data, loading, error }] = useAddPaypalOrderMutation({\n *   variables: {\n *      user_id: // value for 'user_id'\n *      coupon: // value for 'coupon'\n *      products: // value for 'products'\n *      purchase_units: // value for 'purchase_units'\n *   },\n * });\n */\nexport function useAddPaypalOrderMutation(baseOptions?: Apollo.MutationHookOptions<AddPaypalOrderMutation, AddPaypalOrderMutationVariables>) {\n        return Apollo.useMutation<AddPaypalOrderMutation, AddPaypalOrderMutationVariables>(AddPaypalOrderDocument, baseOptions);\n      }\nexport type AddPaypalOrderMutationHookResult = ReturnType<typeof useAddPaypalOrderMutation>;\nexport type AddPaypalOrderMutationResult = Apollo.MutationResult<AddPaypalOrderMutation>;\nexport type AddPaypalOrderMutationOptions = Apollo.BaseMutationOptions<AddPaypalOrderMutation, AddPaypalOrderMutationVariables>;\nexport const CheckoutDocument = gql`\n    mutation checkout($token: String!, $user_id: String!, $products: String!, $shipping_info: String!, $billing_info: String!, $coupon: String!) {\n  checkout(\n    token: $token\n    user_id: $user_id\n    products: $products\n    shipping_info: $shipping_info\n    billing_info: $billing_info\n    coupon: $coupon\n  )\n}\n    `;\nexport type CheckoutMutationFn = Apollo.MutationFunction<CheckoutMutation, CheckoutMutationVariables>;\n\n/**\n * __useCheckoutMutation__\n *\n * To run a mutation, you first call `useCheckoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCheckoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [checkoutMutation, { data, loading, error }] = useCheckoutMutation({\n *   variables: {\n *      token: // value for 'token'\n *      user_id: // value for 'user_id'\n *      products: // value for 'products'\n *      shipping_info: // value for 'shipping_info'\n *      billing_info: // value for 'billing_info'\n *      coupon: // value for 'coupon'\n *   },\n * });\n */\nexport function useCheckoutMutation(baseOptions?: Apollo.MutationHookOptions<CheckoutMutation, CheckoutMutationVariables>) {\n        return Apollo.useMutation<CheckoutMutation, CheckoutMutationVariables>(CheckoutDocument, baseOptions);\n      }\nexport type CheckoutMutationHookResult = ReturnType<typeof useCheckoutMutation>;\nexport type CheckoutMutationResult = Apollo.MutationResult<CheckoutMutation>;\nexport type CheckoutMutationOptions = Apollo.BaseMutationOptions<CheckoutMutation, CheckoutMutationVariables>;\nexport const GetAnnouncementsDocument = gql`\n    query getAnnouncements {\n  getAnnouncements {\n    id\n    text\n  }\n}\n    `;\n\n/**\n * __useGetAnnouncementsQuery__\n *\n * To run a query within a React component, call `useGetAnnouncementsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAnnouncementsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAnnouncementsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetAnnouncementsQuery(baseOptions?: Apollo.QueryHookOptions<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>) {\n        return Apollo.useQuery<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>(GetAnnouncementsDocument, baseOptions);\n      }\nexport function useGetAnnouncementsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>) {\n          return Apollo.useLazyQuery<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>(GetAnnouncementsDocument, baseOptions);\n        }\nexport type GetAnnouncementsQueryHookResult = ReturnType<typeof useGetAnnouncementsQuery>;\nexport type GetAnnouncementsLazyQueryHookResult = ReturnType<typeof useGetAnnouncementsLazyQuery>;\nexport type GetAnnouncementsQueryResult = Apollo.QueryResult<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>;\nexport const GetCurrUserDocument = gql`\n    query getCurrUser {\n  getCurrUser {\n    email\n    uuid\n    user_id\n  }\n}\n    `;\n\n/**\n * __useGetCurrUserQuery__\n *\n * To run a query within a React component, call `useGetCurrUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetCurrUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetCurrUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetCurrUserQuery(baseOptions?: Apollo.QueryHookOptions<GetCurrUserQuery, GetCurrUserQueryVariables>) {\n        return Apollo.useQuery<GetCurrUserQuery, GetCurrUserQueryVariables>(GetCurrUserDocument, baseOptions);\n      }\nexport function useGetCurrUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetCurrUserQuery, GetCurrUserQueryVariables>) {\n          return Apollo.useLazyQuery<GetCurrUserQuery, GetCurrUserQueryVariables>(GetCurrUserDocument, baseOptions);\n        }\nexport type GetCurrUserQueryHookResult = ReturnType<typeof useGetCurrUserQuery>;\nexport type GetCurrUserLazyQueryHookResult = ReturnType<typeof useGetCurrUserLazyQuery>;\nexport type GetCurrUserQueryResult = Apollo.QueryResult<GetCurrUserQuery, GetCurrUserQueryVariables>;\nexport const GetMaintenanceDocument = gql`\n    query getMaintenance {\n  getMaintenance\n}\n    `;\n\n/**\n * __useGetMaintenanceQuery__\n *\n * To run a query within a React component, call `useGetMaintenanceQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetMaintenanceQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetMaintenanceQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetMaintenanceQuery(baseOptions?: Apollo.QueryHookOptions<GetMaintenanceQuery, GetMaintenanceQueryVariables>) {\n        return Apollo.useQuery<GetMaintenanceQuery, GetMaintenanceQueryVariables>(GetMaintenanceDocument, baseOptions);\n      }\nexport function useGetMaintenanceLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetMaintenanceQuery, GetMaintenanceQueryVariables>) {\n          return Apollo.useLazyQuery<GetMaintenanceQuery, GetMaintenanceQueryVariables>(GetMaintenanceDocument, baseOptions);\n        }\nexport type GetMaintenanceQueryHookResult = ReturnType<typeof useGetMaintenanceQuery>;\nexport type GetMaintenanceLazyQueryHookResult = ReturnType<typeof useGetMaintenanceLazyQuery>;\nexport type GetMaintenanceQueryResult = Apollo.QueryResult<GetMaintenanceQuery, GetMaintenanceQueryVariables>;\nexport const GetProductDocument = gql`\n    query getProduct($product_id: Float!) {\n  getProduct(product_id: $product_id) {\n    product_id\n    name\n    desc\n    price\n    stock\n    org_stock\n    exp_date\n    images {\n      img_id\n      img_url\n    }\n  }\n}\n    `;\n\n/**\n * __useGetProductQuery__\n *\n * To run a query within a React component, call `useGetProductQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetProductQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetProductQuery({\n *   variables: {\n *      product_id: // value for 'product_id'\n *   },\n * });\n */\nexport function useGetProductQuery(baseOptions: Apollo.QueryHookOptions<GetProductQuery, GetProductQueryVariables>) {\n        return Apollo.useQuery<GetProductQuery, GetProductQueryVariables>(GetProductDocument, baseOptions);\n      }\nexport function useGetProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetProductQuery, GetProductQueryVariables>) {\n          return Apollo.useLazyQuery<GetProductQuery, GetProductQueryVariables>(GetProductDocument, baseOptions);\n        }\nexport type GetProductQueryHookResult = ReturnType<typeof useGetProductQuery>;\nexport type GetProductLazyQueryHookResult = ReturnType<typeof useGetProductLazyQuery>;\nexport type GetProductQueryResult = Apollo.QueryResult<GetProductQuery, GetProductQueryVariables>;\nexport const GetProductsDocument = gql`\n    query getProducts {\n  getProducts {\n    product_id\n    name\n    desc\n    price\n    stock\n    org_stock\n    exp_date\n    images {\n      img_id\n      img_url\n    }\n  }\n}\n    `;\n\n/**\n * __useGetProductsQuery__\n *\n * To run a query within a React component, call `useGetProductsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetProductsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetProductsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetProductsQuery(baseOptions?: Apollo.QueryHookOptions<GetProductsQuery, GetProductsQueryVariables>) {\n        return Apollo.useQuery<GetProductsQuery, GetProductsQueryVariables>(GetProductsDocument, baseOptions);\n      }\nexport function useGetProductsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetProductsQuery, GetProductsQueryVariables>) {\n          return Apollo.useLazyQuery<GetProductsQuery, GetProductsQueryVariables>(GetProductsDocument, baseOptions);\n        }\nexport type GetProductsQueryHookResult = ReturnType<typeof useGetProductsQuery>;\nexport type GetProductsLazyQueryHookResult = ReturnType<typeof useGetProductsLazyQuery>;\nexport type GetProductsQueryResult = Apollo.QueryResult<GetProductsQuery, GetProductsQueryVariables>;\nexport const GetSectionByIdDocument = gql`\n    query getSectionById($section_id: Float!) {\n  getSectionById(section_id: $section_id) {\n    section_id\n    thumbnail\n    name\n  }\n}\n    `;\n\n/**\n * __useGetSectionByIdQuery__\n *\n * To run a query within a React component, call `useGetSectionByIdQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetSectionByIdQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetSectionByIdQuery({\n *   variables: {\n *      section_id: // value for 'section_id'\n *   },\n * });\n */\nexport function useGetSectionByIdQuery(baseOptions: Apollo.QueryHookOptions<GetSectionByIdQuery, GetSectionByIdQueryVariables>) {\n        return Apollo.useQuery<GetSectionByIdQuery, GetSectionByIdQueryVariables>(GetSectionByIdDocument, baseOptions);\n      }\nexport function useGetSectionByIdLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetSectionByIdQuery, GetSectionByIdQueryVariables>) {\n          return Apollo.useLazyQuery<GetSectionByIdQuery, GetSectionByIdQueryVariables>(GetSectionByIdDocument, baseOptions);\n        }\nexport type GetSectionByIdQueryHookResult = ReturnType<typeof useGetSectionByIdQuery>;\nexport type GetSectionByIdLazyQueryHookResult = ReturnType<typeof useGetSectionByIdLazyQuery>;\nexport type GetSectionByIdQueryResult = Apollo.QueryResult<GetSectionByIdQuery, GetSectionByIdQueryVariables>;\nexport const GetSectionsDocument = gql`\n    query getSections {\n  getSections {\n    section_id\n    name\n    thumbnail\n  }\n}\n    `;\n\n/**\n * __useGetSectionsQuery__\n *\n * To run a query within a React component, call `useGetSectionsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetSectionsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetSectionsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetSectionsQuery(baseOptions?: Apollo.QueryHookOptions<GetSectionsQuery, GetSectionsQueryVariables>) {\n        return Apollo.useQuery<GetSectionsQuery, GetSectionsQueryVariables>(GetSectionsDocument, baseOptions);\n      }\nexport function useGetSectionsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetSectionsQuery, GetSectionsQueryVariables>) {\n          return Apollo.useLazyQuery<GetSectionsQuery, GetSectionsQueryVariables>(GetSectionsDocument, baseOptions);\n        }\nexport type GetSectionsQueryHookResult = ReturnType<typeof useGetSectionsQuery>;\nexport type GetSectionsLazyQueryHookResult = ReturnType<typeof useGetSectionsLazyQuery>;\nexport type GetSectionsQueryResult = Apollo.QueryResult<GetSectionsQuery, GetSectionsQueryVariables>;\nexport const GetSectionsProductsDocument = gql`\n    query getSectionsProducts($section_id: Float!) {\n  getSectionsProducts(section_id: $section_id) {\n    product_id\n    name\n    desc\n    price\n    stock\n    org_stock\n    images {\n      img_id\n      img_url\n      index\n    }\n  }\n}\n    `;\n\n/**\n * __useGetSectionsProductsQuery__\n *\n * To run a query within a React component, call `useGetSectionsProductsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetSectionsProductsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetSectionsProductsQuery({\n *   variables: {\n *      section_id: // value for 'section_id'\n *   },\n * });\n */\nexport function useGetSectionsProductsQuery(baseOptions: Apollo.QueryHookOptions<GetSectionsProductsQuery, GetSectionsProductsQueryVariables>) {\n        return Apollo.useQuery<GetSectionsProductsQuery, GetSectionsProductsQueryVariables>(GetSectionsProductsDocument, baseOptions);\n      }\nexport function useGetSectionsProductsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetSectionsProductsQuery, GetSectionsProductsQueryVariables>) {\n          return Apollo.useLazyQuery<GetSectionsProductsQuery, GetSectionsProductsQueryVariables>(GetSectionsProductsDocument, baseOptions);\n        }\nexport type GetSectionsProductsQueryHookResult = ReturnType<typeof useGetSectionsProductsQuery>;\nexport type GetSectionsProductsLazyQueryHookResult = ReturnType<typeof useGetSectionsProductsLazyQuery>;\nexport type GetSectionsProductsQueryResult = Apollo.QueryResult<GetSectionsProductsQuery, GetSectionsProductsQueryVariables>;\nexport const GetSocialsDocument = gql`\n    query getSocials($component: String!) {\n  getSocials(component: $component) {\n    id\n    index\n    social_url\n    social_logo\n    display\n  }\n}\n    `;\n\n/**\n * __useGetSocialsQuery__\n *\n * To run a query within a React component, call `useGetSocialsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetSocialsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetSocialsQuery({\n *   variables: {\n *      component: // value for 'component'\n *   },\n * });\n */\nexport function useGetSocialsQuery(baseOptions: Apollo.QueryHookOptions<GetSocialsQuery, GetSocialsQueryVariables>) {\n        return Apollo.useQuery<GetSocialsQuery, GetSocialsQueryVariables>(GetSocialsDocument, baseOptions);\n      }\nexport function useGetSocialsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetSocialsQuery, GetSocialsQueryVariables>) {\n          return Apollo.useLazyQuery<GetSocialsQuery, GetSocialsQueryVariables>(GetSocialsDocument, baseOptions);\n        }\nexport type GetSocialsQueryHookResult = ReturnType<typeof useGetSocialsQuery>;\nexport type GetSocialsLazyQueryHookResult = ReturnType<typeof useGetSocialsLazyQuery>;\nexport type GetSocialsQueryResult = Apollo.QueryResult<GetSocialsQuery, GetSocialsQueryVariables>;\nexport const GetUsersOrdersDocument = gql`\n    query getUsersOrders {\n  getUsersOrders {\n    products {\n      product_id\n      name\n      desc\n      price\n      stock\n      exp_date\n      quantityOrdered\n      productSubtotal\n      images {\n        img_id\n        img_url\n        index\n      }\n    }\n    order_id\n    tracking_num\n    order_total\n    coupon\n    discount\n    date_of_purchase\n  }\n}\n    `;\n\n/**\n * __useGetUsersOrdersQuery__\n *\n * To run a query within a React component, call `useGetUsersOrdersQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetUsersOrdersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetUsersOrdersQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetUsersOrdersQuery(baseOptions?: Apollo.QueryHookOptions<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>) {\n        return Apollo.useQuery<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>(GetUsersOrdersDocument, baseOptions);\n      }\nexport function useGetUsersOrdersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>) {\n          return Apollo.useLazyQuery<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>(GetUsersOrdersDocument, baseOptions);\n        }\nexport type GetUsersOrdersQueryHookResult = ReturnType<typeof useGetUsersOrdersQuery>;\nexport type GetUsersOrdersLazyQueryHookResult = ReturnType<typeof useGetUsersOrdersLazyQuery>;\nexport type GetUsersOrdersQueryResult = Apollo.QueryResult<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>;\nexport const LoginDocument = gql`\n    mutation login($user_id: String!, $email: String!) {\n  login(user_id: $user_id, email: $email) {\n    accessToken\n    refreshToken\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      user_id: // value for 'user_id'\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        return Apollo.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const MaintenanceLoginDocument = gql`\n    mutation maintenanceLogin($access_id: String!, $password: String!) {\n  maintenanceLogin(access_id: $access_id, password: $password) {\n    refreshToken\n    accessToken\n  }\n}\n    `;\nexport type MaintenanceLoginMutationFn = Apollo.MutationFunction<MaintenanceLoginMutation, MaintenanceLoginMutationVariables>;\n\n/**\n * __useMaintenanceLoginMutation__\n *\n * To run a mutation, you first call `useMaintenanceLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMaintenanceLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [maintenanceLoginMutation, { data, loading, error }] = useMaintenanceLoginMutation({\n *   variables: {\n *      access_id: // value for 'access_id'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useMaintenanceLoginMutation(baseOptions?: Apollo.MutationHookOptions<MaintenanceLoginMutation, MaintenanceLoginMutationVariables>) {\n        return Apollo.useMutation<MaintenanceLoginMutation, MaintenanceLoginMutationVariables>(MaintenanceLoginDocument, baseOptions);\n      }\nexport type MaintenanceLoginMutationHookResult = ReturnType<typeof useMaintenanceLoginMutation>;\nexport type MaintenanceLoginMutationResult = Apollo.MutationResult<MaintenanceLoginMutation>;\nexport type MaintenanceLoginMutationOptions = Apollo.BaseMutationOptions<MaintenanceLoginMutation, MaintenanceLoginMutationVariables>;\nexport const PaypalCheckoutDocument = gql`\n    mutation paypalCheckout($products: String!, $coupon: String!) {\n  paypalCheckout(products: $products, coupon: $coupon)\n}\n    `;\nexport type PaypalCheckoutMutationFn = Apollo.MutationFunction<PaypalCheckoutMutation, PaypalCheckoutMutationVariables>;\n\n/**\n * __usePaypalCheckoutMutation__\n *\n * To run a mutation, you first call `usePaypalCheckoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `usePaypalCheckoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [paypalCheckoutMutation, { data, loading, error }] = usePaypalCheckoutMutation({\n *   variables: {\n *      products: // value for 'products'\n *      coupon: // value for 'coupon'\n *   },\n * });\n */\nexport function usePaypalCheckoutMutation(baseOptions?: Apollo.MutationHookOptions<PaypalCheckoutMutation, PaypalCheckoutMutationVariables>) {\n        return Apollo.useMutation<PaypalCheckoutMutation, PaypalCheckoutMutationVariables>(PaypalCheckoutDocument, baseOptions);\n      }\nexport type PaypalCheckoutMutationHookResult = ReturnType<typeof usePaypalCheckoutMutation>;\nexport type PaypalCheckoutMutationResult = Apollo.MutationResult<PaypalCheckoutMutation>;\nexport type PaypalCheckoutMutationOptions = Apollo.BaseMutationOptions<PaypalCheckoutMutation, PaypalCheckoutMutationVariables>;\nexport const ValidateCouponDocument = gql`\n    mutation validateCoupon($coupon_name: String!) {\n  validateCoupon(coupon_name: $coupon_name)\n}\n    `;\nexport type ValidateCouponMutationFn = Apollo.MutationFunction<ValidateCouponMutation, ValidateCouponMutationVariables>;\n\n/**\n * __useValidateCouponMutation__\n *\n * To run a mutation, you first call `useValidateCouponMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useValidateCouponMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [validateCouponMutation, { data, loading, error }] = useValidateCouponMutation({\n *   variables: {\n *      coupon_name: // value for 'coupon_name'\n *   },\n * });\n */\nexport function useValidateCouponMutation(baseOptions?: Apollo.MutationHookOptions<ValidateCouponMutation, ValidateCouponMutationVariables>) {\n        return Apollo.useMutation<ValidateCouponMutation, ValidateCouponMutationVariables>(ValidateCouponDocument, baseOptions);\n      }\nexport type ValidateCouponMutationHookResult = ReturnType<typeof useValidateCouponMutation>;\nexport type ValidateCouponMutationResult = Apollo.MutationResult<ValidateCouponMutation>;\nexport type ValidateCouponMutationOptions = Apollo.BaseMutationOptions<ValidateCouponMutation, ValidateCouponMutationVariables>;","import { FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\nimport { useGetAnnouncementsQuery } from \"../../generated/graphql\";\r\nimport anime from \"animejs\";\r\nimport { useEffect } from \"react\";\r\n\r\n// const pickIntro = () => {\r\n//     const animations = [\r\n//         {\r\n//             targets: \".announcement-1 .letter\",\r\n//             translateX: [40, 0],\r\n//             translateZ: 0,\r\n//             opacity: [0, 1],\r\n//             easing: \"easeOutExpo\",\r\n//             duration: 1200,\r\n//             delay: (el, i) => 500 + 30 * i,\r\n//         },\r\n//     ]; //define animations here\r\n//     let index = Math.floor(Math.random() * animations.length - 1 + 1);\r\n//     return animations[index];\r\n// };\r\n\r\n// const pickOutro = () => {\r\n//     const animations = [\r\n//         {\r\n//             targets: \".announcement-1 .letter\",\r\n//             translateY: [0, -100],\r\n//             opacity: [1, 0],\r\n//             easing: \"easeInExpo\",\r\n//             duration: 1200,\r\n//             delay: (el, i) => 100 + 30 * i,\r\n//         },\r\n//     ]; //define animations here\r\n//     let index = Math.floor(Math.random() * animations.length - 1 + 1);\r\n//     return animations[index];\r\n// };\r\n\r\nconst AnnouncementBar = () => {\r\n    const { data, loading } = useGetAnnouncementsQuery();\r\n\r\n    useEffect(() => {\r\n        // let timelines = [] as any[];\r\n\r\n        if (!!data && !!document.getElementById(`announcement-0`)) {\r\n            for (let i = 0; i < data.getAnnouncements.length; i++) {\r\n                var textWrapper = document.getElementById(`announcement-${i}`);\r\n                textWrapper!.innerHTML = textWrapper!.textContent!.replace(\r\n                    /\\S/g,\r\n                    \"<span class='letter'>$&</span>\"\r\n                );\r\n            }\r\n\r\n            let tl = 0;\r\n            anime\r\n                .timeline({\r\n                    loop: true,\r\n                    loopBegin: () => {\r\n                        if (!document.getElementById(`announcement-${tl}`)) {\r\n                            tl = 0;\r\n                        }\r\n                        if (document.getElementById(`announcement-${tl}`)) {\r\n                            document.getElementById(\r\n                                `announcement-${tl}`\r\n                            )!.style.display = \"block\";\r\n                        }\r\n                    },\r\n                    loopComplete: () => {\r\n                        if (document.getElementById(`announcement-${tl}`)) {\r\n                            document.getElementById(\r\n                                `announcement-${tl}`\r\n                            )!.style.display = \"none\";\r\n                            tl++;\r\n                        }\r\n                    },\r\n                })\r\n                .add({\r\n                    targets: `.announcement .letter`,\r\n                    translateY: [100, 0],\r\n                    translateZ: 0,\r\n                    opacity: [0, 1],\r\n                    easing: \"easeOutExpo\",\r\n                    duration: 1400,\r\n                    delay: (el, i) => 300 + 30 * i,\r\n                })\r\n                .add(\r\n                    {\r\n                        targets: `.announcement .letter`,\r\n                        translateX: [0, -30],\r\n                        opacity: [1, 0],\r\n                        easing: \"easeOutQuart\",\r\n                        duration: 1000,\r\n                        delay: (el, i) => 100 + 30 * i,\r\n                    },\r\n                    \"+=25000\"\r\n                );\r\n        }\r\n    }, [data]);\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                backgroundColor: \"rgb(13, 3, 3)\",\r\n                color: \"#fff\",\r\n                zIndex: 3,\r\n                position: \"relative\",\r\n            }}\r\n        >\r\n            <div\r\n                className=\"container\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n                <span\r\n                    className=\"right  noselect\"\r\n                    style={{ color: \"rgb(13, 3, 3)\" }}\r\n                >\r\n                    <FaEnvelope />\r\n                    <FaInstagram />\r\n                </span>\r\n\r\n                <>\r\n                    {data?.getAnnouncements.length === 0 ? (\r\n                        <>Follow us on our socials</>\r\n                    ) : (\r\n                        <span id=\"announcement\">\r\n                            {data?.getAnnouncements.map((_val, i) => {\r\n                                return (\r\n                                    <span\r\n                                        key={i}\r\n                                        id={`announcement-${i}`}\r\n                                        className=\"announcement \"\r\n                                    >\r\n                                        {data.getAnnouncements[i].text}\r\n                                    </span>\r\n                                );\r\n                            })}\r\n                        </span>\r\n                    )}\r\n                </>\r\n\r\n                <span className=\"right\">\r\n                    <a\r\n                        href=\"mailto:cantrelatejp@gmail.com\"\r\n                        style={{ color: \"#fff\" }}\r\n                    >\r\n                        <FaEnvelope\r\n                            style={{ marginRight: \"5px\", marginLeft: \"5px\" }}\r\n                        />\r\n                    </a>\r\n\r\n                    <a\r\n                        href=\"https://www.instagram.com/cantrelate.jp/\"\r\n                        style={{ color: \"#fff\" }}\r\n                    >\r\n                        <FaInstagram />\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnnouncementBar;\r\n","export default __webpack_public_path__ + \"static/media/White_Blank_Logo.2c4cf922.png\";","import LogoSrc from \"../../images/White_Blank_Logo.png\";\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <a href=\"#/home\" className=\"brand-logo\">\r\n            <img src={LogoSrc} alt=\"Nari-Store\"></img>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","import { useGoogleLogin } from \"react-google-login\";\r\nimport { setAccessToken } from \"../../accessToken\";\r\nimport { checkAuth } from \"../../CheckAuth\";\r\nimport { useLoginMutation } from \"../../generated/graphql\";\r\nimport \"../../css/navbar.scss\";\r\nimport { useEffect } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport AnnouncementBar from \"./AnnouncementBar\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst Navbar = () => {\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll(\".sidenav\");\r\n        M.Sidenav.init(elems);\r\n    });\r\n    const [login] = useLoginMutation();\r\n\r\n    const handler = async res => {\r\n        let response = await login({\r\n            variables: {\r\n                user_id: res.googleId,\r\n                email: res.profileObj.email,\r\n            },\r\n        });\r\n\r\n        setAccessToken(response.data?.login.accessToken!);\r\n        localStorage.setItem(\"iru5\", response.data?.login.refreshToken!);\r\n        window.location.reload();\r\n    };\r\n\r\n    const { signIn } = useGoogleLogin({\r\n        clientId:\r\n            \"36358700157-4ihpf9tj4bjf4k346b8pnubt4meim4j0.apps.googleusercontent.com\",\r\n        onSuccess: handler,\r\n    });\r\n\r\n    const logout = () => {\r\n        localStorage.setItem(\"iru5\", \"\");\r\n        setAccessToken(\"\");\r\n        window.location.reload();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header style={{ position: \"sticky\", top: 0, zIndex: 997 }}>\r\n                <AnnouncementBar />\r\n                <div\r\n                    style={{ zIndex: 4, position: \"relative\" }}\r\n                    className=\"noselect\"\r\n                >\r\n                    <nav style={{ backgroundColor: \"#0a0a0a\" }}>\r\n                        <div className=\"nav-wrapper\">\r\n                            <Logo />\r\n\r\n                            <a\r\n                                href=\"#/\"\r\n                                data-target=\"mobile-demo\"\r\n                                className=\"sidenav-trigger left\"\r\n                            >\r\n                                <i className=\"material-icons noselect\">menu</i>\r\n                            </a>\r\n\r\n                            <ul\r\n                                id=\"nav\"\r\n                                className=\"center\"\r\n                                style={{\r\n                                    left: \"50%\",\r\n                                    transform: \"translateX(-50%)\",\r\n                                    position: \"absolute\",\r\n                                }}\r\n                            >\r\n                                {/* <li>\r\n                                    <a href=\"#/home\">HOME</a>\r\n                                </li> */}\r\n                                <li>\r\n                                    <a href=\"#/products\">PRODUCTS</a>\r\n                                </li>\r\n\r\n                                <li>\r\n                                    {checkAuth() ? (\r\n                                        <a href=\"#/my-orders\">MY ORDERS</a>\r\n                                    ) : (\r\n                                        // eslint-disable-next-line\r\n                                        <a\r\n                                            onClick={async () => {\r\n                                                await signIn();\r\n                                            }}\r\n                                        >\r\n                                            MY ORDERS\r\n                                        </a>\r\n                                    )}\r\n                                </li>\r\n\r\n                                <li>\r\n                                    <a href=\"#/my-cart\">CART</a>\r\n                                </li>\r\n                            </ul>\r\n                            {checkAuth() ? (\r\n                                <i\r\n                                    id=\"desktop-logout\"\r\n                                    className=\"material-icons right noselect\"\r\n                                    style={{ marginRight: \"15%\" }}\r\n                                    onClick={() => logout()}\r\n                                >\r\n                                    exit_to_app\r\n                                </i>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                            <a\r\n                                href=\"#/my-cart\"\r\n                                className=\"right white-text\"\r\n                                style={{ color: \"#000\", marginRight: \"18px\" }}\r\n                            >\r\n                                <i className=\"material-icons\" id=\"mobile-cart\">\r\n                                    shopping_cart\r\n                                </i>\r\n                            </a>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n            <ul\r\n                className=\"sidenav\"\r\n                id=\"mobile-demo\"\r\n                style={{\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.95)\",\r\n                    paddingTop: \"42px\",\r\n                }}\r\n            >\r\n                <li>\r\n                    <a\r\n                        style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                        href=\"#/products\"\r\n                    >\r\n                        Products\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    {checkAuth() ? (\r\n                        <a\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            href=\"#/my-orders\"\r\n                        >\r\n                            My Orders\r\n                        </a>\r\n                    ) : (\r\n                        // eslint-disable-next-line\r\n                        <a\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            onClick={() => {\r\n                                signIn();\r\n                            }}\r\n                        >\r\n                            My Orders\r\n                        </a>\r\n                    )}\r\n                </li>\r\n\r\n                <li>\r\n                    {checkAuth() ? (\r\n                        <a\r\n                            href=\"#/\"\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            onClick={() => logout()}\r\n                        >\r\n                            Logout\r\n                        </a>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </li>\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","const CopyrightBar = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                border: \"1px solid\",\r\n            }}\r\n        >\r\n            <span\r\n                style={{\r\n                    marginTop: \"5px\",\r\n                    marginBottom: \"5px\",\r\n                    fontSize: \"26.5px\",\r\n                    fontWeight: 550,\r\n                }}\r\n            >\r\n                © 2021 CANT RELATE.JP\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CopyrightBar;\r\n","export default __webpack_public_path__ + \"static/media/Blank_Footer_logo.b8ae07f0.png\";","import CopyrightBar from \"./CopyrightBar\";\r\nimport FooterLogo from \"../../images/Blank_Footer_logo.png\";\r\nimport { FaInstagram, FaEnvelope, FaTwitter, FaFacebook } from \"react-icons/fa\";\r\nimport { useGetSocialsQuery } from \"../../generated/graphql\";\r\nimport \"../../css/footer.scss\";\r\n\r\nconst Footer = () => {\r\n    const { data, loading } = useGetSocialsQuery({\r\n        variables: {\r\n            component: \"footer\",\r\n        },\r\n    });\r\n\r\n    if (!loading) {\r\n        console.log(\"data :>> \", data?.getSocials);\r\n    }\r\n    return (\r\n        <span>\r\n            <footer\r\n                className=\"noselect\"\r\n                style={{\r\n                    backgroundColor: \"#0a0a0a\",\r\n                    width: \"100%\",\r\n                    height: \"280px\",\r\n                }}\r\n            >\r\n                <div className=\"container\">\r\n                    <div\r\n                        className=\"row\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <div className=\"col l6 s12\">\r\n                            <img\r\n                                src={FooterLogo}\r\n                                alt=\"footer_logo\"\r\n                                style={{ height: \"280px\" }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col l4 offset-12 s12\">\r\n                            <ul id=\"footer-info\">\r\n                                <li>\r\n                                    <a\r\n                                        href=\"#/shipping_policy\"\r\n                                        className=\"white-text\"\r\n                                    >\r\n                                        <h4 style={{ fontWeight: 600 }}>\r\n                                            Shipping Policy\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#/contact\" className=\"white-text\">\r\n                                        <h4\r\n                                            style={{\r\n                                                marginTop: \"0px\",\r\n                                                fontWeight: 600,\r\n                                            }}\r\n                                        >\r\n                                            Contact Us\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#/FAQ\" className=\"white-text\">\r\n                                        <h4\r\n                                            style={{\r\n                                                marginTop: \"0px\",\r\n                                                fontWeight: 600,\r\n                                            }}\r\n                                        >\r\n                                            FAQ\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    {!!data && data.getSocials ? (\r\n                                        <>\r\n                                            {data.getSocials.map((_val, i) => {\r\n                                                if (\r\n                                                    data.getSocials[i].display\r\n                                                ) {\r\n                                                    return (\r\n                                                        <a\r\n                                                            id=\"social-link\"\r\n                                                            key={i}\r\n                                                            href={\r\n                                                                data.getSocials[\r\n                                                                    i\r\n                                                                ].social_url\r\n                                                            }\r\n                                                            style={{\r\n                                                                width: \"30px\",\r\n                                                                height: \"30px\",\r\n                                                                marginRight:\r\n                                                                    \"7px\",\r\n                                                            }}\r\n                                                        >\r\n                                                            <SocialIcon\r\n                                                                social_logo={\r\n                                                                    data\r\n                                                                        .getSocials[\r\n                                                                        i\r\n                                                                    ]\r\n                                                                        .social_logo\r\n                                                                }\r\n                                                            />\r\n                                                        </a>\r\n                                                    );\r\n                                                } else {\r\n                                                    <></>;\r\n                                                }\r\n                                            })}\r\n                                        </>\r\n                                    ) : (\r\n                                        <>\r\n                                            <a\r\n                                                id=\"social-link\"\r\n                                                href=\"https://www.instagram.com/cantrelate.jp/\"\r\n                                            >\r\n                                                <FaInstagram\r\n                                                    style={{\r\n                                                        width: \"30px\",\r\n                                                        height: \"30px\",\r\n                                                        marginRight: \"7px\",\r\n                                                    }}\r\n                                                />\r\n                                            </a>\r\n                                            <a\r\n                                                id=\"social-link\"\r\n                                                href=\"mailto:cantrelatejp@gmail.com\"\r\n                                            >\r\n                                                <FaEnvelope\r\n                                                    style={{\r\n                                                        width: \"30px\",\r\n                                                        height: \"30px\",\r\n                                                    }}\r\n                                                />\r\n                                            </a>\r\n                                        </>\r\n                                    )}\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n            <CopyrightBar />\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n\r\nconst SocialIcon: React.FC<{ social_logo: string }> = ({ social_logo }) => {\r\n    switch (social_logo) {\r\n        case \"I\": {\r\n            return (\r\n                <FaInstagram\r\n                    style={{\r\n                        height: 30,\r\n                        width: 30,\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        case \"E\": {\r\n            return (\r\n                <FaEnvelope\r\n                    style={{\r\n                        height: 30,\r\n                        width: 30,\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        case \"T\": {\r\n            return (\r\n                <FaTwitter\r\n                    style={{\r\n                        height: 30,\r\n                        width: 30,\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n        case \"F\": {\r\n            return (\r\n                <FaFacebook\r\n                    style={{\r\n                        height: 30,\r\n                        width: 30,\r\n                    }}\r\n                />\r\n            );\r\n        }\r\n\r\n        default: {\r\n            return <>ERROR</>;\r\n        }\r\n    }\r\n};\r\n","import {\r\n    useGetProductsQuery,\r\n    useGetSectionsQuery,\r\n} from \"../../generated/graphql\";\r\nimport \"../../css/products.scss\";\r\nimport { useEffect } from \"react\";\r\nimport anime from \"animejs\";\r\n\r\nconst GetSections = () => {\r\n    const { data, loading } = useGetSectionsQuery();\r\n    let sdata = data,\r\n        sloading = loading;\r\n    return { sdata, sloading };\r\n};\r\n\r\nconst Products = () => {\r\n    const { data, loading } = useGetProductsQuery();\r\n    const { sdata, sloading } = GetSections();\r\n\r\n    useEffect(() => {\r\n        anime({\r\n            duration: function (_t, i) {\r\n                return 900 + i * 75;\r\n            },\r\n            targets: \".card-content\",\r\n            easing: \"easeOutExpo\",\r\n            // delay: function (t, i) {\r\n            //     return i * 50;\r\n            // },\r\n            opacity: { value: [0, 1], easing: \"linear\" },\r\n            scale: [0, 1],\r\n            delay: anime.stagger(150, { start: 100 }),\r\n        });\r\n\r\n        anime({\r\n            duration: function (_t, i) {\r\n                return 900 + i * 75;\r\n            },\r\n            targets: \".card\",\r\n            easing: \"easeOutExpo\",\r\n            // delay: function (t, i) {\r\n            //     return i * 50;\r\n            // },\r\n            opacity: { value: [0, 1], easing: \"linear\" },\r\n            scale: [0, 1],\r\n            delay: anime.stagger(150, { start: 100 }),\r\n        });\r\n    });\r\n\r\n    if (loading || sloading) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\" style={{ width: \"80%\" }}>\r\n            {!!sdata && sdata.getSections.length !== 0 ? (\r\n                <div className=\"container\">\r\n                    <h1\r\n                        className=\"center-align\"\r\n                        style={{\r\n                            marginTop: \"60px\",\r\n                            marginBottom: \"60px\",\r\n                            fontWeight: 600,\r\n                        }}\r\n                    >\r\n                        Sections\r\n                    </h1>\r\n\r\n                    <div className=\"sections-grid\">\r\n                        {sdata.getSections.map((_val, i) => {\r\n                            let section = sdata.getSections[i];\r\n                            return (\r\n                                <div\r\n                                    className=\"card z-depth-0 black-text\"\r\n                                    style={{\r\n                                        margin: \"0px 8px 32px 8px\",\r\n                                    }}\r\n                                    key={i}\r\n                                >\r\n                                    <a\r\n                                        className=\"black-text\"\r\n                                        href={`#/view-section:${section.section_id}`}\r\n                                    >\r\n                                        <div className=\"container\">\r\n                                            <div className=\"card-image\">\r\n                                                <img\r\n                                                    src={section.thumbnail}\r\n                                                    alt={section.name}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"card-content\">\r\n                                            <span className=\"card-title\">\r\n                                                <h5 className=\"center-align\">\r\n                                                    {section.name}\r\n                                                </h5>\r\n                                            </span>\r\n                                            <span\r\n                                                style={{\r\n                                                    display: \"flex\",\r\n                                                    justifyContent: \"center\",\r\n                                                }}\r\n                                            ></span>\r\n                                        </div>\r\n                                    </a>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            <h1\r\n                className=\"center-align\"\r\n                style={{\r\n                    marginTop: \"60px\",\r\n                    marginBottom: \"60px\",\r\n                    fontWeight: 600,\r\n                }}\r\n            >\r\n                Products\r\n            </h1>\r\n\r\n            <div className=\"products-grid\">\r\n                {data?.getProducts.map((_val, i) => {\r\n                    let product: any = data.getProducts[i];\r\n                    return (\r\n                        <div\r\n                            className=\"card z-depth-0\"\r\n                            style={{\r\n                                margin: \"0px 8px 32px 8px\",\r\n                            }}\r\n                            key={i}\r\n                        >\r\n                            <a\r\n                                className=\"black-text\"\r\n                                href={`#/product-details:${product.product_id}`}\r\n                            >\r\n                                <div className=\"container\">\r\n                                    <div className=\"card-image\">\r\n                                        <img\r\n                                            src={product.images[0].img_url!}\r\n                                            alt={product.name}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"card-content\">\r\n                                    <span className=\"card-title\">\r\n                                        <h5 className=\"center-align\">\r\n                                            {product.name}\r\n                                        </h5>\r\n                                    </span>\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <p\r\n                                            className=\"product-price\"\r\n                                            style={{ fontSize: \"16px\" }}\r\n                                        >\r\n                                            $\r\n                                            {Number(\r\n                                                product.price / 100\r\n                                            ).toFixed(2)}\r\n                                        </p>\r\n                                    </span>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","import { useGetUsersOrdersQuery } from \"../generated/graphql\";\r\nimport { useLocation } from \"react-router-dom\";\r\n// import anime from \"animejs\";\r\n\r\ninterface UserOrders {\r\n    products: [\r\n        {\r\n            product_id: number;\r\n            name: string;\r\n            desc: string;\r\n            price: number;\r\n            stock: number;\r\n            exp_date?: string;\r\n            quantityOrdered: number;\r\n            productSubtotal: number;\r\n            images: [\r\n                {\r\n                    img_id: number;\r\n                    img_url: string;\r\n                    index: number;\r\n                }\r\n            ];\r\n        }\r\n    ];\r\n    order_total: number;\r\n    order_id: number;\r\n    tracking_num?: string;\r\n    coupon: string;\r\n    discount: string;\r\n    date_of_purchase: string;\r\n}\r\n\r\nconst calcSubtotals = (products: any[]) => {\r\n    let Subtotal: any = 0,\r\n        sTotal: any = 100;\r\n\r\n    for (let i = 0; i < products.length; i++) {\r\n        Subtotal += products[i].productSubtotal!;\r\n        sTotal += products[i].quantityOrdered * 50;\r\n    }\r\n\r\n    let productsSubtotal = Number(Subtotal / 100).toFixed(2);\r\n\r\n    if (sTotal > 500) {\r\n        sTotal = 500;\r\n    }\r\n\r\n    let shippingTotal = Number(sTotal / 100).toFixed(2);\r\n\r\n    return { productsSubtotal, shippingTotal };\r\n};\r\n\r\nconst showDetails = (i, tmp) => {\r\n    // if (document.getElementById(`card-header-${i}`)!.clientHeight > 50)\r\n    if (\r\n        !document\r\n            .getElementById(`order-details-row-${i}`)!\r\n            .classList.contains(\"hide\")\r\n    ) {\r\n        document\r\n            .getElementById(`order-details-row-${i}`)!\r\n            .classList.add(\"hide\");\r\n\r\n        // anime({\r\n        //     targets: `.card-header-${i}`,\r\n        //     height: \"48.5px\",\r\n        //     easing: \"linear\",\r\n        //     duration: 400,\r\n        //     complete: () => {\r\n        //         setTimeout(() => {\r\n        //             document.getElementById(\r\n        //                 \"details-span\"\r\n        //             )!.style.pointerEvents = \"auto\";\r\n        //         }, 50);\r\n        //     },\r\n        // });\r\n    } else {\r\n        const { productsSubtotal, shippingTotal } = calcSubtotals(\r\n            tmp[i].products\r\n        );\r\n\r\n        document.getElementById(\r\n            `subtotal-${i}`\r\n        )!.innerHTML = `$${productsSubtotal}`;\r\n\r\n        document.getElementById(`tax-${i}`)!.innerHTML = `$${Number(\r\n            Number(productsSubtotal) * 0.095\r\n        ).toFixed(2)}`;\r\n\r\n        document.getElementById(\r\n            `shippingTotal-${i}`\r\n        )!.innerHTML = `$${shippingTotal}`;\r\n\r\n        document\r\n            .getElementById(`order-details-row-${i}`)!\r\n            .classList.remove(\"hide\");\r\n\r\n        // anime({\r\n        //     targets: `.card-header-${i}`,\r\n        //     height: \"215px\",\r\n        //     easing: \"linear\",\r\n        //     duration: 350,\r\n        //     complete: () => {\r\n        //         document\r\n        //             .getElementById(`order-details-row-${i}`)!\r\n        //             .classList.remove(\"hide\");\r\n\r\n        //         anime({\r\n        //             targets: `.order-details-${i} .el`,\r\n        //             opacity: [0, 1],\r\n        //             delay: anime.stagger(50),\r\n        //             complete: () => {\r\n        //                 setTimeout(() => {\r\n        //                     document.getElementById(\r\n        //                         \"details-span\"\r\n        //                     )!.style.pointerEvents = \"auto\";\r\n        //                 }, 15);\r\n        //             },\r\n        //         });\r\n        //     },\r\n        // });\r\n    }\r\n};\r\n\r\nconst UsersOrders = () => {\r\n    const location: any = useLocation();\r\n\r\n    if (!!location.state) {\r\n        if (location.state.reload) {\r\n            window.location.reload();\r\n        }\r\n    }\r\n\r\n    const { data, loading } = useGetUsersOrdersQuery();\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    let tmp: [UserOrders] = data?.getUsersOrders.reverse() as any;\r\n\r\n    return (\r\n        <>\r\n            {!!tmp ? (\r\n                <>\r\n                    <div className=\"container\" style={{ minHeight: \"70vh\" }}>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <h3>Your Purchases</h3>\r\n                        </div>\r\n                        <>\r\n                            {tmp.map((_val, i) => {\r\n                                let amountOff = Number(\r\n                                    (tmp[i].order_total *\r\n                                        Number(\"0.\" + tmp[i].discount)) /\r\n                                        100\r\n                                ).toFixed(2);\r\n\r\n                                let str, dateOfPurchase;\r\n                                if (tmp[i].date_of_purchase) {\r\n                                    str = tmp[i].date_of_purchase.split(\" \");\r\n                                    dateOfPurchase = `${str[0]} ${str[1]} ${str[2]} ${str[3]}`;\r\n                                }\r\n\r\n                                return (\r\n                                    <div className=\"row z-depth-1\" key={i}>\r\n                                        <div\r\n                                            className=\"col s12\"\r\n                                            style={{ padding: \"0px\" }}\r\n                                        >\r\n                                            <div\r\n                                                className={`card-header card-header-${i} row`}\r\n                                                id={`card-header-${i}`}\r\n                                                style={{\r\n                                                    borderLeft:\r\n                                                        \"5px solid #ff0000\",\r\n                                                    paddingTop: \"13px\",\r\n                                                    paddingBottom: \"13px\",\r\n                                                    paddingRight: \"25px\",\r\n                                                    paddingLeft: \"20px\",\r\n                                                    margin: \"0px\",\r\n                                                    zIndex: 4,\r\n                                                    position: \"relative\",\r\n                                                }}\r\n                                            >\r\n                                                <span className=\"col s7 m4\">\r\n                                                    <span\r\n                                                        style={{\r\n                                                            color: \"#1d252c\",\r\n                                                            paddingRight:\r\n                                                                \"1rem\",\r\n                                                            fontWeight: 700,\r\n                                                        }}\r\n                                                    >\r\n                                                        Order ID\r\n                                                    </span>\r\n                                                    <span>\r\n                                                        CR-{tmp[i].order_id}\r\n                                                    </span>\r\n                                                </span>\r\n\r\n                                                <span className=\"hide-on-med-and-down col l3\">\r\n                                                    {tmp[i].date_of_purchase ? (\r\n                                                        <span>\r\n                                                            {dateOfPurchase}\r\n                                                        </span>\r\n                                                    ) : (\r\n                                                        <></>\r\n                                                    )}\r\n                                                </span>\r\n\r\n                                                <span className=\"bold col s5 m4\">\r\n                                                    <span>\r\n                                                        <span className=\"hide-on-small-only left\">\r\n                                                            $\r\n                                                            {Number(\r\n                                                                tmp[i]\r\n                                                                    .order_total /\r\n                                                                    100\r\n                                                            ).toFixed(2)}{\" \"}\r\n                                                            {tmp[i].discount ? (\r\n                                                                <span className=\"hide-on-med-and-down\">\r\n                                                                    (\r\n                                                                    <span\r\n                                                                        style={{\r\n                                                                            color:\r\n                                                                                \"rgb(255, 0, 0)\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        -$\r\n                                                                        {\r\n                                                                            amountOff\r\n                                                                        }\r\n                                                                    </span>\r\n                                                                    )\r\n                                                                </span>\r\n                                                            ) : (\r\n                                                                <></>\r\n                                                            )}\r\n                                                        </span>\r\n                                                        <span\r\n                                                            id=\"details-span\"\r\n                                                            className=\"noselect right\"\r\n                                                            onClick={() => {\r\n                                                                // document.getElementById(\r\n                                                                //     \"details-span\"\r\n                                                                // )!.style.pointerEvents =\r\n                                                                //     \"none\";\r\n                                                                showDetails(\r\n                                                                    i,\r\n                                                                    tmp\r\n                                                                );\r\n                                                            }}\r\n                                                        >\r\n                                                            Details\r\n                                                        </span>\r\n                                                    </span>\r\n                                                </span>\r\n\r\n                                                <div\r\n                                                    className=\"row hide\"\r\n                                                    id={`order-details-row-${i}`}\r\n                                                    style={{\r\n                                                        marginTop: \"32px\",\r\n                                                    }}\r\n                                                >\r\n                                                    <div className=\"col s12 m5\">\r\n                                                        <span\r\n                                                            className={`order-details-${i}`}\r\n                                                        >\r\n                                                            <span className=\"el\">\r\n                                                                <span className=\"left\">\r\n                                                                    Subtotal\r\n                                                                </span>\r\n                                                                <span\r\n                                                                    className=\"right semi-bold\"\r\n                                                                    id={`subtotal-${i}`}\r\n                                                                ></span>\r\n                                                            </span>\r\n\r\n                                                            <br />\r\n\r\n                                                            <span className=\"el\">\r\n                                                                <span className=\"left\">\r\n                                                                    Tax\r\n                                                                </span>\r\n                                                                <span\r\n                                                                    className=\"right semi-bold\"\r\n                                                                    id={`tax-${i}`}\r\n                                                                ></span>\r\n                                                            </span>\r\n\r\n                                                            <br />\r\n\r\n                                                            <span className=\"el\">\r\n                                                                <span className=\"left\">\r\n                                                                    Shipping\r\n                                                                </span>\r\n                                                                <span\r\n                                                                    className=\"right semi-bold\"\r\n                                                                    id={`shippingTotal-${i}`}\r\n                                                                ></span>\r\n                                                            </span>\r\n\r\n                                                            <>\r\n                                                                {!tmp[i]\r\n                                                                    .coupon ? (\r\n                                                                    <></>\r\n                                                                ) : (\r\n                                                                    <span className=\"el\">\r\n                                                                        <br />\r\n                                                                        <div\r\n                                                                            className=\"divider\"\r\n                                                                            style={{\r\n                                                                                marginTop:\r\n                                                                                    \"4px\",\r\n                                                                                marginBottom:\r\n                                                                                    \"4px\",\r\n                                                                            }}\r\n                                                                        ></div>\r\n                                                                        <span className=\"left\">\r\n                                                                            Coupon(\r\n                                                                            {\r\n                                                                                tmp[\r\n                                                                                    i\r\n                                                                                ]\r\n                                                                                    .coupon\r\n                                                                            }\r\n                                                                            )\r\n                                                                        </span>\r\n                                                                        <span className=\"right\">\r\n                                                                            {\r\n                                                                                tmp[\r\n                                                                                    i\r\n                                                                                ]\r\n                                                                                    .discount\r\n                                                                            }\r\n                                                                            % (\r\n                                                                            <span className=\"red-text bold\">\r\n                                                                                -$\r\n                                                                                {\r\n                                                                                    amountOff\r\n                                                                                }\r\n                                                                            </span>\r\n                                                                            )\r\n                                                                        </span>\r\n                                                                    </span>\r\n                                                                )}\r\n                                                            </>\r\n\r\n                                                            <br />\r\n\r\n                                                            <span className=\"el\">\r\n                                                                <div\r\n                                                                    className=\"divider\"\r\n                                                                    style={{\r\n                                                                        marginTop:\r\n                                                                            \"4px\",\r\n                                                                        marginBottom:\r\n                                                                            \"4px\",\r\n                                                                    }}\r\n                                                                ></div>\r\n                                                                <span className=\"left\">\r\n                                                                    Order Total\r\n                                                                </span>\r\n                                                                <span className=\"right bold\">\r\n                                                                    $\r\n                                                                    {Number(\r\n                                                                        tmp[i]\r\n                                                                            .order_total /\r\n                                                                            100\r\n                                                                    ).toFixed(\r\n                                                                        2\r\n                                                                    )}\r\n                                                                </span>\r\n                                                            </span>\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"divider\"></div>\r\n\r\n                                            <div\r\n                                                className=\"card-body\"\r\n                                                style={{\r\n                                                    backgroundColor: \"white\",\r\n                                                    zIndex: 2,\r\n                                                    position: \"relative\",\r\n                                                }}\r\n                                            >\r\n                                                {tmp[i].products.map(\r\n                                                    (_val, j) => {\r\n                                                        return (\r\n                                                            <div\r\n                                                                className=\"row\"\r\n                                                                key={j}\r\n                                                            >\r\n                                                                <div className=\"col s12 m4\">\r\n                                                                    <img\r\n                                                                        alt=\"product\"\r\n                                                                        style={{\r\n                                                                            width:\r\n                                                                                \"100%\",\r\n                                                                        }}\r\n                                                                        src={\r\n                                                                            tmp[\r\n                                                                                i\r\n                                                                            ]\r\n                                                                                .products[\r\n                                                                                j\r\n                                                                            ]\r\n                                                                                .images[0]\r\n                                                                                .img_url\r\n                                                                        }\r\n                                                                    />\r\n                                                                </div>\r\n                                                                <div\r\n                                                                    style={{\r\n                                                                        display:\r\n                                                                            \"flex\",\r\n                                                                        flexDirection:\r\n                                                                            \"column\",\r\n                                                                        justifyContent:\r\n                                                                            \"space-between\",\r\n                                                                        height:\r\n                                                                            \"100%\",\r\n                                                                        paddingLeft: 0,\r\n                                                                    }}\r\n                                                                    className=\"col m2 offset-m1 hide-on-small-only\"\r\n                                                                >\r\n                                                                    <p\r\n                                                                        className=\"flow-text\"\r\n                                                                        style={{\r\n                                                                            fontSize:\r\n                                                                                \"16px\",\r\n                                                                            fontWeight:\r\n                                                                                \"bold\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        {\r\n                                                                            tmp[\r\n                                                                                i\r\n                                                                            ]\r\n                                                                                .products[\r\n                                                                                j\r\n                                                                            ]\r\n                                                                                .name\r\n                                                                        }\r\n                                                                    </p>\r\n                                                                    <p className=\"hide-on-small-only\">\r\n                                                                        Qty:{\" \"}\r\n                                                                        {\r\n                                                                            tmp[\r\n                                                                                i\r\n                                                                            ]\r\n                                                                                .products[\r\n                                                                                j\r\n                                                                            ]\r\n                                                                                .quantityOrdered\r\n                                                                        }{\" \"}\r\n                                                                        ($\r\n                                                                        {Number(\r\n                                                                            tmp[\r\n                                                                                i\r\n                                                                            ]\r\n                                                                                .products[\r\n                                                                                j\r\n                                                                            ]\r\n                                                                                .productSubtotal /\r\n                                                                                100\r\n                                                                        ).toFixed(\r\n                                                                            2\r\n                                                                        )}\r\n                                                                        )\r\n                                                                    </p>\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    style={{\r\n                                                                        display:\r\n                                                                            \"flex\",\r\n                                                                        justifyContent:\r\n                                                                            \"center\",\r\n                                                                    }}\r\n                                                                    className=\"col s12 hide-on-med-and-up\"\r\n                                                                >\r\n                                                                    <p\r\n                                                                        className=\"flow-text\"\r\n                                                                        style={{\r\n                                                                            fontSize:\r\n                                                                                \"16px\",\r\n                                                                            fontWeight:\r\n                                                                                \"bold\",\r\n                                                                        }}\r\n                                                                    >\r\n                                                                        {\r\n                                                                            tmp[\r\n                                                                                i\r\n                                                                            ]\r\n                                                                                .products[\r\n                                                                                j\r\n                                                                            ]\r\n                                                                                .name\r\n                                                                        }\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                                {/* <div className=\"col s5 offset-s1\">\r\n                                                            <p>\r\n                                                                Qty:{\" \"}\r\n                                                                {\r\n                                                                    tmp[i]\r\n                                                                        .products[\r\n                                                                        j\r\n                                                                    ]\r\n                                                                        .quantityOrdered\r\n                                                                }{\" \"}\r\n                                                                ($\r\n                                                                {Number(\r\n                                                                    tmp[i]\r\n                                                                        .products[\r\n                                                                        j\r\n                                                                    ]\r\n                                                                        .productSubtotal /\r\n                                                                        100\r\n                                                                ).toFixed(2)}\r\n                                                                )\r\n                                                            </p>\r\n                                                        </div> */}\r\n                                                                <div className=\"col offset-m1 m3 hide-on-small-only\">\r\n                                                                    {!tmp[i]\r\n                                                                        .tracking_num ? (\r\n                                                                        <>\r\n                                                                            <p\r\n                                                                                style={{\r\n                                                                                    fontWeight: 700,\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Order\r\n                                                                                is\r\n                                                                                being\r\n                                                                                proccessed\r\n                                                                            </p>\r\n                                                                            <div\r\n                                                                                style={{\r\n                                                                                    width:\r\n                                                                                        \"100%\",\r\n                                                                                    borderBottom:\r\n                                                                                        \" 4px solid #ff0000\",\r\n                                                                                }}\r\n                                                                            ></div>\r\n                                                                        </>\r\n                                                                    ) : (\r\n                                                                        <>\r\n                                                                            <p\r\n                                                                                style={{\r\n                                                                                    fontWeight: 700,\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Shipped{\" \"}\r\n                                                                                =&gt;{\" \"}\r\n                                                                                <a\r\n                                                                                    href={`https://www.google.com/search?q=${tmp[i].tracking_num}`}\r\n                                                                                >\r\n                                                                                    {\r\n                                                                                        tmp[\r\n                                                                                            i\r\n                                                                                        ]\r\n                                                                                            .tracking_num\r\n                                                                                    }\r\n                                                                                </a>\r\n                                                                            </p>\r\n                                                                            <div\r\n                                                                                style={{\r\n                                                                                    width:\r\n                                                                                        \"100%\",\r\n                                                                                    borderBottom:\r\n                                                                                        \" 4px solid green\",\r\n                                                                                }}\r\n                                                                            ></div>\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                </div>\r\n\r\n                                                                <div\r\n                                                                    className=\"col s12 hide-on-med-and-up\"\r\n                                                                    style={{}}\r\n                                                                >\r\n                                                                    {!tmp[i]\r\n                                                                        .tracking_num ? (\r\n                                                                        <>\r\n                                                                            <p\r\n                                                                                style={{\r\n                                                                                    fontWeight: 700,\r\n                                                                                    display:\r\n                                                                                        \"flex\",\r\n                                                                                    justifyContent:\r\n                                                                                        \"center\",\r\n                                                                                    marginBottom:\r\n                                                                                        \"32px\",\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <span\r\n                                                                                    style={{\r\n                                                                                        borderLeft:\r\n                                                                                            \" 4px solid #ff0000\",\r\n                                                                                        paddingLeft:\r\n                                                                                            \"10px\",\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    Order\r\n                                                                                    is\r\n                                                                                    being\r\n                                                                                    proccessed\r\n                                                                                </span>\r\n                                                                            </p>\r\n                                                                        </>\r\n                                                                    ) : (\r\n                                                                        <>\r\n                                                                            <p\r\n                                                                                style={{\r\n                                                                                    fontWeight: 700,\r\n                                                                                    display:\r\n                                                                                        \"flex\",\r\n                                                                                    justifyContent:\r\n                                                                                        \"center\",\r\n                                                                                    marginBottom:\r\n                                                                                        \"32px\",\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                <span\r\n                                                                                    style={{\r\n                                                                                        borderLeft:\r\n                                                                                            \" 4px solid #008000\",\r\n                                                                                        paddingLeft:\r\n                                                                                            \"10px\",\r\n                                                                                    }}\r\n                                                                                >\r\n                                                                                    Shipped{\" \"}\r\n                                                                                    =&gt;{\" \"}\r\n                                                                                    <a\r\n                                                                                        href={`https://www.google.com/search?q=${tmp[i].tracking_num}`}\r\n                                                                                    >\r\n                                                                                        {\r\n                                                                                            tmp[\r\n                                                                                                i\r\n                                                                                            ]\r\n                                                                                                .tracking_num\r\n                                                                                        }\r\n                                                                                    </a>\r\n                                                                                </span>\r\n                                                                            </p>\r\n                                                                        </>\r\n                                                                    )}\r\n                                                                    {tmp[i]\r\n                                                                        .products\r\n                                                                        .length >\r\n                                                                        1 &&\r\n                                                                    tmp[i]\r\n                                                                        .products\r\n                                                                        .length -\r\n                                                                        1 !==\r\n                                                                        j ? (\r\n                                                                        <div\r\n                                                                            className=\"divider\"\r\n                                                                            style={{\r\n                                                                                marginLeft:\r\n                                                                                    \"10%\",\r\n                                                                                width:\r\n                                                                                    \"80%\",\r\n                                                                            }}\r\n                                                                        ></div>\r\n                                                                    ) : (\r\n                                                                        <></>\r\n                                                                    )}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        );\r\n                                                    }\r\n                                                )}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                );\r\n                            })}\r\n                        </>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <h1>You haven't ordered anything yet</h1>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default UsersOrders;\r\n","import { Product } from \"../RootReducer\";\r\n\r\nexport const addProductToCart = (product: Product) => {\r\n    return {\r\n        type: \"ADD_PRODUCT_TO_CART\",\r\n        product,\r\n    };\r\n};\r\n\r\nexport const resetCart = () => {\r\n    return { type: \"RESET_CART\" };\r\n};\r\n\r\nexport const changeQuantityOnProduct = (\r\n    newQuantity: number,\r\n    productIndex: number\r\n) => {\r\n    return { type: \"CHANGE_QUANTITY_ON_PRODUCT\", newQuantity, productIndex };\r\n};\r\n","import { Redirect } from \"react-router\";\r\nimport { useGetProductQuery } from \"../../generated/graphql\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addProductToCart } from \"../../redux/actions/userAction\";\r\nimport { useEffect } from \"react\";\r\nimport anime from \"animejs\";\r\n\r\nconst ProductDetails = () => {\r\n    let product_id: number;\r\n    if (process.env.NODE_ENV === \"production\") {\r\n        product_id = Number(window.location.href.split(\":\")[2]);\r\n    } else {\r\n        product_id = Number(window.location.href.split(\":\")[3]);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { data, loading, error } = useGetProductQuery({\r\n        variables: {\r\n            product_id,\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll(\".tooltipped\");\r\n        M.Tooltip.init(elems);\r\n        elems = document.querySelectorAll(\".carousel\");\r\n        M.Carousel.init(elems);\r\n\r\n        if (!loading) {\r\n            // (stock * 100)/ org_stock\r\n            let percent = 50;\r\n            if (!data || !data!.getProduct.org_stock) {\r\n                percent = 100;\r\n            } else {\r\n                percent =\r\n                    (data!.getProduct.stock * 100) / data!.getProduct.org_stock;\r\n            }\r\n\r\n            anime({\r\n                targets: \".filler\",\r\n                width: [\"0%\", `${percent}%`],\r\n                easing: \"easeInOutExpo\",\r\n            });\r\n\r\n            if (!document.getElementById(\"product-img\")) {\r\n            } else {\r\n                if (data?.getProduct.stock === 0) {\r\n                    document.getElementById(\"product-img\")!.style.opacity =\r\n                        \"0.7\";\r\n                }\r\n            }\r\n        }\r\n    }, [loading, data]);\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!data || error) {\r\n        return <Redirect to=\"/products\" />;\r\n    }\r\n\r\n    let product: any = data!.getProduct;\r\n\r\n    console.log(\"product :>> \", product);\r\n\r\n    // setTimeout(() => {\r\n    //     var instance = M.Carousel.getInstance(\r\n    //         document.getElementById(\"carousel-1\")!\r\n    //     );\r\n    //     instance.next();\r\n    // }, 5000);\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-align\">{product.name}</h3>\r\n            <h6 className=\"center-align\">\r\n                ${Number(product.price / 100).toFixed(2)}{\" \"}\r\n                {product.stock === 0 ? (\r\n                    <span style={{ color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                        SOLD OUT\r\n                    </span>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </h6>\r\n\r\n            <div className=\"row noselect\">\r\n                <div\r\n                    className=\"col s10 offset-s1 m4 offset-m2\"\r\n                    style={{ display: \"flex\", justifyContent: \"end\" }}\r\n                >\r\n                    {data.getProduct.images!.length > 1 ? (\r\n                        <>\r\n                            <div\r\n                                id=\"carousel-1\"\r\n                                className=\"carousel carousel-slider hide-on-small-only\"\r\n                            >\r\n                                {!data.getProduct.images ? (\r\n                                    <></>\r\n                                ) : (\r\n                                    <>\r\n                                        {data.getProduct.images.map(\r\n                                            (_val, i) => {\r\n                                                return (\r\n                                                    <a\r\n                                                        href=\"#!\"\r\n                                                        className=\"carousel-item noselect\"\r\n                                                        key={i}\r\n                                                    >\r\n                                                        <span\r\n                                                            style={{\r\n                                                                display:\r\n                                                                    \"inline-block\",\r\n                                                                maxHeight:\r\n                                                                    \"350px\",\r\n                                                                height: \"100%\",\r\n                                                                width: \"10%\",\r\n                                                            }}\r\n                                                            onClick={() => {\r\n                                                                var instance = M.Carousel.getInstance(\r\n                                                                    document.getElementById(\r\n                                                                        \"carousel-1\"\r\n                                                                    )!\r\n                                                                );\r\n                                                                instance.prev();\r\n                                                            }}\r\n                                                        ></span>\r\n                                                        <img\r\n                                                            alt=\"product\"\r\n                                                            style={{\r\n                                                                maxHeight:\r\n                                                                    \"350px\",\r\n                                                                width: \"80%\",\r\n                                                            }}\r\n                                                            src={\r\n                                                                product.images[\r\n                                                                    i\r\n                                                                ].img_url || \"\"\r\n                                                            }\r\n                                                        />\r\n                                                        <span\r\n                                                            style={{\r\n                                                                display:\r\n                                                                    \"inline-block\",\r\n                                                                maxHeight:\r\n                                                                    \"350px\",\r\n                                                                height: \"100%\",\r\n                                                                width: \"10%\",\r\n                                                            }}\r\n                                                            onClick={() => {\r\n                                                                var instance = M.Carousel.getInstance(\r\n                                                                    document.getElementById(\r\n                                                                        \"carousel-1\"\r\n                                                                    )!\r\n                                                                );\r\n                                                                instance.next();\r\n                                                            }}\r\n                                                        ></span>\r\n                                                    </a>\r\n                                                );\r\n                                            }\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n\r\n                            <div\r\n                                id=\"carousel-2\"\r\n                                className=\"carousel carousel-slider show-on-small-only hide-on-med-and-up\"\r\n                                style={{ height: \"350px\" }}\r\n                            >\r\n                                {!data.getProduct.images ? (\r\n                                    <></>\r\n                                ) : (\r\n                                    <>\r\n                                        {data.getProduct.images.map(\r\n                                            (_val, i) => {\r\n                                                return (\r\n                                                    <a\r\n                                                        href=\"#!\"\r\n                                                        className=\"carousel-item noselect\"\r\n                                                        key={i}\r\n                                                        style={{\r\n                                                            maxHeight: \"250px\",\r\n                                                            minHeight: \"100px\",\r\n                                                        }}\r\n                                                    >\r\n                                                        <span\r\n                                                            style={{\r\n                                                                display:\r\n                                                                    \"inline-block\",\r\n                                                                maxHeight:\r\n                                                                    \"250px\",\r\n                                                                height: \"100%\",\r\n                                                                width: \"10%\",\r\n                                                            }}\r\n                                                            onClick={() => {\r\n                                                                var instance = M.Carousel.getInstance(\r\n                                                                    document.getElementById(\r\n                                                                        \"carousel-2\"\r\n                                                                    )!\r\n                                                                );\r\n                                                                instance.prev();\r\n                                                            }}\r\n                                                        ></span>\r\n                                                        <img\r\n                                                            alt=\"product\"\r\n                                                            style={{\r\n                                                                maxHeight:\r\n                                                                    \"250px\",\r\n                                                                width: \"80%\",\r\n                                                            }}\r\n                                                            src={\r\n                                                                product.images[\r\n                                                                    i\r\n                                                                ].img_url || \"\"\r\n                                                            }\r\n                                                        />\r\n                                                        <span\r\n                                                            style={{\r\n                                                                display:\r\n                                                                    \"inline-block\",\r\n                                                                maxHeight:\r\n                                                                    \"250px\",\r\n                                                                height: \"100%\",\r\n                                                                width: \"10%\",\r\n                                                            }}\r\n                                                            onClick={() => {\r\n                                                                var instance = M.Carousel.getInstance(\r\n                                                                    document.getElementById(\r\n                                                                        \"carousel-2\"\r\n                                                                    )!\r\n                                                                );\r\n                                                                instance.next();\r\n                                                            }}\r\n                                                        ></span>\r\n                                                    </a>\r\n                                                );\r\n                                            }\r\n                                        )}\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <div>\r\n                                <img\r\n                                    id=\"product-img\"\r\n                                    src={product.images[0].img_url || \"\"}\r\n                                    alt=\"product\"\r\n                                    style={{ maxWidth: \"100%\" }}\r\n                                />\r\n                            </div>\r\n                        </>\r\n                    )}\r\n                </div>\r\n                <div className=\"col s10 offset-s1 m3 offset-m1\">\r\n                    <div\r\n                        style={{ marginBottom: \"16px\" }}\r\n                        className=\"hide-on-small-only\"\r\n                    >\r\n                        {product.desc}\r\n                    </div>\r\n                    <div className=\"centered\">\r\n                        <div\r\n                            style={{ marginBottom: \"16px\", marginTop: \"16px\" }}\r\n                            className=\"show-on-small hide-on-med-and-up\"\r\n                        >\r\n                            {product.desc}\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className=\"divider\"\r\n                        style={{ marginBottom: \"16px\" }}\r\n                    ></div>\r\n                    <a\r\n                        href=\"#!\"\r\n                        className=\"tooltipped\"\r\n                        data-position=\"right\"\r\n                        data-tooltip={`${product.stock} remaining`}\r\n                    >\r\n                        <div\r\n                            className=\"hide-on-small-only\"\r\n                            style={{\r\n                                height: \"55px\",\r\n                                width: \"100%\",\r\n                                border: \"1px solid black\",\r\n                                marginBottom: \"16px\",\r\n                            }}\r\n                        >\r\n                            <span\r\n                                className=\"filler\"\r\n                                style={{\r\n                                    display: \"inline-block\",\r\n                                    height: \"100%\",\r\n                                    backgroundColor: \"#0d0303\",\r\n                                }}\r\n                            ></span>\r\n                        </div>\r\n                    </a>\r\n\r\n                    {product.stock === 0 ? (\r\n                        <></>\r\n                    ) : (\r\n                        <>\r\n                            <button\r\n                                style={{\r\n                                    width: \"100%\",\r\n                                    backgroundColor: \"#0a0a0a\",\r\n                                    color: \"#fff\",\r\n                                    border: \"none\",\r\n                                    height: \"45px\",\r\n                                }}\r\n                                onClick={() => {\r\n                                    M.toast({\r\n                                        html: \"Product was added to cart\",\r\n                                    });\r\n                                    dispatch(addProductToCart(product));\r\n                                }}\r\n                            >\r\n                                Add to Cart\r\n                            </button>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useGetProductsQuery } from \"../../generated/graphql\";\r\nimport { changeQuantityOnProduct } from \"../../redux/actions/userAction\";\r\nimport anime from \"animejs\";\r\n\r\nconst Cart = () => {\r\n    const { data, loading, error } = useGetProductsQuery();\r\n    // const [checkout] = useCheckoutMutation();\r\n    const products = useSelector(state => state.productsInCart);\r\n    const dispatch = useDispatch();\r\n    const [state, setState] = useState({\r\n        refresh: false,\r\n        quantities: [],\r\n    });\r\n\r\n    const total = useRef(0);\r\n\r\n    useEffect(() => {\r\n        for (let i = 0; i < products.length; i++) {\r\n            total.current = products[i].price * products[i].quantity;\r\n        }\r\n    }, [products]);\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!!error) {\r\n        return (\r\n            <div style={{ minHeight: \"70vh\" }}>\r\n                <div\r\n                    className=\"row\"\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                    <h5>Oops this is embarrasing</h5>\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div className=\"faq-wrapper\">\r\n                        <div\r\n                            style={{\r\n                                width: \"100%\",\r\n                                borderBottom: \" 4px solid #ff0000\",\r\n                            }}\r\n                        ></div>\r\n\r\n                        <h3 style={{ fontWeight: 550 }}>An error occured</h3>\r\n\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            <strong style={{ color: \"#ff0000\" }}>-</strong>{\" \"}\r\n                            Please try again later. If error persist contact us\r\n                            via instagram or email.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!products || products.length === 0) {\r\n        return (\r\n            <div style={{ minHeight: \"80vh\" }}>\r\n                <h3 className=\"center-align\">Your Shopping Cart Is Empty!</h3>\r\n                <a href=\"#/products\">\r\n                    <h6\r\n                        className=\"center-align\"\r\n                        style={{ marginBottom: \"16px\" }}\r\n                    >\r\n                        Click me to start shopping\r\n                    </h6>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!!data) {\r\n        for (let i = 0; i < products.length; i++) {\r\n            // cart item validation\r\n            for (let j = 0; j < data.getProducts.length; j++) {\r\n                if (products[i].product_id === data.getProducts[j].product_id) {\r\n                    if (products[i].quantity > data.getProducts[j].stock) {\r\n                        M.toast({\r\n                            html: `Could not add`,\r\n                        });\r\n\r\n                        M.toast({\r\n                            html: `There is only ${data.getProducts[j].stock} ${products[i].name} remaining`,\r\n                        });\r\n                        // edit the item\r\n                        products[i].name = data.getProducts[j].name;\r\n                        products[i].price = data.getProducts[j].price;\r\n                        products[i].quantity = data.getProducts[j].stock;\r\n                        dispatch(\r\n                            changeQuantityOnProduct(\r\n                                data.getProducts[j].stock,\r\n                                i\r\n                            )\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{ minHeight: \"80vh\" }}>\r\n            <>\r\n                <h3 className=\"center-align\" style={{ fontWeight: \"bold\" }}>\r\n                    Cart\r\n                </h3>\r\n                <h6 className=\"center-align\" style={{ fontWeight: 600 }}>\r\n                    {/* ${Number(total / 100).toFixed(2)} */}\r\n                </h6>\r\n                {products.map((_val, i) => {\r\n                    return (\r\n                        <div\r\n                            id={`product-${i}`}\r\n                            key={i}\r\n                            className={`product-${i} product row container`}\r\n                        >\r\n                            <div className={` col s12 m5 l4`}>\r\n                                <img\r\n                                    alt=\"product\"\r\n                                    src={products[i].images[0].img_url}\r\n                                    style={{ width: \"100%\" }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"col s12 m4\">\r\n                                <h5 className=\"center-align hide-on-small-only\">\r\n                                    {products[i].name}\r\n                                </h5>\r\n\r\n                                <h6 className=\"center-align show-on-small hide-on-med-and-up\">\r\n                                    {products[i].name} ($\r\n                                    {Number(products[i].price / 100).toFixed(2)}\r\n                                    )\r\n                                </h6>\r\n                            </div>\r\n\r\n                            <div\r\n                                className=\"col s4 offset-s4 m2 l2\"\r\n                                style={{\r\n                                    padding: \"0\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                }}\r\n                            >\r\n                                <input\r\n                                    type=\"text\"\r\n                                    value={\r\n                                        state.quantities[i] ||\r\n                                        state.quantities[i] === 0\r\n                                            ? state.quantities[i]\r\n                                            : products[i].quantity\r\n                                    }\r\n                                    minLength={0}\r\n                                    maxLength={2}\r\n                                    pattern=\"\\D\"\r\n                                    onBlur={e => {\r\n                                        dispatch(\r\n                                            changeQuantityOnProduct(\r\n                                                Number(e.target.value),\r\n                                                i\r\n                                            )\r\n                                        );\r\n\r\n                                        let tmp = state.quantities;\r\n                                        tmp.splice(i, 1);\r\n\r\n                                        if (e.target.value === \"0\") {\r\n                                            anime({\r\n                                                duration: 400,\r\n                                                targets: `.product-${i}`,\r\n                                                easing: \"easeOutExpo\",\r\n                                                opacity: {\r\n                                                    value: [1, 0],\r\n                                                    easing: \"linear\",\r\n                                                },\r\n                                                complete: function () {\r\n                                                    setState({\r\n                                                        ...state,\r\n                                                        quantities: tmp,\r\n                                                        refresh: !state.refresh,\r\n                                                    });\r\n                                                    if (\r\n                                                        !!document.getElementById(\r\n                                                            `product-${i}`\r\n                                                        )\r\n                                                    ) {\r\n                                                        document.getElementById(\r\n                                                            `product-${i}`\r\n                                                        )!.style.opacity = \"1\";\r\n                                                    }\r\n                                                },\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                    onChange={e => {\r\n                                        let tmp: any = state.quantities;\r\n\r\n                                        if (!e.target.value) {\r\n                                            tmp[i] = 0;\r\n                                            setState({\r\n                                                ...state,\r\n                                                quantities: tmp,\r\n                                            });\r\n                                        }\r\n\r\n                                        if (e.target.value.match(/\\d/g)) {\r\n                                            tmp[i] = Number(e.target.value);\r\n                                            setState({\r\n                                                ...state,\r\n                                                quantities: tmp,\r\n                                            });\r\n                                        }\r\n                                    }}\r\n                                    style={{\r\n                                        textAlign: \"center\",\r\n                                        border: \"1px solid #000\",\r\n                                        height: \"56px\",\r\n                                        width: \"56px\",\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"col hide-on-small-only m1 l2\">\r\n                                <span></span>$\r\n                                {Number(products[i].price / 100).toFixed(2)}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        marginBottom: \"40px\",\r\n                    }}\r\n                >\r\n                    <a\r\n                        className=\"btn\"\r\n                        style={{\r\n                            marginTop: \"16px\",\r\n                            width: \"45%\",\r\n                            maxWidth: \"380px\",\r\n                            backgroundColor: \"#343145\",\r\n                        }}\r\n                        href=\"#/checkout\"\r\n                    >\r\n                        checkout\r\n                    </a>\r\n                </div>\r\n            </>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","const Paid = () => {\r\n    return (\r\n        <div style={{ minHeight: \"80vh\" }}>\r\n            <div className=\"centered\">\r\n                <h3>Success</h3>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        borderBottom: \" 4px solid #ff0000\",\r\n                    }}\r\n                ></div>\r\n            </div>\r\n\r\n            <div className=\"centered\">\r\n                <div className=\"faq-wrapper\">\r\n                    <blockquote\r\n                        style={{\r\n                            borderLeft: \"5px solid black\",\r\n                            marginTop: \"64px\",\r\n                        }}\r\n                    >\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            We Received your order.\r\n                        </h3>\r\n\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            <strong style={{ color: \"#ff0000\" }}>-</strong>{\" \"}\r\n                            Please check your paypal, email,\r\n                            {/* or the My-Orders \r\n                            page */}{\" \"}\r\n                            for updates.\r\n                        </p>\r\n                    </blockquote>\r\n\r\n                    <blockquote\r\n                        style={{\r\n                            borderLeft: \"5px solid #ff0000\",\r\n                            marginTop: \"64px\",\r\n                        }}\r\n                    >\r\n                        <h3 style={{ fontWeight: 550 }} className=\"noselect\">\r\n                            Thank you for shopping with Us! ٩(\r\n                            <span style={{ color: \"pink\" }}>♡</span>ε\r\n                            <span style={{ color: \"pink\" }}>♡</span>\r\n                            )۶\r\n                        </h3>\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Paid;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    useCheckoutMutation,\r\n    useGetCurrUserQuery,\r\n    useValidateCouponMutation,\r\n    usePaypalCheckoutMutation,\r\n    useAddPaypalOrderMutation,\r\n} from \"../../generated/graphql\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport { Redirect } from \"react-router\";\r\nimport { checkAuth } from \"../../CheckAuth\";\r\nimport { resetCart } from \"../../redux/actions/userAction\";\r\nimport Paid from \"./Paid\";\r\n\r\nfunction CardSection() {\r\n    const CARD_ELEMENT_OPTIONS: any = {\r\n        iconStyle: \"solid\",\r\n        hidePostalCode: true,\r\n        style: {\r\n            base: {\r\n                iconColor: \"rgb(240, 57, 122)\",\r\n                color: \"rgb(240, 57, 122)\",\r\n                fontSize: \"16px\",\r\n                fontFamily: '\"Open Sans\", sans-serif',\r\n                fontSmoothing: \"antialiased\",\r\n                \"::placeholder\": {\r\n                    color: \"#CFD7DF\",\r\n                },\r\n            },\r\n\r\n            invalid: {\r\n                color: \"#e5424d\",\r\n                \":focus\": {\r\n                    color: \"#303238\",\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return <CardElement options={CARD_ELEMENT_OPTIONS} />;\r\n}\r\n\r\nconst Checkout = props => {\r\n    const { data } = useGetCurrUserQuery();\r\n    const [checkout] = useCheckoutMutation();\r\n    const [validateCoupon] = useValidateCouponMutation();\r\n    const [paypalCheckout] = usePaypalCheckoutMutation();\r\n    const [addPaypalOrder] = useAddPaypalOrderMutation();\r\n    const [discountPH, setDiscountPH] = useState(0);\r\n    const products = useSelector(state => state.productsInCart);\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState(\"\");\r\n    const [coupon, setCoupon] = useState(\"\");\r\n    const [subtotal, setSubtotal] = useState(-1);\r\n    const [Total, setTotal] = useState(-1);\r\n    const [shipping, setShipping] = useState(-1);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [billing, setBilling] = useState({\r\n        refresh: false,\r\n        email: \"\",\r\n        name: \"\",\r\n        address: {\r\n            city: \"\",\r\n            line1: \"\",\r\n            zip: \"\",\r\n            state: \"\",\r\n            country: \"\",\r\n        },\r\n    });\r\n\r\n    const [paidFor, setPaidFor] = useState(false);\r\n    const [err, setError] = useState(\"\");\r\n    const [address, setAddress] = useState({\r\n        city: \"\",\r\n        line1: \"\",\r\n        zip: \"\",\r\n        state: \"\",\r\n        email: \"\",\r\n        name: \"\",\r\n        country: \"\",\r\n    });\r\n\r\n    const paypalRef = useRef();\r\n    const couponRef: any = useRef();\r\n    couponRef.current = coupon;\r\n\r\n    useEffect(() => {\r\n        let tmp: any = paypalRef.current;\r\n        var elems = document.querySelectorAll(\".autocomplete\");\r\n        M.Autocomplete.init(elems, {\r\n            data: {\r\n                Alabama: null,\r\n                Alaska: null,\r\n                Arizona: null,\r\n                Arkansas: null,\r\n                California: null,\r\n                Colorado: null,\r\n                Connecticut: null,\r\n                Delaware: null,\r\n                Florida: null,\r\n                Georgia: null,\r\n                Hawaii: null,\r\n                Idaho: null,\r\n                Illinois: null,\r\n                Indiana: null,\r\n                Iowa: null,\r\n                Kansas: null,\r\n                Kentucky: null,\r\n                Louisiana: null,\r\n                Maine: null,\r\n                Maryland: null,\r\n                Massachusettes: null,\r\n                Michigan: null,\r\n                Minnesota: null,\r\n                Mississippi: null,\r\n                Missouri: null,\r\n                Montana: null,\r\n                Nebraska: null,\r\n                Nevada: null,\r\n                \"New Hampshire\": null,\r\n                \"New Jersey\": null,\r\n                \"New Mexico\": null,\r\n                \"New York\": null,\r\n                \"North Carolina\": null,\r\n                \"North Dakota\": null,\r\n                Ohio: null,\r\n                Oklahoma: null,\r\n                Oregon: null,\r\n                Pennsylvania: null,\r\n                \"Rhode Island\": null,\r\n                \"South Carolina\": null,\r\n                \"South Dakota\": null,\r\n                Tennessee: null,\r\n                Texas: null,\r\n                Utah: null,\r\n                Vermont: null,\r\n                Virginia: null,\r\n                Washington: null,\r\n                \"West Virginia\": null,\r\n                Wisconsin: null,\r\n                Wyoming: null,\r\n            },\r\n        });\r\n\r\n        let win = window as any;\r\n        try {\r\n            if (!!tmp && tmp.children.length === 0) {\r\n                win.paypal\r\n                    .Buttons({\r\n                        createOrder: async (data, actions) => {\r\n                            let products_str = JSON.stringify(products);\r\n\r\n                            let price = await paypalCheckout({\r\n                                variables: {\r\n                                    products: products_str,\r\n                                    coupon: couponRef.current || \"NONE\",\r\n                                },\r\n                            });\r\n\r\n                            if (!price) {\r\n                                return;\r\n                            } else {\r\n                                return actions.order.create({\r\n                                    purchase_units: [\r\n                                        {\r\n                                            description: \"product.description\",\r\n                                            amount: {\r\n                                                currency_code: \"USD\",\r\n                                                value: Number(\r\n                                                    Number(\r\n                                                        price.data\r\n                                                            ?.paypalCheckout\r\n                                                    ) / 100\r\n                                                ).toFixed(2),\r\n                                            },\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }\r\n                        },\r\n                        onApprove: async (_ppdata, actions) => {\r\n                            const order = await actions.order.capture();\r\n                            console.log(\"order :>> \", order);\r\n                            let products_str = JSON.stringify(products),\r\n                                purchaseUnits_str = JSON.stringify(\r\n                                    order.purchase_units\r\n                                ),\r\n                                user_id;\r\n                            if (\r\n                                !data ||\r\n                                !data.getCurrUser ||\r\n                                !data.getCurrUser.user_id\r\n                            ) {\r\n                                user_id =\r\n                                    order.purchase_units[0].payee.email_address;\r\n                            } else {\r\n                                user_id = data!.getCurrUser!.user_id!;\r\n                            }\r\n                            // validate order info here paypal order here\r\n                            addPaypalOrder({\r\n                                variables: {\r\n                                    coupon: couponRef.current || \"NONE\",\r\n                                    products: products_str,\r\n                                    purchase_units: purchaseUnits_str,\r\n                                    user_id,\r\n                                },\r\n                            });\r\n                            setPaidFor(true);\r\n                        },\r\n                        onError: async err => {\r\n                            console.log(\"err :>> \", err);\r\n                            let products_str = JSON.stringify(products);\r\n                            var price: any = await paypalCheckout({\r\n                                variables: {\r\n                                    products: products_str,\r\n                                    coupon,\r\n                                },\r\n                            });\r\n                            setError(price.data.paypalCheckout);\r\n                        },\r\n                    })\r\n                    .render(paypalRef.current);\r\n            } else {\r\n            }\r\n        } catch {\r\n            setError(\"DONT_KNOW\");\r\n        }\r\n    }, [Total, addPaypalOrder, coupon, data, paypalCheckout, products]);\r\n\r\n    if (!!err) {\r\n        return (\r\n            <div style={{ minHeight: \"70vh\" }}>\r\n                <div\r\n                    className=\"row\"\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                    <h1>Oops this is embarrasing</h1>\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div className=\"faq-wrapper\">\r\n                        <div\r\n                            style={{\r\n                                width: \"100%\",\r\n                                borderBottom: \" 4px solid black\",\r\n                            }}\r\n                        ></div>\r\n\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            It looks like{\" \"}\r\n                            <span style={{ color: \"rgb(230, 19, 19)\" }}>\r\n                                {err}\r\n                            </span>\r\n                        </h3>\r\n\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            <strong style={{ color: \"#ff0000\" }}>-</strong> If\r\n                            you believe this is an error please contact us via\r\n                            instagram or email.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (paidFor) {\r\n        dispatch(resetCart());\r\n        return <Paid />;\r\n    }\r\n\r\n    if (!products || products.length === 0) {\r\n        return <Redirect to=\"/my-cart\" />;\r\n    }\r\n\r\n    if (redirect) {\r\n        if (checkAuth()) {\r\n            return (\r\n                <Redirect\r\n                    to={{ pathname: \"/my-orders\", state: { reload: true } }}\r\n                />\r\n            );\r\n        } else {\r\n            return <Redirect to=\"/products\" />;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const { stripe, elements } = props;\r\n        if (!stripe || !elements) {\r\n            return;\r\n        }\r\n\r\n        const card = elements.getElement(CardElement);\r\n        const result = await stripe.createToken(card);\r\n\r\n        if (result.error) {\r\n            console.log(\"result.error :>> \", result.error);\r\n        } else {\r\n            let tmp: any = address;\r\n            tmp.email = address.email;\r\n            let products_str = JSON.stringify(products),\r\n                token_str = JSON.stringify(result.token),\r\n                shipping_str = JSON.stringify(tmp);\r\n\r\n            let user_id;\r\n            if (!data) {\r\n                user_id = \"NONE\";\r\n            } else {\r\n                user_id = data.getCurrUser!.user_id!;\r\n            }\r\n\r\n            let billing_str = \"\";\r\n            if (billing.refresh) {\r\n                billing_str = JSON.stringify(billing);\r\n            } else {\r\n                billing_str = \"NONE\";\r\n            }\r\n\r\n            let response = await checkout({\r\n                variables: {\r\n                    token: token_str,\r\n                    user_id,\r\n                    products: products_str,\r\n                    shipping_info: shipping_str,\r\n                    billing_info: billing_str,\r\n                    coupon,\r\n                },\r\n            });\r\n\r\n            if (!response!.data!.checkout) {\r\n                M.toast({ html: \"Failed to checkout\" });\r\n                M.toast({ html: \"Please double check your details\" });\r\n            } else if (response!.data!.checkout) {\r\n                setRedirect(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (subtotal === -1) {\r\n        let tmp_subtotal = 0;\r\n\r\n        let shipping_total = 100;\r\n        for (let i = 0; i < products.length; i++) {\r\n            tmp_subtotal += products[i].price * products[i].quantity;\r\n            shipping_total += products[i].quantity * 50;\r\n        }\r\n\r\n        if (shipping_total > 500) {\r\n            shipping_total = 500;\r\n        }\r\n\r\n        let tax = Math.round(tmp_subtotal * 0.095);\r\n\r\n        setTotal(tmp_subtotal + tax);\r\n        setSubtotal(tmp_subtotal);\r\n        setShipping(shipping_total);\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let tmp_email = address.email;\r\n        if (checkAuth()) {\r\n            tmp_email = \"placeholder\";\r\n        }\r\n\r\n        if (\r\n            !name ||\r\n            !tmp_email ||\r\n            !address.line1 ||\r\n            !address.city ||\r\n            !address.zip ||\r\n            !address.state ||\r\n            billing.refresh\r\n        ) {\r\n            if (!tmp_email && document.getElementById(\"email\")) {\r\n                document.getElementById(\"email\")!.classList.add(\"invalid\");\r\n            }\r\n            if (!name) {\r\n                document.getElementById(\"name\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (!address.line1) {\r\n                document.getElementById(\"address\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (!address.city) {\r\n                document.getElementById(\"city\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (!address.zip) {\r\n                document.getElementById(\"zip\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (!address.state) {\r\n                document.getElementById(\"state\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (billing.refresh) {\r\n                if (\r\n                    !billing.name ||\r\n                    !billing.email ||\r\n                    !billing.address.line1 ||\r\n                    !billing.address.city ||\r\n                    !billing.address.zip ||\r\n                    !billing.address.state\r\n                ) {\r\n                    if (!billing.name) {\r\n                        document\r\n                            .getElementById(\"billing_name\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.email) {\r\n                        document\r\n                            .getElementById(\"billing_email\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.address.line1) {\r\n                        document\r\n                            .getElementById(\"billing_address\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.address.city) {\r\n                        document\r\n                            .getElementById(\"billing_city\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.address.zip) {\r\n                        document\r\n                            .getElementById(\"billing_zip\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.address.state) {\r\n                        document\r\n                            .getElementById(\"billing_state\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            M.toast({\r\n                html: \"Please fill in the missing data\",\r\n            });\r\n        } else {\r\n            handleSubmit();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\" style={{ height: \"100%\", margin: \"0\" }}>\r\n            <div className=\"col s12 m6\" style={{ minHeight: \"93vh\" }}>\r\n                <div className=\"container\" style={{ marginTop: \"50px\" }}>\r\n                    <div className=\"row\">\r\n                        <a href=\"#/my-cart\">\r\n                            <svg\r\n                                style={{ marginRight: \"8px\" }}\r\n                                focusable=\"false\"\r\n                                width=\"12\"\r\n                                height=\"12\"\r\n                                viewBox=\"0 0 16 16\"\r\n                            >\r\n                                <path\r\n                                    d=\"M3.417 7H15a1 1 0 0 1 0 2H3.417l4.591 4.591a1 1 0 0 1-1.415 1.416l-6.3-6.3a1 1 0 0 1 0-1.414l6.3-6.3A1 1 0 0 1 8.008 2.41z\"\r\n                                    fillRule=\"evenodd\"\r\n                                ></path>\r\n                            </svg>\r\n                            <span>Back To Cart</span>\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <div\r\n                            className=\"ProductSummary container\"\r\n                            style={{ marginTop: \"32px\" }}\r\n                        >\r\n                            <div\r\n                                className=\"ProductSummary-info\"\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    style={{\r\n                                        color: \"rgba(26,26,26,.6)\",\r\n                                        fontWeight: \"bold\",\r\n                                    }}\r\n                                >\r\n                                    Total\r\n                                </span>\r\n                                <span\r\n                                    style={{\r\n                                        fontSize: \"36px\",\r\n                                        letterSpacing: \"-.03rem\",\r\n                                        color: \"#303030\",\r\n                                    }}\r\n                                >\r\n                                    $\r\n                                    {Number((Total + shipping) / 100).toFixed(\r\n                                        2\r\n                                    )}\r\n                                    {/* ${Number(Total / 100).toFixed(2)} */}\r\n                                </span>\r\n                                <span\r\n                                    style={{\r\n                                        marginTop: \"32px\",\r\n                                        marginBottom: \"32px\",\r\n                                    }}\r\n                                    id=\"Products-summary\"\r\n                                >\r\n                                    {products.map((_val, i) => {\r\n                                        return (\r\n                                            <div\r\n                                                key={i}\r\n                                                className=\"product\"\r\n                                                style={{\r\n                                                    marginBottom: \"16px\",\r\n                                                    display: \"flex\",\r\n                                                    justifyContent:\r\n                                                        \"space-between\",\r\n                                                }}\r\n                                            >\r\n                                                <div\r\n                                                    className=\"product-name\"\r\n                                                    style={{\r\n                                                        fontSize: \"16px\",\r\n                                                        fontWeight: 600,\r\n                                                    }}\r\n                                                >\r\n                                                    {products[i].name}\r\n                                                    {products[i].quantity !==\r\n                                                    1 ? (\r\n                                                        <>\r\n                                                            {\" \"}\r\n                                                            x\r\n                                                            {\r\n                                                                products[i]\r\n                                                                    .quantity\r\n                                                            }\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <></>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div\r\n                                                    className=\"product-subtotal\"\r\n                                                    style={{ fontWeight: 390 }}\r\n                                                >\r\n                                                    $\r\n                                                    {Number(\r\n                                                        (products[i].price *\r\n                                                            products[i]\r\n                                                                .quantity) /\r\n                                                            100\r\n                                                    ).toFixed(2)}\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                    <div\r\n                                        className=\"subtotal\"\r\n                                        style={{\r\n                                            paddingBottom: \"16px\",\r\n                                            paddingTop: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Subtotal</span>\r\n                                        <span>\r\n                                            ${Number(subtotal / 100).toFixed(2)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"divider\"></div>\r\n\r\n                                    <div\r\n                                        id=\"coupon-applied\"\r\n                                        style={{\r\n                                            display: \"none\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        {shipping === 0 ? (\r\n                                            <></>\r\n                                        ) : (\r\n                                            <>\r\n                                                <span>Coupon Applied</span>\r\n                                                <span\r\n                                                    style={{\r\n                                                        fontWeight: \"bold\",\r\n                                                    }}\r\n                                                >\r\n                                                    -\r\n                                                    {Number(\r\n                                                        discountPH / 100\r\n                                                    ).toFixed(2)}\r\n                                                </span>\r\n                                            </>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"row\" id=\"promocode-input\">\r\n                                        <div className=\"col s8\">\r\n                                            <div className=\"input-field\">\r\n                                                <input\r\n                                                    id=\"PromoCode\"\r\n                                                    type=\"text\"\r\n                                                    className=\"validate\"\r\n                                                    value={coupon}\r\n                                                    onChange={e => {\r\n                                                        setCoupon(\r\n                                                            e.target.value.toLowerCase()\r\n                                                        );\r\n                                                    }}\r\n                                                />\r\n                                                <label htmlFor=\"PromoCode\">\r\n                                                    Add a promotion code\r\n                                                </label>\r\n                                                <span\r\n                                                    id=\"coupon-helper\"\r\n                                                    className=\"helper-text\"\r\n                                                    data-error=\" \"\r\n                                                ></span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col s3\">\r\n                                            <button\r\n                                                className=\"btn\"\r\n                                                style={{\r\n                                                    backgroundColor: \"#343145\",\r\n                                                    marginTop: \"25px\",\r\n                                                    marginBottom: \"15px\",\r\n                                                }}\r\n                                                onClick={async () => {\r\n                                                    //validate  coupon\r\n                                                    if (coupon.length !== 0) {\r\n                                                        let type = await validateCoupon(\r\n                                                            {\r\n                                                                variables: {\r\n                                                                    coupon_name: coupon,\r\n                                                                },\r\n                                                            }\r\n                                                        );\r\n                                                        if (\r\n                                                            type.data!\r\n                                                                .validateCoupon ===\r\n                                                            \"INVALID\"\r\n                                                        ) {\r\n                                                            document\r\n                                                                .getElementById(\r\n                                                                    \"PromoCode\"\r\n                                                                )!\r\n                                                                .classList.add(\r\n                                                                    \"invalid\"\r\n                                                                );\r\n\r\n                                                            document.getElementById(\r\n                                                                \"coupon-helper\"\r\n                                                            )!.attributes[\r\n                                                                \"data-error\"\r\n                                                            ].nodeValue = `The coupon you entered(${coupon}) is not valid`;\r\n\r\n                                                            setCoupon(\"\");\r\n                                                        } else if (\r\n                                                            type.data!\r\n                                                                .validateCoupon ===\r\n                                                            \"FREE_SHIPPING\"\r\n                                                        ) {\r\n                                                            console.log(\r\n                                                                \"freesh\"\r\n                                                            );\r\n                                                            // Handle Free Shipping here\r\n                                                            setShipping(0);\r\n                                                            document.getElementById(\r\n                                                                \"promocode-input\"\r\n                                                            )!.style.display =\r\n                                                                \"none\";\r\n                                                            // replace promo input and submit button with a icon that shows the coupon and discount applied\r\n                                                            document.getElementById(\r\n                                                                \"coupon-applied\"\r\n                                                            )!.style.display =\r\n                                                                \"flex\";\r\n                                                        } else {\r\n                                                            // amount to subtract from subtotal = subtotal * percentage\r\n                                                            let percentage =\r\n                                                                \"0.\" +\r\n                                                                type.data!\r\n                                                                    .validateCoupon;\r\n\r\n                                                            let discount = Math.round(\r\n                                                                subtotal *\r\n                                                                    Number(\r\n                                                                        percentage\r\n                                                                    )\r\n                                                            );\r\n\r\n                                                            let tmp = subtotal;\r\n                                                            tmp -= discount;\r\n\r\n                                                            let tax = Math.round(\r\n                                                                tmp * 0.095\r\n                                                            );\r\n\r\n                                                            setTotal(tmp + tax);\r\n                                                            setSubtotal(tmp);\r\n                                                            setDiscountPH(\r\n                                                                discount\r\n                                                            );\r\n\r\n                                                            // hide promo input and submit button\r\n                                                            document.getElementById(\r\n                                                                \"promocode-input\"\r\n                                                            )!.style.display =\r\n                                                                \"none\";\r\n                                                            // replace promo input and submit button with a icon that shows the coupon and discount applied\r\n                                                            document.getElementById(\r\n                                                                \"coupon-applied\"\r\n                                                            )!.style.display =\r\n                                                                \"flex\";\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            marginTop: \"8px\",\r\n                                            marginBottom: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Sales Tax</span>\r\n                                        <span style={{ fontWeight: \"bold\" }}>\r\n                                            $\r\n                                            {Number(\r\n                                                Math.round(subtotal * 0.095) /\r\n                                                    100\r\n                                            ).toFixed(2)}\r\n                                        </span>\r\n                                    </span>\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            marginTop: \"8px\",\r\n                                            marginBottom: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Shipping </span>\r\n                                        <span style={{ fontWeight: \"bold\" }}>\r\n                                            ${Number(shipping / 100).toFixed(2)}\r\n                                        </span>\r\n                                    </span>\r\n\r\n                                    <div className=\"divider\"></div>\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            marginTop: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Total Due</span>\r\n                                        <span>\r\n                                            $\r\n                                            {Number(\r\n                                                (Total + shipping) / 100\r\n                                            ).toFixed(2)}\r\n                                        </span>\r\n                                    </span>\r\n                                </span>\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    marginTop: \"32px\",\r\n                                }}\r\n                            >\r\n                                <div\r\n                                    style={{\r\n                                        width: \"85%\",\r\n                                        maxWidth: \"600px\",\r\n                                    }}\r\n                                    ref={paypalRef as any}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className=\"col s12 m6 z-depth-3 \"\r\n                style={{ minHeight: \"93vh\" }}\r\n            >\r\n                <div className=\"container \" style={{}}>\r\n                    {/* <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        <h5>Or</h5>\r\n                    </div> */}\r\n\r\n                    <h3>Shipping Information </h3>\r\n                    <h6>\r\n                        <strong style={{ color: \"#ff0000\" }}>*</strong>(US/USD\r\n                        ONLY) Please use Paypal for international orders\r\n                    </h6>\r\n                    <div className=\"centered\">\r\n                        <div\r\n                            style={{\r\n                                width: \"100%\",\r\n                                marginTop: 8,\r\n                                marginBottom: 8,\r\n                                borderRadius: \"15px\",\r\n                                borderBottom: \" 4px solid rgb(64, 3, 3)\",\r\n                            }}\r\n                        ></div>\r\n                    </div>\r\n                    {checkAuth() ? (\r\n                        <></>\r\n                    ) : (\r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                id=\"email\"\r\n                                type=\"text\"\r\n                                value={address.email}\r\n                                onChange={e =>\r\n                                    setAddress({\r\n                                        ...address,\r\n                                        email: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <span\r\n                                className=\"helper-text\"\r\n                                data-error=\"Please your email\"\r\n                            ></span>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"name\"\r\n                            value={name}\r\n                            type=\"text\"\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please your name\"\r\n                        ></span>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"address\"\r\n                            value={address.line1}\r\n                            type=\"text\"\r\n                            onChange={e =>\r\n                                setAddress({\r\n                                    ...address,\r\n                                    line1: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <label htmlFor=\"address\">Address</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please your address\"\r\n                        ></span>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col s6\">\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"city\"\r\n                                    value={address.city}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setAddress({\r\n                                            ...address,\r\n                                            city: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"city\">City</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please your city\"\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"zip\"\r\n                                    value={address.zip}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setAddress({\r\n                                            ...address,\r\n                                            zip: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"zip\">Zip</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please your zip\"\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"state\"\r\n                            value={address.state}\r\n                            className=\"autocomplete\"\r\n                            type=\"text\"\r\n                            onChange={e =>\r\n                                setAddress({\r\n                                    ...address,\r\n                                    state: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <label htmlFor=\"state\">State</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please Pick a State\"\r\n                        ></span>\r\n                    </div>\r\n                    <div className=\"divider\"></div>\r\n                    <p>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"Billing_input\"\r\n                                onClick={() => {\r\n                                    setBilling({\r\n                                        refresh: !billing.refresh,\r\n                                        email: \"\",\r\n                                        name: \"\",\r\n                                        address: {\r\n                                            city: \"\",\r\n                                            line1: \"\",\r\n                                            zip: \"\",\r\n                                            state: \"\",\r\n                                            country: \"\",\r\n                                        },\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <span>Billing is different from shipping</span>\r\n                        </label>\r\n                    </p>\r\n                    {billing.refresh ? (\r\n                        <>\r\n                            <h2\r\n                                style={{\r\n                                    color: \"rgba(26,26,26,.9)\",\r\n                                    fontWeight: 500,\r\n                                    fontSize: \"16px\",\r\n                                }}\r\n                            >\r\n                                Billing Information\r\n                            </h2>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_email\"\r\n                                    type=\"text\"\r\n                                    value={billing.email}\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            email: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_email\">\r\n                                    Billing Email\r\n                                </label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please enter a your email\"\r\n                                ></span>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_name\"\r\n                                    value={billing.name}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            name: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_name\">Name</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please enter a your name\"\r\n                                ></span>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_address\"\r\n                                    value={billing.address.line1}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            address: {\r\n                                                ...billing.address,\r\n                                                line1: e.target.value,\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_address\">Address</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please enter your address\"\r\n                                ></span>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            id=\"billing_city\"\r\n                                            value={billing.address.city}\r\n                                            type=\"text\"\r\n                                            onChange={e =>\r\n                                                setBilling({\r\n                                                    ...billing,\r\n                                                    address: {\r\n                                                        ...billing.address,\r\n                                                        city: e.target.value,\r\n                                                    },\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor=\"billing_city\">\r\n                                            City\r\n                                        </label>\r\n                                        <span\r\n                                            className=\"helper-text\"\r\n                                            data-error=\"Please enter your city\"\r\n                                        ></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            id=\"billing_zip\"\r\n                                            value={billing.address.zip}\r\n                                            type=\"text\"\r\n                                            onChange={e =>\r\n                                                setBilling({\r\n                                                    ...billing,\r\n                                                    address: {\r\n                                                        ...billing.address,\r\n                                                        zip: e.target.value,\r\n                                                    },\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor=\"billing_zip\">Zip</label>\r\n                                        <span\r\n                                            className=\"helper-text\"\r\n                                            data-error=\"Please enter your zip\"\r\n                                        ></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_state\"\r\n                                    value={billing.address.state}\r\n                                    className=\"autocomplete\"\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            address: {\r\n                                                ...billing.address,\r\n                                                state: e.target.value,\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_state\">State</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please enter your state\"\r\n                                ></span>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                    <h2\r\n                        style={{\r\n                            color: \"rgba(26,26,26,.9)\",\r\n                            fontWeight: 500,\r\n                            fontSize: \"16px\",\r\n                        }}\r\n                    >\r\n                        Payment Details\r\n                    </h2>\r\n                    <CardSection />\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <button\r\n                            className=\"btn\"\r\n                            style={{\r\n                                marginTop: \"16px\",\r\n                                marginBottom: \"64px\",\r\n                                width: \"380px\",\r\n                                backgroundColor: \"#343145\",\r\n                            }}\r\n                            onClick={() => {\r\n                                validateForm();\r\n                            }}\r\n                        >\r\n                            Pay ${Number((Total + shipping) / 100).toFixed(2)}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","import \"../css/faq.scss\";\r\n\r\nconst FAQ = () => {\r\n    var eyeColors = [\r\n        \"rgb(36, 146, 242)\",\r\n        \"rgb(154, 24, 213)\",\r\n        \"#ff0000\",\r\n        \"#000\",\r\n    ];\r\n    let eyeColor = eyeColors[Math.floor(Math.random() * eyeColors.length)];\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <h1>FAQ</h1>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"faq-wrapper\">\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderBottom: \" 4px solid #ff0000\",\r\n                        }}\r\n                    ></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>Late Orders</h3>\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - Please be patient as the pandemic has slowed down mail\r\n                        times.\r\n                    </p>\r\n                    <div className=\"divider\"></div>\r\n                    <h3 style={{ fontWeight: 550 }}>Lost or Damaged Items</h3>\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> Please{\" \"}\r\n                        <a href=\"#/contact\"> contact us </a> about any lost or\r\n                        damaged items, and attach your order number.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        -{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            CantRelate.JP\r\n                        </strong>{\" \"}\r\n                        is not responsible for lost or damaged items but will\r\n                        replace when possible.\r\n                    </p>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>\r\n                        Incorrect Shipping Address\r\n                    </h3>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - Please double-check your orders before you place them.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> If wrong\r\n                        address is inputted,{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            please\r\n                            <a href=\"#/contact\"> contact us</a> as soon as\r\n                            possible\r\n                        </strong>\r\n                        . We will do our best to update your order.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - However{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            CantRelate.JP\r\n                        </strong>{\" \"}\r\n                        is not responsible for the user's error, and we will not\r\n                        replace the order if it has been shipped.\r\n                    </p>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>\r\n                        Thank you for checking out Can't Relate.JP!\r\n                    </h3>\r\n\r\n                    <p\r\n                        className=\"flow-text\"\r\n                        style={{\r\n                            fontWeight: 525,\r\n                            marginLeft: \"32px\",\r\n                        }}\r\n                    >\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> Happy\r\n                        Shopping! ٩(\r\n                        <strong style={{ color: eyeColor }}>◕</strong>‿\r\n                        <strong style={{ color: eyeColor }}>◕</strong>\r\n                        ｡)۶\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FAQ;\r\n","// import { useState } from \"react\";\r\n// import URI from \"../URI\";\r\nimport \"../css/contact.scss\";\r\nimport { FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\n// import { useGetCurrUserQuery } from \"../generated/graphql\";\r\n// import axios from \"axios\";\r\n\r\nconst Contact = () => {\r\n    // const { data } = useGetCurrUserQuery();\r\n    // const [name, setName] = useState(\"\");\r\n    // const [email, setEmail] = useState(\"\");\r\n    // const [message, setMessage] = useState(\"\");\r\n    // const [orderNum, setOrderNum] = useState(\"\");\r\n\r\n    // const submitForm = () => {\r\n    //     let tmp_email;\r\n    //     if (!!data) {\r\n    //         tmp_email = data!.getCurrUser.email;\r\n    //     } else {\r\n    //         tmp_email = email;\r\n    //     }\r\n\r\n    //     axios({\r\n    //         method: \"POST\",\r\n    //         url: `${URI}/api/contact`,\r\n    //         data: {\r\n    //             name,\r\n    //             email: tmp_email,\r\n    //             message,\r\n    //             orderNum,\r\n    //         },\r\n    //     }).then((res: any) => {\r\n    //         if (res.data === \"SUCCess\") {\r\n    //             M.toast({ html: \"SUCCessfully sent message.\" });\r\n    //             setName(\"\");\r\n    //             setEmail(\"\");\r\n    //             setMessage(\"\");\r\n    //             setOrderNum(\"\");\r\n    //         } else {\r\n    //             //handle failure\r\n    //             M.toast({ html: \"Failed to send message.\" });\r\n    //             M.toast({ html: \"Please Contact Us via Instagram or Email\" });\r\n    //         }\r\n    //     });\r\n\r\n    //     // fetch(`${URI}/api/contact`, {\r\n    //     //     method: \"POST\",\r\n    //     //     body: JSON.stringify({\r\n    //     //         name,\r\n    //     //         email: tmp_email,\r\n    //     //         message,\r\n    //     //         orderNum,\r\n    //     //     }),\r\n    //     // }).\r\n    // };\r\n\r\n    return (\r\n        <div id=\"contact-form\" className=\"container\">\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <h1>Contact Us</h1>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginBottom: \"10px\",\r\n                }}\r\n            >\r\n                <span>\r\n                    <a\r\n                        href=\"mailto:cantrelatejp@gmail.com\"\r\n                        style={{ width: \"300px\" }}\r\n                    >\r\n                        <FaEnvelope\r\n                            style={{ marginRight: \"5px\", fontSize: \"20px\" }}\r\n                            className=\"left black-text\"\r\n                        />\r\n                        cantrelatejp@gmail.com\r\n                    </a>\r\n                </span>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginBottom: \"10px\",\r\n                }}\r\n            >\r\n                <span>\r\n                    <a href=\"https://www.instagram.com/cantrelate.jp/\">\r\n                        <FaInstagram\r\n                            style={{ marginRight: \"5px\", fontSize: \"20px\" }}\r\n                            className=\"left black-text\"\r\n                        />\r\n                        @CantRelate.jp\r\n                    </a>\r\n                </span>\r\n            </div>\r\n\r\n            {/* <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"orderNum\">Order Number</label>\r\n                    </div>\r\n                    <input\r\n                        id=\"orderNum\"\r\n                        type=\"text\"\r\n                        className=\"validate browser-default\"\r\n                        value={orderNum}\r\n                        onChange={e => setOrderNum(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"message\">Message</label>\r\n                    </div>\r\n                    <textarea\r\n                        id=\"message\"\r\n                        className=\"validate browser-default\"\r\n                        value={message}\r\n                        onChange={e => setMessage(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"name\">Your Name</label>\r\n                    </div>\r\n                    <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        className=\"validate browser-default\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {checkAuth() ? (\r\n                <></>\r\n            ) : (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div className=\"w-30\">\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <label className=\" browser-default\" htmlFor=\"email\">\r\n                                Your Email\r\n                            </label>\r\n                        </div>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"text\"\r\n                            className=\"validate browser-default\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <button\r\n                    className=\"btn black\"\r\n                    style={{ width: \"25%\", marginTop: \"30px\" }}\r\n                    onClick={() => submitForm()}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","import \"../css/spolicy.scss\";\r\n\r\nconst ShippingPolicy = () => {\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <h3\r\n                    style={{\r\n                        fontWeight: 550,\r\n                    }}\r\n                >\r\n                    Shipping Policy\r\n                </h3>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        borderBottom: \" 4px solid #ff0000\",\r\n                    }}\r\n                ></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"divider\"></div>\r\n\r\n                <div className=\"spolicy-wrapper\">\r\n                    <blockquote style={{ borderLeft: \"5px solid black\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>Preorders</h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please allow 2-3 weeks for orders to be processed\r\n                            after pre-orders close.\r\n                        </p>\r\n                    </blockquote>\r\n                    <div className=\"divider\"></div>\r\n                    <blockquote style={{ borderLeft: \"5px solid black\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            Apparel or other specialty items\r\n                        </h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please allow for 3-4 weeks as they are specialty\r\n                            items\r\n                        </p>\r\n                    </blockquote>\r\n                    <div className=\"divider\"></div>\r\n                    <blockquote style={{ borderLeft: \"5px solid #ff0000\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            Lost or damaged items\r\n                        </h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please contact via instagram or email.\r\n                        </p>\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShippingPolicy;\r\n","const OrderSuccess = () => {\r\n    return <div>Your ordered was SUCCessful</div>;\r\n};\r\n\r\nexport default OrderSuccess;\r\n","import { Redirect } from \"react-router\";\r\nimport {\r\n    useGetSectionsProductsQuery,\r\n    useGetSectionByIdQuery,\r\n} from \"../../generated/graphql\";\r\n\r\nconst GetSection = section_id => {\r\n    const { data, loading } = useGetSectionByIdQuery({\r\n        variables: {\r\n            section_id,\r\n        },\r\n    });\r\n\r\n    let sdata = data,\r\n        sloading = loading;\r\n    return { sdata, sloading };\r\n};\r\n\r\nconst ViewSection = () => {\r\n    let section_id = 0;\r\n\r\n    if (process.env.NODE_ENV === \"production\") {\r\n        section_id = Number(window.location.href.split(\":\")[2]);\r\n    } else {\r\n        section_id = Number(window.location.href.split(\":\")[3]);\r\n    }\r\n\r\n    const { sdata, sloading } = GetSection(section_id);\r\n    const { data, loading, error } = useGetSectionsProductsQuery({\r\n        variables: {\r\n            section_id,\r\n        },\r\n    });\r\n\r\n    if (loading || sloading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (error || !data || !sdata) {\r\n        return <Redirect to=\"/products\" />;\r\n    }\r\n\r\n    console.log(\"data :>> \", data);\r\n    return (\r\n        <div className=\"container\">\r\n            <h1\r\n                className=\"center-align\"\r\n                style={{\r\n                    marginTop: \"60px\",\r\n                    marginBottom: \"60px\",\r\n                    fontWeight: 600,\r\n                }}\r\n            >\r\n                {sdata.getSectionById.name}\r\n            </h1>\r\n\r\n            <div className=\"products-grid\">\r\n                {data.getSectionsProducts.map((_val, i) => {\r\n                    let product = data.getSectionsProducts[i];\r\n                    return (\r\n                        <>\r\n                            <div\r\n                                className=\"card z-depth-0\"\r\n                                style={{\r\n                                    margin: \"0px 8px 32px 8px\",\r\n                                }}\r\n                                key={i}\r\n                            >\r\n                                <a\r\n                                    className=\"black-text\"\r\n                                    href={`#/product-details:${product.product_id}`}\r\n                                >\r\n                                    <div className=\"container\">\r\n                                        <div className=\"card-image\">\r\n                                            <img\r\n                                                src={product.images![0].img_url}\r\n                                                alt={product.name}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-content\">\r\n                                        <span className=\"card-title\">\r\n                                            <h5 className=\"center-align\">\r\n                                                {product.name}\r\n                                            </h5>\r\n                                        </span>\r\n                                        <span\r\n                                            style={{\r\n                                                display: \"flex\",\r\n                                                justifyContent: \"center\",\r\n                                            }}\r\n                                        >\r\n                                            <p\r\n                                                className=\"product-price\"\r\n                                                style={{ fontSize: \"16px\" }}\r\n                                            >\r\n                                                $\r\n                                                {Number(\r\n                                                    product.price / 100\r\n                                                ).toFixed(2)}\r\n                                            </p>\r\n                                        </span>\r\n                                    </div>\r\n                                </a>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ViewSection;\r\n","import { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Products from \"../components/products/Products\";\r\nimport UsersOrders from \"../components/UsersOrders\";\r\nimport ProductDetails from \"../components/products/ProductDetails\";\r\nimport Cart from \"../components/checkout/Cart\";\r\nimport Checkout from \"../components/checkout/Checkout\";\r\nimport { Elements, ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport FAQ from \"../components/FAQ\";\r\nimport Contact from \"../components/Contact\";\r\nimport ShippingPolicy from \"../components/ShippingPolicy\";\r\nimport OrderSuccess from \"../components/OrderSuccess\";\r\nimport ViewSection from \"../components/Sections/ViewSection\";\r\n\r\nexport const Routes = () => {\r\n    const stripePromise = loadStripe(\r\n        \"pk_test_51IM63dFngR9vHhwSep5ZkKLLach7ZP7BXFkDjSgo6FmQRdy8DOkV96RdHREb1L4vMgQ1fK6FlNfwDdlFX8zKdf1D00wHpHGbCC\"\r\n    );\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/products\" render={() => <Products />} />\r\n            <Route\r\n                exact\r\n                path=\"/product-details:id\"\r\n                render={() => <ProductDetails />}\r\n            />\r\n            <Route exact path=\"/my-orders\" render={() => <UsersOrders />} />\r\n            <Route exact path=\"/my-cart\" render={() => <Cart />} />\r\n            <Route\r\n                exact\r\n                path=\"/checkout\"\r\n                render={() => (\r\n                    <Elements stripe={stripePromise}>\r\n                        <ElementsConsumer>\r\n                            {({ stripe, elements }) => (\r\n                                <Checkout stripe={stripe} elements={elements} />\r\n                            )}\r\n                        </ElementsConsumer>\r\n                    </Elements>\r\n                )}\r\n            />\r\n            <Route exact path=\"order-success\" render={() => <OrderSuccess />} />\r\n            <Route\r\n                exact\r\n                path=\"/shipping_policy\"\r\n                render={() => <ShippingPolicy />}\r\n            />\r\n            <Route exact path=\"/FAQ\" render={() => <FAQ />} />\r\n            <Route exact path=\"/contact\" render={() => <Contact />} />\r\n            <Route\r\n                exact\r\n                path=\"/view-section:id\"\r\n                render={() => <ViewSection />}\r\n            />\r\n            <Route render={() => <Redirect to=\"/products\" />} />\r\n        </Switch>\r\n    );\r\n};\r\n","import Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport { Routes } from \"./routes/Routes\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./css/app.scss\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <div style={{ height: \"100%\", width: \"100%\" }}>\n                    <Navbar />\n                    <Routes />\n                    <Footer />\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import \"../css/Preloader.scss\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\n\r\n// const animation2 = () => {\r\n//     anime.timeline({ easing: \"easeInOutSine\", duration: 500 }).add({});\r\n// };\r\n\r\nconst reloadAnimation = () => {\r\n    anime({\r\n        targets: [\".reload-text\"],\r\n        opacity: [0, 0.75],\r\n        easing: \"easeInQuint\",\r\n        duration: 1000,\r\n        delay: (_el, i) => 15 * (i + 1),\r\n    });\r\n};\r\n\r\nconst Preloader = () => {\r\n    setTimeout(() => {\r\n        reloadAnimation();\r\n    }, 10000);\r\n    anime\r\n        .timeline({\r\n            easing: \"easeInOutSine\",\r\n            duration: 500,\r\n            elasticity: 400,\r\n            loop: true,\r\n        })\r\n        .add({ targets: [\"\"] })\r\n        .add({\r\n            targets: [\".circle-1\", \".circle-3\"],\r\n            translateY: -24,\r\n        })\r\n        .add(\r\n            {\r\n                targets: [\".circle-2\", \".circle-4\"],\r\n                translateY: 24,\r\n            },\r\n            500\r\n        )\r\n        .add({\r\n            targets: [\".circle-1\", \".circle-3\"],\r\n            translateX: 40,\r\n        })\r\n        .add(\r\n            {\r\n                targets: [\".circle-2\", \".circle-4\"],\r\n                translateX: -40,\r\n            },\r\n            \"-= 500\"\r\n        )\r\n        .add({\r\n            targets: [\".circle-1\", \".circle-3\"],\r\n            translateY: 0,\r\n        })\r\n        .add(\r\n            {\r\n                targets: [\".circle-2\", \".circle-4\"],\r\n                translateY: 0,\r\n            },\r\n            \"-= 500\"\r\n        )\r\n\r\n        .add({\r\n            targets: [\".circle-2\", \".circle-4\"],\r\n            translateY: -24,\r\n        })\r\n        .add(\r\n            {\r\n                targets: [\".circle-1\", \".circle-3\"],\r\n                translateY: 24,\r\n            },\r\n            \"-= 500\"\r\n        )\r\n        .add({\r\n            targets: [\".circle-2\", \".circle-4\"],\r\n            translateX: 0,\r\n        })\r\n        .add(\r\n            {\r\n                targets: [\".circle-1\", \".circle-3\"],\r\n                translateX: 0,\r\n            },\r\n            \"-= 500\"\r\n        )\r\n        .add({\r\n            targets: [\".circle-2\", \".circle-4\"],\r\n            translateY: 0,\r\n        })\r\n        .add(\r\n            {\r\n                targets: [\".circle-1\", \".circle-3\"],\r\n                translateY: 0,\r\n            },\r\n            \"-= 500\"\r\n        );\r\n\r\n    return (\r\n        <div className=\"loadingWrapper\">\r\n            <div className=\"absolute-center\">\r\n                <div className=\"loader\">\r\n                    <div className=\"circle circle-1\"></div>\r\n                    <div className=\"circle circle-2\"></div>\r\n                    <div className=\"circle circle-3\"></div>\r\n                    <div className=\"circle circle-4\"></div>\r\n                </div>\r\n            </div>\r\n            <div className=\"reload-warning\">\r\n                <h4\r\n                    className=\"reload-text\"\r\n                    onClick={() => window.location.reload()}\r\n                >\r\n                    Loading, please wait...\r\n                </h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","import { useGetMaintenanceQuery } from \"./generated/graphql\";\r\n\r\nexport const GetMaintenance = () => {\r\n    const { data, loading } = useGetMaintenanceQuery();\r\n\r\n    if (!loading && !!data) {\r\n        let maintenance = data;\r\n        return maintenance;\r\n    }\r\n};\r\n","let URI = \"\";\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    URI = \"https://infinite-bayou-56493.herokuapp.com\";\r\n} else {\r\n    URI = \"http://localhost:4000\";\r\n}\r\n\r\nexport default URI;\r\n","import { useEffect, useState } from \"react\";\r\nimport { setAccessToken, setMainAccessToken } from \"./accessToken\";\r\nimport App from \"./App\";\r\nimport { checkMainAuth } from \"./CheckAuth\";\r\nimport Preloader from \"./components/Preloader\";\r\nimport { useMaintenanceLoginMutation } from \"./generated/graphql\";\r\nimport { GetMaintenance } from \"./GetMaintenance\";\r\nimport URI from \"./URI\";\r\n\r\nconst AppWrapper = () => {\r\n    const [maintLogin] = useMaintenanceLoginMutation();\r\n    const maintance = GetMaintenance();\r\n    const [pageLoader, setPageLoader] = useState(true);\r\n\r\n    // eslint-disable-next-line\r\n    const [mainLoader, setMainLoader] = useState(false);\r\n    useEffect(() => {\r\n        //get new accessToken & refreshToken with fetch to URI/refresh_token\r\n        try {\r\n            let tmp = localStorage.getItem(\"iru5\") as string;\r\n            fetch(`${URI}/refresh_token`, {\r\n                method: \"POST\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    refreshToken: tmp,\r\n                },\r\n            }).then(async res => {\r\n                const { accessToken, refreshToken } = await res.json();\r\n                setAccessToken(accessToken);\r\n                localStorage.setItem(\"iru5\", refreshToken);\r\n                setPageLoader(false);\r\n            });\r\n        } catch {\r\n            setPageLoader(false);\r\n        }\r\n\r\n        try {\r\n            // let tmp = localStorage.getItem(\"main_qwf\") as string;\r\n            // fetch(`${URI}/maintenance_login`, {\r\n            //     method: \"POST\",\r\n            //     credentials: \"include\",\r\n            //     headers: {\r\n            //         refreshToken: tmp,\r\n            //     },\r\n            // }).then(async res => {\r\n            //     const { accessToken, refreshToken } = await res.json();\r\n            //     setMainAccessToken(accessToken);\r\n            //     localStorage.setItem(\"main_qwf\", refreshToken);\r\n            //     setMainLoader(false);\r\n            // });\r\n        } catch {}\r\n    }, [setPageLoader]);\r\n\r\n    if (pageLoader || !maintance) {\r\n        return <Preloader />;\r\n    } else if (maintance.getMaintenance) {\r\n        return (\r\n            <>\r\n                {checkMainAuth() ? (\r\n                    <App />\r\n                ) : (\r\n                    <div style={{ position: \"absolute\", left: \"50%\" }}>\r\n                        <div\r\n                            style={{\r\n                                position: \"relative\",\r\n                                left: \"-50%\",\r\n                            }}\r\n                        >\r\n                            <span\r\n                                onClick={async () => {\r\n                                    let acc = localStorage.getItem(\r\n                                        \"access_id\"\r\n                                    ) as string;\r\n                                    let pass = localStorage.getItem(\r\n                                        \"password\"\r\n                                    ) as string;\r\n                                    try {\r\n                                        const res = await maintLogin({\r\n                                            variables: {\r\n                                                access_id: acc,\r\n                                                password: pass,\r\n                                            },\r\n                                        });\r\n\r\n                                        if (res && res.data) {\r\n                                            let tmp = res.data.maintenanceLogin\r\n                                                .accessToken as any;\r\n                                            setMainAccessToken(tmp!);\r\n                                            localStorage.setItem(\r\n                                                \"main_qwf\",\r\n                                                res.data.maintenanceLogin\r\n                                                    .refreshToken!\r\n                                            );\r\n                                            setMainLoader(true);\r\n\r\n                                            window.location.reload();\r\n                                        }\r\n                                    } catch {}\r\n                                }}\r\n                            >\r\n                                App is in maintenance mode. Please come back\r\n                                later\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    } else {\r\n        return <App />;\r\n    }\r\n};\r\n\r\nexport default AppWrapper;\r\n","export interface Product {\r\n    product_id: number;\r\n    name: string;\r\n    price: number;\r\n    stock: number;\r\n}\r\n\r\nexport interface ProductInCart {\r\n    product_id: number;\r\n    name: string;\r\n    price: number;\r\n    stock: number;\r\n    quantity: number;\r\n}\r\n\r\nexport interface State {\r\n    productsInCart: [\r\n        {\r\n            product_id: number;\r\n            name: string;\r\n            price: number;\r\n            stock: number;\r\n            quantity: number;\r\n        }\r\n    ];\r\n}\r\n\r\nconst loadState = () => {\r\n    try {\r\n        let serializedState = localStorage.getItem(\"store-state\");\r\n        if (serializedState) {\r\n            let state = JSON.parse(serializedState);\r\n            return state;\r\n        }\r\n    } catch (err) {\r\n        console.log(\"err :>> \", err);\r\n    }\r\n};\r\n\r\nconst initState = loadState() || {\r\n    productsInCart: [],\r\n};\r\n\r\ntype Actions = {\r\n    type: string;\r\n    product?: Product;\r\n    newQuantity?: number;\r\n    productIndex?: number;\r\n};\r\n\r\nexport const RootReducer = (state = initState, action: Actions) => {\r\n    switch (action.type) {\r\n        case \"ADD_PRODUCT_TO_CART\": {\r\n            let tmp = state.productsInCart || [];\r\n\r\n            //if product is already in cart increase quantity instead of adding a new product\r\n            for (let i = 0; i < tmp.length; i++) {\r\n                if (tmp[i].product_id === action.product!.product_id) {\r\n                    tmp[i].quantity++;\r\n                    return { ...state, productsInCart: tmp };\r\n                }\r\n            }\r\n            let tmp2: any = action.product;\r\n            tmp2.quantity = 1;\r\n\r\n            tmp.push(tmp2);\r\n\r\n            return { ...state, productsInCart: tmp };\r\n        }\r\n\r\n        case \"CHANGE_QUANTITY_ON_PRODUCT\": {\r\n            let productsInCart = state.productsInCart;\r\n            if (action.newQuantity === 0) {\r\n                //remove product if quantity is 0\r\n                productsInCart.splice(action.productIndex!, 1);\r\n            } else {\r\n                productsInCart[\r\n                    action.productIndex!\r\n                ].quantity = action.newQuantity!;\r\n            }\r\n            return { ...state, productsInCart };\r\n        }\r\n\r\n        case \"RESET_CART\": {\r\n            // delete localStorage items\r\n            localStorage.setItem(\"store-state\", \" \");\r\n            // dump state\r\n            return {};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { RootReducer } from \"./RootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst saveState = state => {\r\n    try {\r\n        let serializedState = JSON.stringify(state);\r\n        localStorage.setItem(\"store-state\", serializedState);\r\n    } catch (err) {\r\n        console.log(\"err :>> \", err);\r\n    }\r\n};\r\n\r\nexport const store = createStore(RootReducer as any, composeWithDevTools());\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n","import ReactDOM from \"react-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport jwtDecode from \"jwt-decode\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ApolloLink, Observable } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { onError } from \"apollo-link-error\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\nimport URI from \"./URI\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/ReduxStore\";\n\nconst cache = new InMemoryCache({});\nconst requestLink = new ApolloLink(\n    (operation, forward) =>\n        new Observable(observer => {\n            let handle: any;\n            Promise.resolve(operation)\n                .then(operation => {\n                    const accessToken = getAccessToken();\n                    operation.setContext({\n                        headers: {\n                            authorization: accessToken\n                                ? `bearer ${accessToken}`\n                                : \"\",\n                        },\n                    });\n                })\n                .then(() => {\n                    handle = forward(operation).subscribe({\n                        next: observer.next.bind(observer),\n                        error: observer.error.bind(observer),\n                        complete: observer.complete.bind(observer),\n                    });\n                })\n                .catch(observer.error.bind(observer));\n\n            return () => {\n                if (handle) handle.unsubscribe();\n            };\n        })\n);\n\nconst client = new ApolloClient({\n    link: ApolloLink.from([\n        new TokenRefreshLink({\n            accessTokenField: \"accessToken\",\n            isTokenValidOrUndefined: () => {\n                const token = getAccessToken();\n\n                if (!token) {\n                    return true;\n                }\n\n                try {\n                    const { exp } = jwtDecode(token) as any;\n                    if (Date.now() >= exp * 1000) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                } catch {\n                    return false;\n                }\n            },\n            fetchAccessToken: () => {\n                return fetch(`${URI}/refresh_token`, {\n                    method: \"POST\",\n                    credentials: \"include\",\n                });\n            },\n            handleFetch: (accessToken: string) => {\n                setAccessToken(accessToken);\n            },\n            handleError: (err: any) => {\n                console.warn(\"Your refresh token is invalid. Try to relogin\");\n                console.error(err);\n            },\n        }) as any,\n        onError(({ graphQLErrors, networkError }) => {\n            console.log(graphQLErrors);\n            console.log(networkError);\n        }),\n        requestLink,\n        new HttpLink({\n            uri: `${URI}/graphql`,\n            credentials: \"include\",\n        }),\n    ]),\n    cache,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client as any}>\n        <Provider store={store}>\n            <AppWrapper />\n        </Provider>\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
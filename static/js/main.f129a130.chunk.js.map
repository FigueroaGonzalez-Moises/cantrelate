{"version":3,"sources":["accessToken.ts","CheckAuth.ts","generated/graphql.tsx","components/navbar/AnnouncementBar.tsx","images/White_Blank_Logo.png","components/navbar/Logo.tsx","components/navbar/Navbar.tsx","components/footer/CopyrightBar.tsx","images/Blank_Footer_logo.png","components/footer/Footer.tsx","components/products/Products.tsx","redux/actions/userAction.ts","components/products/ProductDetails.tsx","components/checkout/Cart.tsx","components/checkout/Checkout.tsx","components/FAQ.tsx","URI.ts","components/Contact.tsx","components/ShippingPolicy.tsx","routes/Routes.tsx","App.tsx","components/Preloader.tsx","AppWrapper.tsx","redux/RootReducer.tsx","redux/ReduxStore.tsx","index.tsx"],"names":["accessToken","setAccessToken","s","getAccessToken","checkAuth","token","exp","jwtDecode","Date","now","CheckoutDocument","gql","useCheckoutMutation","baseOptions","Apollo","GetAnnouncementsDocument","GetCurrUserDocument","useGetCurrUserQuery","GetMaintenanceDocument","GetProductDocument","GetProductsDocument","useGetProductsQuery","LoginDocument","MaintenanceLoginDocument","PaypalCheckoutDocument","ValidateCouponDocument","AnnouncementBar","data","loading","useEffect","document","getElementById","i","getAnnouncements","length","textWrapper","innerHTML","textContent","replace","tl","anime","timeline","loop","loopBegin","style","display","loopComplete","add","targets","translateY","translateZ","opacity","easing","duration","delay","el","translateX","console","log","width","backgroundColor","color","zIndex","position","className","justifyContent","id","map","_val","text","href","marginRight","marginLeft","Logo","src","LogoSrc","alt","Navbar","elems","querySelectorAll","M","Sidenav","init","login","handler","res","a","variables","user_id","googleId","email","profileObj","response","localStorage","setItem","refreshToken","window","location","reload","signIn","useGoogleLogin","clientId","onSuccess","logout","top","data-target","left","transform","onClick","paddingTop","textAlign","CopyrightBar","border","marginTop","marginBottom","fontSize","fontWeight","Footer","height","FooterLogo","Products","_t","value","scale","stagger","start","getProducts","product","margin","product_id","images","img_url","name","Number","price","toFixed","changeQuantityOnProduct","newQuantity","productIndex","type","ProductDetails","split","dispatch","useDispatch","error","Tooltip","percent","getProduct","org_stock","stock","to","maxWidth","desc","data-position","data-tooltip","toast","html","addProductToCart","Cart","useState","refresh","quantities","state","setState","products","useSelector","productsInCart","total","j","quantity","minHeight","padding","minLength","maxLength","pattern","onBlur","e","target","tmp","splice","onChange","match","CardSection","options","iconStyle","hidePostalCode","base","iconColor","fontFamily","fontSmoothing","invalid","Checkout","props","checkout","validateCoupon","usePaypalCheckoutMutation","paypalCheckout","discountPH","setDiscountPH","setName","coupon","setCoupon","subtotal","setSubtotal","Total","setTotal","shipping","setShipping","redirect","setRedirect","address","city","line1","zip","billing","setBilling","paidFor","setPaidFor","setError","setAddress","paypalRef","useRef","couponRef","current","Autocomplete","Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusettes","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","Ohio","Oklahoma","Oregon","Pennsylvania","Tennessee","Texas","Utah","Vermont","Virginia","Washington","Wisconsin","Wyoming","win","paypal","Buttons","createOrder","actions","products_str","JSON","stringify","order","create","purchase_units","description","amount","currency_code","onApprove","capture","onError","err","render","borderBottom","borderLeft","pathname","handleSubmit","stripe","elements","card","getElement","CardElement","createToken","result","token_str","shipping_str","getCurrUser","billing_str","shipping_info","billing_info","tmp_subtotal","shipping_total","tax","Math","round","focusable","viewBox","d","fill-rule","flexDirection","letterSpacing","paddingBottom","toLowerCase","htmlFor","data-error","coupon_name","classList","attributes","nodeValue","percentage","discount","ref","tmp_email","classes","validateForm","FAQ","eyeColors","eyeColor","floor","random","URI","Contact","ShippingPolicy","Routes","stripePromise","loadStripe","exact","path","App","Preloader","direction","elasticity","AppWrapper","useMaintenanceLoginMutation","maintLogin","pageLoader","setPageLoader","mainLoader","setMainLoader","getItem","fetch","method","credentials","headers","then","json","acc","pass","access_id","password","maintenanceLogin","initState","serializedState","parse","loadState","store","createStore","action","tmp2","push","composeWithDevTools","subscribe","saveState","getState","cache","InMemoryCache","requestLink","ApolloLink","operation","forward","Observable","observer","handle","Promise","resolve","setContext","authorization","next","bind","complete","catch","unsubscribe","client","ApolloClient","link","from","TokenRefreshLink","accessTokenField","isTokenValidOrUndefined","fetchAccessToken","handleFetch","handleError","warn","graphQLErrors","networkError","HttpLink","uri","ReactDOM"],"mappings":"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","file":"static/js/main.f129a130.chunk.js","sourcesContent":["export let accessToken = \"\";\r\n\r\nexport const setAccessToken = (s: string) => {\r\n    accessToken = s;\r\n};\r\n\r\nexport const getAccessToken = () => {\r\n    return accessToken;\r\n};\r\n\r\nexport const setMainAccessToken = (s: string) => {\r\n    accessToken = s;\r\n};\r\n\r\nexport const getMainAccessToken = () => {\r\n    return accessToken;\r\n};\r\n","import { getAccessToken } from \"./accessToken\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const checkAuth = () => {\r\n    const token = getAccessToken();\r\n    if (!token) {\r\n        return false;\r\n    }\r\n    try {\r\n        const { exp } = jwtDecode(token) as any;\r\n        if (Date.now() >= exp * 1000) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    } catch {\r\n        return false;\r\n    }\r\n};\r\n\r\nexport default checkAuth();\r\n","import { gql } from '@apollo/client';\nimport * as Apollo from '@apollo/client';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  getUsersOrders: Array<GetOrdersResponse>;\n  getOrders: Array<GetOrdersResponse>;\n  getProducts: Array<ProductsWithImages>;\n  getProduct: ProductsWithImages;\n  hello: Scalars['String'];\n  getCurrUser: Users;\n  getCoupons: Array<Coupons>;\n  getAnnouncements: Array<Announcements>;\n  getMaintenance: Scalars['Boolean'];\n};\n\n\nexport type QueryGetProductArgs = {\n  product_id: Scalars['Float'];\n};\n\nexport type GetOrdersResponse = {\n  __typename?: 'GetOrdersResponse';\n  products: Array<OrdersProductsWithImages>;\n  order_id: Scalars['Float'];\n  tracking_num?: Maybe<Scalars['String']>;\n  order_total?: Maybe<Scalars['Float']>;\n  coupon?: Maybe<Scalars['String']>;\n  discount?: Maybe<Scalars['String']>;\n};\n\nexport type OrdersProductsWithImages = {\n  __typename?: 'OrdersProductsWithImages';\n  product_id: Scalars['Int'];\n  name: Scalars['String'];\n  desc: Scalars['String'];\n  price: Scalars['Int'];\n  stock: Scalars['Int'];\n  org_stock?: Maybe<Scalars['Int']>;\n  exp_date?: Maybe<Scalars['String']>;\n  quantityOrdered: Scalars['Float'];\n  productSubtotal?: Maybe<Scalars['Float']>;\n  images?: Maybe<Array<Images>>;\n};\n\nexport type Images = {\n  __typename?: 'Images';\n  img_id: Scalars['Float'];\n  img_url: Scalars['String'];\n  index: Scalars['Float'];\n};\n\nexport type ProductsWithImages = {\n  __typename?: 'ProductsWithImages';\n  product_id: Scalars['Int'];\n  name: Scalars['String'];\n  desc: Scalars['String'];\n  price: Scalars['Int'];\n  stock: Scalars['Int'];\n  org_stock?: Maybe<Scalars['Int']>;\n  exp_date?: Maybe<Scalars['String']>;\n  images?: Maybe<Array<Images>>;\n};\n\nexport type Users = {\n  __typename?: 'Users';\n  uuid: Scalars['Float'];\n  user_id?: Maybe<Scalars['String']>;\n  email?: Maybe<Scalars['String']>;\n};\n\nexport type Coupons = {\n  __typename?: 'Coupons';\n  coupon_id: Scalars['String'];\n  coupon_name: Scalars['String'];\n  discount?: Maybe<Scalars['String']>;\n};\n\nexport type Announcements = {\n  __typename?: 'Announcements';\n  id: Scalars['String'];\n  text: Scalars['String'];\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  editTracking: Scalars['Boolean'];\n  paypalCheckout: Scalars['String'];\n  checkout: Scalars['String'];\n  addProduct: Scalars['String'];\n  deleteProduct: Scalars['Boolean'];\n  updateProduct: Scalars['Boolean'];\n  addImgToProduct: Scalars['Boolean'];\n  removeImgFromProduct: Scalars['Boolean'];\n  apiLogin: AuthResponse;\n  login: AuthResponse;\n  addCoupon: Scalars['Boolean'];\n  deleteCoupon: Scalars['Boolean'];\n  validateCoupon: Scalars['String'];\n  addAnnouncement: Scalars['Boolean'];\n  deleteAnnouncement: Scalars['Boolean'];\n  toggleMaintenance: Scalars['Boolean'];\n  maintenanceLogin: AuthResponse;\n};\n\n\nexport type MutationEditTrackingArgs = {\n  order_id: Scalars['Float'];\n  new_tracking_num: Scalars['String'];\n};\n\n\nexport type MutationPaypalCheckoutArgs = {\n  coupon: Scalars['String'];\n  products: Scalars['String'];\n};\n\n\nexport type MutationCheckoutArgs = {\n  coupon: Scalars['String'];\n  billing_info: Scalars['String'];\n  shipping_info: Scalars['String'];\n  products: Scalars['String'];\n  user_id: Scalars['String'];\n  token: Scalars['String'];\n};\n\n\nexport type MutationAddProductArgs = {\n  stock: Scalars['Float'];\n  price: Scalars['Float'];\n  desc: Scalars['String'];\n  name: Scalars['String'];\n};\n\n\nexport type MutationDeleteProductArgs = {\n  product_id: Scalars['Float'];\n};\n\n\nexport type MutationUpdateProductArgs = {\n  stock: Scalars['Float'];\n  price: Scalars['Float'];\n  desc: Scalars['String'];\n  product_id: Scalars['Float'];\n  name: Scalars['String'];\n};\n\n\nexport type MutationAddImgToProductArgs = {\n  product_id: Scalars['Float'];\n  img_url: Scalars['String'];\n};\n\n\nexport type MutationApiLoginArgs = {\n  password: Scalars['String'];\n  username: Scalars['String'];\n};\n\n\nexport type MutationLoginArgs = {\n  email: Scalars['String'];\n  user_id: Scalars['String'];\n};\n\n\nexport type MutationAddCouponArgs = {\n  discount: Scalars['String'];\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationDeleteCouponArgs = {\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationValidateCouponArgs = {\n  coupon_name: Scalars['String'];\n};\n\n\nexport type MutationAddAnnouncementArgs = {\n  text: Scalars['String'];\n};\n\n\nexport type MutationDeleteAnnouncementArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type MutationMaintenanceLoginArgs = {\n  password: Scalars['String'];\n  access_id: Scalars['String'];\n};\n\nexport type AuthResponse = {\n  __typename?: 'AuthResponse';\n  accessToken?: Maybe<Scalars['String']>;\n  refreshToken?: Maybe<Scalars['String']>;\n};\n\nexport type CheckoutMutationVariables = Exact<{\n  token: Scalars['String'];\n  user_id: Scalars['String'];\n  products: Scalars['String'];\n  shipping_info: Scalars['String'];\n  billing_info: Scalars['String'];\n  coupon: Scalars['String'];\n}>;\n\n\nexport type CheckoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'checkout'>\n);\n\nexport type GetAnnouncementsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAnnouncementsQuery = (\n  { __typename?: 'Query' }\n  & { getAnnouncements: Array<(\n    { __typename?: 'Announcements' }\n    & Pick<Announcements, 'id' | 'text'>\n  )> }\n);\n\nexport type GetCurrUserQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetCurrUserQuery = (\n  { __typename?: 'Query' }\n  & { getCurrUser: (\n    { __typename?: 'Users' }\n    & Pick<Users, 'email' | 'uuid' | 'user_id'>\n  ) }\n);\n\nexport type GetMaintenanceQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetMaintenanceQuery = (\n  { __typename?: 'Query' }\n  & Pick<Query, 'getMaintenance'>\n);\n\nexport type GetProductQueryVariables = Exact<{\n  product_id: Scalars['Float'];\n}>;\n\n\nexport type GetProductQuery = (\n  { __typename?: 'Query' }\n  & { getProduct: (\n    { __typename?: 'ProductsWithImages' }\n    & Pick<ProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'org_stock' | 'exp_date'>\n    & { images?: Maybe<Array<(\n      { __typename?: 'Images' }\n      & Pick<Images, 'img_id' | 'img_url'>\n    )>> }\n  ) }\n);\n\nexport type GetProductsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetProductsQuery = (\n  { __typename?: 'Query' }\n  & { getProducts: Array<(\n    { __typename?: 'ProductsWithImages' }\n    & Pick<ProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'org_stock' | 'exp_date'>\n    & { images?: Maybe<Array<(\n      { __typename?: 'Images' }\n      & Pick<Images, 'img_id' | 'img_url'>\n    )>> }\n  )> }\n);\n\nexport type GetUsersOrdersQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetUsersOrdersQuery = (\n  { __typename?: 'Query' }\n  & { getUsersOrders: Array<(\n    { __typename?: 'GetOrdersResponse' }\n    & Pick<GetOrdersResponse, 'order_id' | 'tracking_num' | 'order_total' | 'coupon' | 'discount'>\n    & { products: Array<(\n      { __typename?: 'OrdersProductsWithImages' }\n      & Pick<OrdersProductsWithImages, 'product_id' | 'name' | 'desc' | 'price' | 'stock' | 'exp_date' | 'quantityOrdered' | 'productSubtotal'>\n      & { images?: Maybe<Array<(\n        { __typename?: 'Images' }\n        & Pick<Images, 'img_id' | 'img_url' | 'index'>\n      )>> }\n    )> }\n  )> }\n);\n\nexport type LoginMutationVariables = Exact<{\n  user_id: Scalars['String'];\n  email: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'AuthResponse' }\n    & Pick<AuthResponse, 'accessToken' | 'refreshToken'>\n  ) }\n);\n\nexport type MaintenanceLoginMutationVariables = Exact<{\n  access_id: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type MaintenanceLoginMutation = (\n  { __typename?: 'Mutation' }\n  & { maintenanceLogin: (\n    { __typename?: 'AuthResponse' }\n    & Pick<AuthResponse, 'refreshToken' | 'accessToken'>\n  ) }\n);\n\nexport type PaypalCheckoutMutationVariables = Exact<{\n  products: Scalars['String'];\n  coupon: Scalars['String'];\n}>;\n\n\nexport type PaypalCheckoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'paypalCheckout'>\n);\n\nexport type ValidateCouponMutationVariables = Exact<{\n  coupon_name: Scalars['String'];\n}>;\n\n\nexport type ValidateCouponMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'validateCoupon'>\n);\n\n\nexport const CheckoutDocument = gql`\n    mutation checkout($token: String!, $user_id: String!, $products: String!, $shipping_info: String!, $billing_info: String!, $coupon: String!) {\n  checkout(\n    token: $token\n    user_id: $user_id\n    products: $products\n    shipping_info: $shipping_info\n    billing_info: $billing_info\n    coupon: $coupon\n  )\n}\n    `;\nexport type CheckoutMutationFn = Apollo.MutationFunction<CheckoutMutation, CheckoutMutationVariables>;\n\n/**\n * __useCheckoutMutation__\n *\n * To run a mutation, you first call `useCheckoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useCheckoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [checkoutMutation, { data, loading, error }] = useCheckoutMutation({\n *   variables: {\n *      token: // value for 'token'\n *      user_id: // value for 'user_id'\n *      products: // value for 'products'\n *      shipping_info: // value for 'shipping_info'\n *      billing_info: // value for 'billing_info'\n *      coupon: // value for 'coupon'\n *   },\n * });\n */\nexport function useCheckoutMutation(baseOptions?: Apollo.MutationHookOptions<CheckoutMutation, CheckoutMutationVariables>) {\n        return Apollo.useMutation<CheckoutMutation, CheckoutMutationVariables>(CheckoutDocument, baseOptions);\n      }\nexport type CheckoutMutationHookResult = ReturnType<typeof useCheckoutMutation>;\nexport type CheckoutMutationResult = Apollo.MutationResult<CheckoutMutation>;\nexport type CheckoutMutationOptions = Apollo.BaseMutationOptions<CheckoutMutation, CheckoutMutationVariables>;\nexport const GetAnnouncementsDocument = gql`\n    query getAnnouncements {\n  getAnnouncements {\n    id\n    text\n  }\n}\n    `;\n\n/**\n * __useGetAnnouncementsQuery__\n *\n * To run a query within a React component, call `useGetAnnouncementsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetAnnouncementsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetAnnouncementsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetAnnouncementsQuery(baseOptions?: Apollo.QueryHookOptions<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>) {\n        return Apollo.useQuery<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>(GetAnnouncementsDocument, baseOptions);\n      }\nexport function useGetAnnouncementsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>) {\n          return Apollo.useLazyQuery<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>(GetAnnouncementsDocument, baseOptions);\n        }\nexport type GetAnnouncementsQueryHookResult = ReturnType<typeof useGetAnnouncementsQuery>;\nexport type GetAnnouncementsLazyQueryHookResult = ReturnType<typeof useGetAnnouncementsLazyQuery>;\nexport type GetAnnouncementsQueryResult = Apollo.QueryResult<GetAnnouncementsQuery, GetAnnouncementsQueryVariables>;\nexport const GetCurrUserDocument = gql`\n    query getCurrUser {\n  getCurrUser {\n    email\n    uuid\n    user_id\n  }\n}\n    `;\n\n/**\n * __useGetCurrUserQuery__\n *\n * To run a query within a React component, call `useGetCurrUserQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetCurrUserQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetCurrUserQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetCurrUserQuery(baseOptions?: Apollo.QueryHookOptions<GetCurrUserQuery, GetCurrUserQueryVariables>) {\n        return Apollo.useQuery<GetCurrUserQuery, GetCurrUserQueryVariables>(GetCurrUserDocument, baseOptions);\n      }\nexport function useGetCurrUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetCurrUserQuery, GetCurrUserQueryVariables>) {\n          return Apollo.useLazyQuery<GetCurrUserQuery, GetCurrUserQueryVariables>(GetCurrUserDocument, baseOptions);\n        }\nexport type GetCurrUserQueryHookResult = ReturnType<typeof useGetCurrUserQuery>;\nexport type GetCurrUserLazyQueryHookResult = ReturnType<typeof useGetCurrUserLazyQuery>;\nexport type GetCurrUserQueryResult = Apollo.QueryResult<GetCurrUserQuery, GetCurrUserQueryVariables>;\nexport const GetMaintenanceDocument = gql`\n    query getMaintenance {\n  getMaintenance\n}\n    `;\n\n/**\n * __useGetMaintenanceQuery__\n *\n * To run a query within a React component, call `useGetMaintenanceQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetMaintenanceQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetMaintenanceQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetMaintenanceQuery(baseOptions?: Apollo.QueryHookOptions<GetMaintenanceQuery, GetMaintenanceQueryVariables>) {\n        return Apollo.useQuery<GetMaintenanceQuery, GetMaintenanceQueryVariables>(GetMaintenanceDocument, baseOptions);\n      }\nexport function useGetMaintenanceLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetMaintenanceQuery, GetMaintenanceQueryVariables>) {\n          return Apollo.useLazyQuery<GetMaintenanceQuery, GetMaintenanceQueryVariables>(GetMaintenanceDocument, baseOptions);\n        }\nexport type GetMaintenanceQueryHookResult = ReturnType<typeof useGetMaintenanceQuery>;\nexport type GetMaintenanceLazyQueryHookResult = ReturnType<typeof useGetMaintenanceLazyQuery>;\nexport type GetMaintenanceQueryResult = Apollo.QueryResult<GetMaintenanceQuery, GetMaintenanceQueryVariables>;\nexport const GetProductDocument = gql`\n    query getProduct($product_id: Float!) {\n  getProduct(product_id: $product_id) {\n    product_id\n    name\n    desc\n    price\n    stock\n    org_stock\n    exp_date\n    images {\n      img_id\n      img_url\n    }\n  }\n}\n    `;\n\n/**\n * __useGetProductQuery__\n *\n * To run a query within a React component, call `useGetProductQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetProductQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetProductQuery({\n *   variables: {\n *      product_id: // value for 'product_id'\n *   },\n * });\n */\nexport function useGetProductQuery(baseOptions: Apollo.QueryHookOptions<GetProductQuery, GetProductQueryVariables>) {\n        return Apollo.useQuery<GetProductQuery, GetProductQueryVariables>(GetProductDocument, baseOptions);\n      }\nexport function useGetProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetProductQuery, GetProductQueryVariables>) {\n          return Apollo.useLazyQuery<GetProductQuery, GetProductQueryVariables>(GetProductDocument, baseOptions);\n        }\nexport type GetProductQueryHookResult = ReturnType<typeof useGetProductQuery>;\nexport type GetProductLazyQueryHookResult = ReturnType<typeof useGetProductLazyQuery>;\nexport type GetProductQueryResult = Apollo.QueryResult<GetProductQuery, GetProductQueryVariables>;\nexport const GetProductsDocument = gql`\n    query getProducts {\n  getProducts {\n    product_id\n    name\n    desc\n    price\n    stock\n    org_stock\n    exp_date\n    images {\n      img_id\n      img_url\n    }\n  }\n}\n    `;\n\n/**\n * __useGetProductsQuery__\n *\n * To run a query within a React component, call `useGetProductsQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetProductsQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetProductsQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetProductsQuery(baseOptions?: Apollo.QueryHookOptions<GetProductsQuery, GetProductsQueryVariables>) {\n        return Apollo.useQuery<GetProductsQuery, GetProductsQueryVariables>(GetProductsDocument, baseOptions);\n      }\nexport function useGetProductsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetProductsQuery, GetProductsQueryVariables>) {\n          return Apollo.useLazyQuery<GetProductsQuery, GetProductsQueryVariables>(GetProductsDocument, baseOptions);\n        }\nexport type GetProductsQueryHookResult = ReturnType<typeof useGetProductsQuery>;\nexport type GetProductsLazyQueryHookResult = ReturnType<typeof useGetProductsLazyQuery>;\nexport type GetProductsQueryResult = Apollo.QueryResult<GetProductsQuery, GetProductsQueryVariables>;\nexport const GetUsersOrdersDocument = gql`\n    query getUsersOrders {\n  getUsersOrders {\n    products {\n      product_id\n      name\n      desc\n      price\n      stock\n      exp_date\n      quantityOrdered\n      productSubtotal\n      images {\n        img_id\n        img_url\n        index\n      }\n    }\n    order_id\n    tracking_num\n    order_total\n    coupon\n    discount\n  }\n}\n    `;\n\n/**\n * __useGetUsersOrdersQuery__\n *\n * To run a query within a React component, call `useGetUsersOrdersQuery` and pass it any options that fit your needs.\n * When your component renders, `useGetUsersOrdersQuery` returns an object from Apollo Client that contains loading, error, and data properties\n * you can use to render your UI.\n *\n * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;\n *\n * @example\n * const { data, loading, error } = useGetUsersOrdersQuery({\n *   variables: {\n *   },\n * });\n */\nexport function useGetUsersOrdersQuery(baseOptions?: Apollo.QueryHookOptions<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>) {\n        return Apollo.useQuery<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>(GetUsersOrdersDocument, baseOptions);\n      }\nexport function useGetUsersOrdersLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>) {\n          return Apollo.useLazyQuery<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>(GetUsersOrdersDocument, baseOptions);\n        }\nexport type GetUsersOrdersQueryHookResult = ReturnType<typeof useGetUsersOrdersQuery>;\nexport type GetUsersOrdersLazyQueryHookResult = ReturnType<typeof useGetUsersOrdersLazyQuery>;\nexport type GetUsersOrdersQueryResult = Apollo.QueryResult<GetUsersOrdersQuery, GetUsersOrdersQueryVariables>;\nexport const LoginDocument = gql`\n    mutation login($user_id: String!, $email: String!) {\n  login(user_id: $user_id, email: $email) {\n    accessToken\n    refreshToken\n  }\n}\n    `;\nexport type LoginMutationFn = Apollo.MutationFunction<LoginMutation, LoginMutationVariables>;\n\n/**\n * __useLoginMutation__\n *\n * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [loginMutation, { data, loading, error }] = useLoginMutation({\n *   variables: {\n *      user_id: // value for 'user_id'\n *      email: // value for 'email'\n *   },\n * });\n */\nexport function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<LoginMutation, LoginMutationVariables>) {\n        return Apollo.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, baseOptions);\n      }\nexport type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;\nexport type LoginMutationResult = Apollo.MutationResult<LoginMutation>;\nexport type LoginMutationOptions = Apollo.BaseMutationOptions<LoginMutation, LoginMutationVariables>;\nexport const MaintenanceLoginDocument = gql`\n    mutation maintenanceLogin($access_id: String!, $password: String!) {\n  maintenanceLogin(access_id: $access_id, password: $password) {\n    refreshToken\n    accessToken\n  }\n}\n    `;\nexport type MaintenanceLoginMutationFn = Apollo.MutationFunction<MaintenanceLoginMutation, MaintenanceLoginMutationVariables>;\n\n/**\n * __useMaintenanceLoginMutation__\n *\n * To run a mutation, you first call `useMaintenanceLoginMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useMaintenanceLoginMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [maintenanceLoginMutation, { data, loading, error }] = useMaintenanceLoginMutation({\n *   variables: {\n *      access_id: // value for 'access_id'\n *      password: // value for 'password'\n *   },\n * });\n */\nexport function useMaintenanceLoginMutation(baseOptions?: Apollo.MutationHookOptions<MaintenanceLoginMutation, MaintenanceLoginMutationVariables>) {\n        return Apollo.useMutation<MaintenanceLoginMutation, MaintenanceLoginMutationVariables>(MaintenanceLoginDocument, baseOptions);\n      }\nexport type MaintenanceLoginMutationHookResult = ReturnType<typeof useMaintenanceLoginMutation>;\nexport type MaintenanceLoginMutationResult = Apollo.MutationResult<MaintenanceLoginMutation>;\nexport type MaintenanceLoginMutationOptions = Apollo.BaseMutationOptions<MaintenanceLoginMutation, MaintenanceLoginMutationVariables>;\nexport const PaypalCheckoutDocument = gql`\n    mutation paypalCheckout($products: String!, $coupon: String!) {\n  paypalCheckout(products: $products, coupon: $coupon)\n}\n    `;\nexport type PaypalCheckoutMutationFn = Apollo.MutationFunction<PaypalCheckoutMutation, PaypalCheckoutMutationVariables>;\n\n/**\n * __usePaypalCheckoutMutation__\n *\n * To run a mutation, you first call `usePaypalCheckoutMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `usePaypalCheckoutMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [paypalCheckoutMutation, { data, loading, error }] = usePaypalCheckoutMutation({\n *   variables: {\n *      products: // value for 'products'\n *      coupon: // value for 'coupon'\n *   },\n * });\n */\nexport function usePaypalCheckoutMutation(baseOptions?: Apollo.MutationHookOptions<PaypalCheckoutMutation, PaypalCheckoutMutationVariables>) {\n        return Apollo.useMutation<PaypalCheckoutMutation, PaypalCheckoutMutationVariables>(PaypalCheckoutDocument, baseOptions);\n      }\nexport type PaypalCheckoutMutationHookResult = ReturnType<typeof usePaypalCheckoutMutation>;\nexport type PaypalCheckoutMutationResult = Apollo.MutationResult<PaypalCheckoutMutation>;\nexport type PaypalCheckoutMutationOptions = Apollo.BaseMutationOptions<PaypalCheckoutMutation, PaypalCheckoutMutationVariables>;\nexport const ValidateCouponDocument = gql`\n    mutation validateCoupon($coupon_name: String!) {\n  validateCoupon(coupon_name: $coupon_name)\n}\n    `;\nexport type ValidateCouponMutationFn = Apollo.MutationFunction<ValidateCouponMutation, ValidateCouponMutationVariables>;\n\n/**\n * __useValidateCouponMutation__\n *\n * To run a mutation, you first call `useValidateCouponMutation` within a React component and pass it any options that fit your needs.\n * When your component renders, `useValidateCouponMutation` returns a tuple that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - An object with fields that represent the current status of the mutation's execution\n *\n * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;\n *\n * @example\n * const [validateCouponMutation, { data, loading, error }] = useValidateCouponMutation({\n *   variables: {\n *      coupon_name: // value for 'coupon_name'\n *   },\n * });\n */\nexport function useValidateCouponMutation(baseOptions?: Apollo.MutationHookOptions<ValidateCouponMutation, ValidateCouponMutationVariables>) {\n        return Apollo.useMutation<ValidateCouponMutation, ValidateCouponMutationVariables>(ValidateCouponDocument, baseOptions);\n      }\nexport type ValidateCouponMutationHookResult = ReturnType<typeof useValidateCouponMutation>;\nexport type ValidateCouponMutationResult = Apollo.MutationResult<ValidateCouponMutation>;\nexport type ValidateCouponMutationOptions = Apollo.BaseMutationOptions<ValidateCouponMutation, ValidateCouponMutationVariables>;","import { FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\nimport { useGetAnnouncementsQuery } from \"../../generated/graphql\";\r\nimport anime from \"animejs\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst pickIntro = () => {\r\n    const animations = [\r\n        {\r\n            targets: \".announcement-1 .letter\",\r\n            translateX: [40, 0],\r\n            translateZ: 0,\r\n            opacity: [0, 1],\r\n            easing: \"easeOutExpo\",\r\n            duration: 1200,\r\n            delay: (el, i) => 500 + 30 * i,\r\n        },\r\n    ]; //define animations here\r\n    let index = Math.floor(Math.random() * animations.length - 1 + 1);\r\n    return animations[index];\r\n};\r\n\r\nconst pickOutro = () => {\r\n    const animations = [\r\n        {\r\n            targets: \".announcement-1 .letter\",\r\n            translateY: [0, -100],\r\n            opacity: [1, 0],\r\n            easing: \"easeInExpo\",\r\n            duration: 1200,\r\n            delay: (el, i) => 100 + 30 * i,\r\n        },\r\n    ]; //define animations here\r\n    let index = Math.floor(Math.random() * animations.length - 1 + 1);\r\n    return animations[index];\r\n};\r\n\r\nconst AnnouncementBar = () => {\r\n    const { data, loading } = useGetAnnouncementsQuery();\r\n\r\n    useEffect(() => {\r\n        let timelines = [] as any[];\r\n\r\n        if (!!data && !!document.getElementById(`announcement-0`)) {\r\n            for (let i = 0; i < data.getAnnouncements.length; i++) {\r\n                var textWrapper = document.getElementById(`announcement-${i}`);\r\n                textWrapper!.innerHTML = textWrapper!.textContent!.replace(\r\n                    /\\S/g,\r\n                    \"<span class='letter'>$&</span>\"\r\n                );\r\n            }\r\n\r\n            let tl = 0;\r\n            anime\r\n                .timeline({\r\n                    loop: true,\r\n                    loopBegin: () => {\r\n                        if (!document.getElementById(`announcement-${tl}`)) {\r\n                            tl = 0;\r\n                        }\r\n                        document.getElementById(\r\n                            `announcement-${tl}`\r\n                        )!.style.display = \"block\";\r\n                    },\r\n                    loopComplete: () => {\r\n                        document.getElementById(\r\n                            `announcement-${tl}`\r\n                        )!.style.display = \"none\";\r\n                        tl++;\r\n                    },\r\n                })\r\n                .add({\r\n                    targets: `.announcement .letter`,\r\n                    translateY: [100, 0],\r\n                    translateZ: 0,\r\n                    opacity: [0, 1],\r\n                    easing: \"easeOutExpo\",\r\n                    duration: 1400,\r\n                    delay: (el, i) => 300 + 30 * i,\r\n                })\r\n                .add(\r\n                    {\r\n                        targets: `.announcement .letter`,\r\n                        translateX: [0, -30],\r\n                        opacity: [1, 0],\r\n                        easing: \"easeOutQuart\",\r\n                        duration: 1000,\r\n                        delay: (el, i) => 100 + 30 * i,\r\n                    },\r\n                    \"+=15000\"\r\n                );\r\n        }\r\n    });\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n    console.log(\"data =>\", data);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                backgroundColor: \"rgb(13, 3, 3)\",\r\n                color: \"#fff\",\r\n                zIndex: 3,\r\n                position: \"relative\",\r\n            }}\r\n        >\r\n            <div\r\n                className=\"container\"\r\n                style={{ display: \"flex\", justifyContent: \"space-between\" }}\r\n            >\r\n                <span\r\n                    className=\"right  noselect\"\r\n                    style={{ color: \"rgb(13, 3, 3)\" }}\r\n                >\r\n                    <FaEnvelope />\r\n                    <FaInstagram />\r\n                </span>\r\n\r\n                <>\r\n                    {data?.getAnnouncements.length === 0 ? (\r\n                        <>Follow us on our socials</>\r\n                    ) : (\r\n                        <span id=\"announcement\">\r\n                            {data?.getAnnouncements.map((_val, i) => {\r\n                                return (\r\n                                    <span\r\n                                        id={`announcement-${i}`}\r\n                                        className=\"announcement \"\r\n                                    >\r\n                                        {data.getAnnouncements[i].text}\r\n                                    </span>\r\n                                );\r\n                            })}\r\n                        </span>\r\n                    )}\r\n                </>\r\n\r\n                <span className=\"right\">\r\n                    <a\r\n                        href=\"mailto:cantrelatejp@gmail.com\"\r\n                        style={{ color: \"#fff\" }}\r\n                    >\r\n                        <FaEnvelope\r\n                            style={{ marginRight: \"5px\", marginLeft: \"5px\" }}\r\n                        />\r\n                    </a>\r\n\r\n                    <a\r\n                        href=\"https://www.instagram.com/cantrelate.jp/\"\r\n                        style={{ color: \"#fff\" }}\r\n                    >\r\n                        <FaInstagram />\r\n                    </a>\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnnouncementBar;\r\n","export default __webpack_public_path__ + \"static/media/White_Blank_Logo.2c4cf922.png\";","import LogoSrc from \"../../images/White_Blank_Logo.png\";\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <a href=\"#/home\" className=\"brand-logo\">\r\n            <img src={LogoSrc} alt=\"Nari-Store\"></img>\r\n        </a>\r\n    );\r\n};\r\n\r\nexport default Logo;\r\n","import { GoogleLogin, useGoogleLogin } from \"react-google-login\";\r\nimport { setAccessToken } from \"../../accessToken\";\r\nimport { checkAuth } from \"../../CheckAuth\";\r\nimport { useLoginMutation } from \"../../generated/graphql\";\r\nimport \"../../css/navbar.scss\";\r\nimport { useEffect } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport AnnouncementBar from \"./AnnouncementBar\";\r\nimport Logo from \"./Logo\";\r\n\r\nconst Navbar = () => {\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll(\".sidenav\");\r\n        M.Sidenav.init(elems);\r\n    });\r\n    const [login] = useLoginMutation();\r\n\r\n    const handler = async res => {\r\n        console.log(\"res :>> \", res);\r\n        let response = await login({\r\n            variables: {\r\n                user_id: res.googleId,\r\n                email: res.profileObj.email,\r\n            },\r\n        });\r\n\r\n        console.log(\"response :>> \", response.data?.login);\r\n        setAccessToken(response.data?.login.accessToken!);\r\n        localStorage.setItem(\"iru5\", response.data?.login.refreshToken!);\r\n        window.location.reload();\r\n    };\r\n\r\n    const { signIn } = useGoogleLogin({\r\n        clientId:\r\n            \"36358700157-4ihpf9tj4bjf4k346b8pnubt4meim4j0.apps.googleusercontent.com\",\r\n        onSuccess: handler,\r\n    });\r\n\r\n    const logout = () => {\r\n        localStorage.setItem(\"iru5\", \"\");\r\n        setAccessToken(\"\");\r\n        window.location.reload();\r\n    };\r\n\r\n    console.log(\"checkAuth() :>> \", checkAuth());\r\n    return (\r\n        <>\r\n            <header style={{ position: \"sticky\", top: 0, zIndex: 997 }}>\r\n                <AnnouncementBar />\r\n                <div style={{ zIndex: 4, position: \"relative\" }}>\r\n                    <nav style={{ backgroundColor: \"#0a0a0a\" }}>\r\n                        <div className=\"nav-wrapper\">\r\n                            <Logo />\r\n\r\n                            <a\r\n                                data-target=\"mobile-demo\"\r\n                                className=\"sidenav-trigger left\"\r\n                            >\r\n                                <i className=\"material-icons noselect\">menu</i>\r\n                            </a>\r\n\r\n                            <ul\r\n                                id=\"nav\"\r\n                                className=\"center\"\r\n                                style={{\r\n                                    left: \"50%\",\r\n                                    transform: \"translateX(-50%)\",\r\n                                    position: \"absolute\",\r\n                                }}\r\n                            >\r\n                                {/* <li>\r\n                                    <a href=\"#/home\">HOME</a>\r\n                                </li> */}\r\n                                <li>\r\n                                    <a href=\"#/products\">PRODUCTS</a>\r\n                                </li>\r\n\r\n                                {/* <li>\r\n                                    {checkAuth() ? (\r\n                                        <a href=\"#/my-orders\">MY ORDERS</a>\r\n                                    ) : (\r\n                                        // eslint-disable-next-line\r\n                                        <a\r\n                                            onClick={async () => {\r\n                                                await signIn();\r\n                                            }}\r\n                                        >\r\n                                            MY ORDERS\r\n                                        </a>\r\n                                    )}\r\n                                </li> */}\r\n\r\n                                <li>\r\n                                    <a href=\"#/my-cart\">CART</a>\r\n                                </li>\r\n                            </ul>\r\n                            {checkAuth() ? (\r\n                                <i\r\n                                    id=\"desktop-logout\"\r\n                                    className=\"material-icons right noselect\"\r\n                                    style={{ marginRight: \"15%\" }}\r\n                                    onClick={() => logout()}\r\n                                >\r\n                                    exit_to_app\r\n                                </i>\r\n                            ) : (\r\n                                <></>\r\n                            )}\r\n                            <a\r\n                                href=\"#/my-cart\"\r\n                                className=\"right white-text\"\r\n                                style={{ color: \"#000\", marginRight: \"18px\" }}\r\n                            >\r\n                                <i className=\"material-icons\" id=\"mobile-cart\">\r\n                                    shopping_cart\r\n                                </i>\r\n                            </a>\r\n                        </div>\r\n                    </nav>\r\n                </div>\r\n            </header>\r\n            <ul\r\n                className=\"sidenav\"\r\n                id=\"mobile-demo\"\r\n                style={{\r\n                    backgroundColor: \"rgba(0, 0, 0, 0.95)\",\r\n                    paddingTop: \"42px\",\r\n                }}\r\n            >\r\n                <li>\r\n                    <a\r\n                        style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                        href=\"#/products\"\r\n                    >\r\n                        Products\r\n                    </a>\r\n                </li>\r\n                <li>\r\n                    {checkAuth() ? (\r\n                        <a\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            href=\"#/my-orders\"\r\n                        >\r\n                            My Orders\r\n                        </a>\r\n                    ) : (\r\n                        // eslint-disable-next-line\r\n                        <a\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            onClick={() => {\r\n                                console.log(\"clicked\");\r\n                                signIn();\r\n                            }}\r\n                        >\r\n                            My Orders\r\n                        </a>\r\n                    )}\r\n                </li>\r\n\r\n                <li>\r\n                    {checkAuth() ? (\r\n                        <a\r\n                            style={{ color: \"#fff\", textAlign: \"center\" }}\r\n                            onClick={() => logout()}\r\n                        >\r\n                            Logout\r\n                        </a>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </li>\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","const CopyrightBar = () => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                border: \"1px solid\",\r\n            }}\r\n        >\r\n            <span\r\n                style={{\r\n                    marginTop: \"5px\",\r\n                    marginBottom: \"5px\",\r\n                    fontSize: \"26.5px\",\r\n                    fontWeight: 550,\r\n                }}\r\n            >\r\n                © 2021 CANT RELATE.JP\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CopyrightBar;\r\n","export default __webpack_public_path__ + \"static/media/Blank_Footer_logo.b8ae07f0.png\";","import CopyrightBar from \"./CopyrightBar\";\r\nimport FooterLogo from \"../../images/Blank_Footer_logo.png\";\r\nimport { FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\nimport \"../../css/footer.scss\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <span>\r\n            <footer\r\n                style={{\r\n                    backgroundColor: \"#0a0a0a\",\r\n                    width: \"100%\",\r\n                    height: \"280px\",\r\n                }}\r\n            >\r\n                <div className=\"container\">\r\n                    <div\r\n                        className=\"row\"\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"space-between\",\r\n                        }}\r\n                    >\r\n                        <div className=\"col l6 s12\">\r\n                            <img\r\n                                src={FooterLogo}\r\n                                alt=\"footer_logo\"\r\n                                style={{ height: \"280px\" }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col l4 offset-12 s12\">\r\n                            <ul id=\"footer-info\">\r\n                                <li>\r\n                                    <a\r\n                                        href=\"#/shipping_policy\"\r\n                                        className=\"white-text\"\r\n                                    >\r\n                                        <h4 style={{ fontWeight: 600 }}>\r\n                                            Shipping Policy\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#/contact\" className=\"white-text\">\r\n                                        <h4\r\n                                            style={{\r\n                                                marginTop: \"0px\",\r\n                                                fontWeight: 600,\r\n                                            }}\r\n                                        >\r\n                                            Contact Us\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a href=\"#/FAQ\" className=\"white-text\">\r\n                                        <h4\r\n                                            style={{\r\n                                                marginTop: \"0px\",\r\n                                                fontWeight: 600,\r\n                                            }}\r\n                                        >\r\n                                            FAQ\r\n                                        </h4>\r\n                                    </a>\r\n                                </li>\r\n                                <li>\r\n                                    <a\r\n                                        id=\"social-link\"\r\n                                        href=\"https://www.instagram.com/cantrelate.jp/\"\r\n                                    >\r\n                                        <FaInstagram\r\n                                            style={{\r\n                                                width: \"30px\",\r\n                                                height: \"30px\",\r\n                                                marginRight: \"7px\",\r\n                                            }}\r\n                                        />\r\n                                    </a>\r\n                                    <a\r\n                                        id=\"social-link\"\r\n                                        href=\"mailto:cantrelatejp@gmail.com\"\r\n                                    >\r\n                                        <FaEnvelope\r\n                                            style={{\r\n                                                width: \"30px\",\r\n                                                height: \"30px\",\r\n                                            }}\r\n                                        />\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </footer>\r\n            <CopyrightBar />\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import { useGetProductsQuery } from \"../../generated/graphql\";\r\nimport \"../../css/products.scss\";\r\nimport { useEffect } from \"react\";\r\nimport anime from \"animejs\";\r\n\r\nconst Products = () => {\r\n    const { data, loading } = useGetProductsQuery();\r\n\r\n    useEffect(() => {\r\n        anime({\r\n            duration: function (_t, i) {\r\n                return 900 + i * 75;\r\n            },\r\n            targets: \".card-content\",\r\n            easing: \"easeOutExpo\",\r\n            // delay: function (t, i) {\r\n            //     return i * 50;\r\n            // },\r\n            opacity: { value: [0, 1], easing: \"linear\" },\r\n            scale: [0, 1],\r\n            delay: anime.stagger(150, { start: 100 }),\r\n        });\r\n\r\n        anime({\r\n            duration: function (_t, i) {\r\n                return 900 + i * 75;\r\n            },\r\n            targets: \".card\",\r\n            easing: \"easeOutExpo\",\r\n            // delay: function (t, i) {\r\n            //     return i * 50;\r\n            // },\r\n            opacity: { value: [0, 1], easing: \"linear\" },\r\n            scale: [0, 1],\r\n            delay: anime.stagger(150, { start: 100 }),\r\n        });\r\n    });\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    console.log(\"Products.tsx Get Products :>> \", data?.getProducts);\r\n    return (\r\n        <div className=\"container\" style={{ width: \"80%\" }}>\r\n            <h1\r\n                className=\"center-align\"\r\n                style={{\r\n                    marginTop: \"60px\",\r\n                    marginBottom: \"60px\",\r\n                    fontWeight: 600,\r\n                }}\r\n            >\r\n                Products\r\n            </h1>\r\n\r\n            <div className=\"products-grid\">\r\n                {data?.getProducts.map((_val, i) => {\r\n                    let product: any = data.getProducts[i];\r\n                    return (\r\n                        <div\r\n                            className=\"card z-depth-0\"\r\n                            style={{\r\n                                margin: \"0px 8px 32px 8px\",\r\n                            }}\r\n                            key={i}\r\n                        >\r\n                            <a\r\n                                className=\"black-text\"\r\n                                href={`#/product-details:${product.product_id}`}\r\n                            >\r\n                                <div className=\"container\">\r\n                                    <div className=\"card-image\">\r\n                                        <img\r\n                                            src={product.images[0].img_url!}\r\n                                            alt={product.name}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"card-content\">\r\n                                    <span className=\"card-title\">\r\n                                        <h5 className=\"center-align\">\r\n                                            {product.name}\r\n                                        </h5>\r\n                                    </span>\r\n                                    <span\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <p\r\n                                            className=\"product-price\"\r\n                                            style={{ fontSize: \"16px\" }}\r\n                                        >\r\n                                            $\r\n                                            {Number(\r\n                                                product.price / 100\r\n                                            ).toFixed(2)}\r\n                                        </p>\r\n                                    </span>\r\n                                </div>\r\n                            </a>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Products;\r\n","import { Product, ProductInCart } from \"../RootReducer\";\r\n\r\nexport const addProductToCart = (product: Product) => {\r\n    return {\r\n        type: \"ADD_PRODUCT_TO_CART\",\r\n        product,\r\n    };\r\n};\r\n\r\nexport const resetCart = () => {\r\n    return { type: \"RESET_CART\" };\r\n};\r\n\r\nexport const changeQuantityOnProduct = (\r\n    newQuantity: number,\r\n    productIndex: number\r\n) => {\r\n    return { type: \"CHANGE_QUANTITY_ON_PRODUCT\", newQuantity, productIndex };\r\n};\r\n","import { Redirect } from \"react-router\";\r\nimport { useGetProductQuery } from \"../../generated/graphql\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addProductToCart } from \"../../redux/actions/userAction\";\r\nimport { useEffect } from \"react\";\r\nimport anime from \"animejs\";\r\n\r\nconst ProductDetails = () => {\r\n    let product_id: number;\r\n    if (process.env.NODE_ENV === \"production\") {\r\n        product_id = Number(window.location.href.split(\":\")[2]);\r\n    } else {\r\n        product_id = Number(window.location.href.split(\":\")[3]);\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { data, loading, error } = useGetProductQuery({\r\n        variables: {\r\n            product_id,\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll(\".tooltipped\");\r\n        M.Tooltip.init(elems);\r\n        if (!loading) {\r\n            // (stock * 100)/ org_stock\r\n            let percent = 50;\r\n            if (!data!.getProduct.org_stock) {\r\n                percent = 100;\r\n            } else {\r\n                percent =\r\n                    (data!.getProduct.stock * 100) / data!.getProduct.org_stock;\r\n            }\r\n\r\n            anime({\r\n                targets: \".filler\",\r\n                width: [\"0%\", `${percent}%`],\r\n                easing: \"easeInOutExpo\",\r\n            });\r\n\r\n            if (!document.getElementById(\"product-img\")) {\r\n            } else {\r\n                if (data?.getProduct.stock === 0) {\r\n                    document.getElementById(\"product-img\")!.style.opacity =\r\n                        \"0.7\";\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    if (!data || error) {\r\n        return <Redirect to=\"/products\" />;\r\n    }\r\n\r\n    let product: any = data!.getProduct;\r\n\r\n    console.log(\"product :>> \", product);\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"center-align\">{product.name}</h3>\r\n            <h6 className=\"center-align\">\r\n                ${Number(product.price / 100).toFixed(2)}{\" \"}\r\n                {product.stock === 0 ? (\r\n                    <span style={{ color: \"#ff0000\", fontWeight: \"bold\" }}>\r\n                        SOLD OUT\r\n                    </span>\r\n                ) : (\r\n                    <></>\r\n                )}\r\n            </h6>\r\n\r\n            <div className=\"row\">\r\n                <div\r\n                    className=\"col s4 offset-s2\"\r\n                    style={{ display: \"flex\", justifyContent: \"end\" }}\r\n                >\r\n                    <div>\r\n                        <img\r\n                            id=\"product-img\"\r\n                            src={product.images[0].img_url || \"\"}\r\n                            alt=\"product\"\r\n                            style={{ maxWidth: \"100%\" }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col s3 offset-s1\">\r\n                    <div style={{ marginBottom: \"16px\" }}>{product.desc}</div>\r\n                    <div\r\n                        className=\"divider\"\r\n                        style={{ marginBottom: \"16px\" }}\r\n                    ></div>\r\n                    <a\r\n                        className=\"tooltipped\"\r\n                        data-position=\"right\"\r\n                        data-tooltip={`${product.stock} remaining`}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                height: \"55px\",\r\n                                width: \"100%\",\r\n                                border: \"1px solid black\",\r\n                                marginBottom: \"16px\",\r\n                            }}\r\n                        >\r\n                            <span\r\n                                className=\"filler\"\r\n                                style={{\r\n                                    display: \"inline-block\",\r\n                                    height: \"100%\",\r\n                                    backgroundColor: \"black\",\r\n                                }}\r\n                            ></span>\r\n                        </div>\r\n                    </a>\r\n\r\n                    {product.stock === 0 ? (\r\n                        <></>\r\n                    ) : (\r\n                        <button\r\n                            style={{\r\n                                width: \"100%\",\r\n                                backgroundColor: \"#000\",\r\n                                color: \"#fff\",\r\n                                border: \"none\",\r\n                            }}\r\n                            onClick={() => {\r\n                                M.toast({ html: \"Product was added to cart\" });\r\n                                dispatch(addProductToCart(product));\r\n                            }}\r\n                        >\r\n                            Add to Cart\r\n                        </button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductDetails;\r\n","import { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    useCheckoutMutation,\r\n    useGetProductsQuery,\r\n} from \"../../generated/graphql\";\r\nimport { changeQuantityOnProduct } from \"../../redux/actions/userAction\";\r\n\r\nconst Cart = () => {\r\n    const { data, loading } = useGetProductsQuery();\r\n    const [checkout] = useCheckoutMutation();\r\n    const [state, setState] = useState({\r\n        refresh: false,\r\n        quantities: [],\r\n    });\r\n\r\n    const products = useSelector(state => state.productsInCart);\r\n    const dispatch = useDispatch();\r\n    console.log(\"products cart :>> \", products);\r\n\r\n    if (loading) {\r\n        return <></>;\r\n    }\r\n\r\n    let total = 0;\r\n    for (let i = 0; i < products.length; i++) {\r\n        // cart item validation\r\n        for (let j = 0; j < data!.getProducts.length; j++) {\r\n            if (products[i].product_id === data!.getProducts[j].product_id) {\r\n                if (products[i].quantity > data!.getProducts[j].stock) {\r\n                    M.toast({\r\n                        html: `Could not add`,\r\n                    });\r\n\r\n                    M.toast({\r\n                        html: `There is only ${data!.getProducts[j].stock} ${\r\n                            products[i].name\r\n                        } remaining`,\r\n                    });\r\n                    console.log(\"quantity ordered is greater than stock\");\r\n                    console.log(\"adjusting\");\r\n                    // edit the item\r\n                    products[i].name = data!.getProducts[j].name;\r\n                    products[i].price = data!.getProducts[j].price;\r\n                    products[i].quantity = data!.getProducts[j].stock;\r\n                    dispatch(\r\n                        changeQuantityOnProduct(data!.getProducts[j].stock, i)\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        total += products[i].price * products[i].quantity;\r\n    }\r\n\r\n    return (\r\n        <div style={{ minHeight: \"80vh\" }}>\r\n            {products.length === 0 ? (\r\n                <>\r\n                    <h3 className=\"center-align\">\r\n                        Your Shopping Cart Is Empty!\r\n                    </h3>\r\n                    <a href=\"#/products\">\r\n                        <h6\r\n                            className=\"center-align\"\r\n                            style={{ marginBottom: \"16px\" }}\r\n                        >\r\n                            Click me to start shopping\r\n                        </h6>\r\n                    </a>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h3 className=\"center-align\" style={{ fontWeight: \"bold\" }}>\r\n                        Subtotal\r\n                    </h3>\r\n                    <h6 className=\"center-align\" style={{ fontWeight: 600 }}>\r\n                        ${Number(total / 100).toFixed(2)}\r\n                    </h6>\r\n                    {products.map((_val, i) => {\r\n                        return (\r\n                            <>\r\n                                <div\r\n                                    id={`product-${i}`}\r\n                                    className={`product-${i} row container`}\r\n                                >\r\n                                    <div className={` col s12 m5 l4`}>\r\n                                        <img\r\n                                            src={products[i].images[0].img_url}\r\n                                            style={{ width: \"100%\" }}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"col s12 m4\">\r\n                                        <h5 className=\"center-align hide-on-small-only\">\r\n                                            {products[i].name}\r\n                                        </h5>\r\n\r\n                                        <h6 className=\"center-align show-on-small hide-on-med-and-up\">\r\n                                            {products[i].name} ($\r\n                                            {Number(\r\n                                                products[i].price / 100\r\n                                            ).toFixed(2)}\r\n                                            )\r\n                                        </h6>\r\n                                    </div>\r\n\r\n                                    <div\r\n                                        className=\"col s4 offset-s4 m2 l2\"\r\n                                        style={{\r\n                                            padding: \"0\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={\r\n                                                state.quantities[i] ||\r\n                                                state.quantities[i] === 0\r\n                                                    ? state.quantities[i]\r\n                                                    : products[i].quantity\r\n                                            }\r\n                                            minLength={0}\r\n                                            maxLength={2}\r\n                                            pattern=\"\\D\"\r\n                                            onBlur={e => {\r\n                                                dispatch(\r\n                                                    changeQuantityOnProduct(\r\n                                                        Number(e.target.value),\r\n                                                        i\r\n                                                    )\r\n                                                );\r\n\r\n                                                let tmp = state.quantities;\r\n                                                tmp.splice(i, 1);\r\n\r\n                                                // if (e.target.value === \"0\") {\r\n                                                //     anime({\r\n                                                //         duration: 400,\r\n                                                //         targets: `.product-${i}`,\r\n                                                //         easing: \"easeOutExpo\",\r\n                                                //         opacity: {\r\n                                                //             value: [1, 0],\r\n                                                //             easing: \"linear\",\r\n                                                //         },\r\n                                                //     });\r\n                                                // }\r\n                                                setState({\r\n                                                    ...state,\r\n                                                    quantities: tmp,\r\n                                                    refresh: !state.refresh,\r\n                                                });\r\n                                            }}\r\n                                            onChange={e => {\r\n                                                let tmp: any = state.quantities;\r\n\r\n                                                if (!e.target.value) {\r\n                                                    tmp[i] = 0;\r\n                                                    setState({\r\n                                                        ...state,\r\n                                                        quantities: tmp,\r\n                                                    });\r\n                                                }\r\n                                                if (\r\n                                                    e.target.value.match(/\\d/g)\r\n                                                ) {\r\n                                                    tmp[i] = Number(\r\n                                                        e.target.value\r\n                                                    );\r\n                                                    setState({\r\n                                                        ...state,\r\n                                                        quantities: tmp,\r\n                                                    });\r\n                                                }\r\n                                            }}\r\n                                            style={{\r\n                                                textAlign: \"center\",\r\n                                                border: \"1px solid #000\",\r\n                                                height: \"56px\",\r\n                                                width: \"56px\",\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"col hide-on-small-only m1 l2\">\r\n                                        <span></span>$\r\n                                        {Number(\r\n                                            products[i].price / 100\r\n                                        ).toFixed(2)}\r\n                                    </div>\r\n                                </div>\r\n                            </>\r\n                        );\r\n                    })}\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                            marginBottom: \"40px\",\r\n                        }}\r\n                    >\r\n                        <a\r\n                            className=\"btn\"\r\n                            style={{\r\n                                marginTop: \"16px\",\r\n                                width: \"45%\",\r\n                                maxWidth: \"380px\",\r\n                                backgroundColor: \"#343145\",\r\n                            }}\r\n                            href=\"#/checkout\"\r\n                        >\r\n                            checkout\r\n                        </a>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cart;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n    useCheckoutMutation,\r\n    useGetCurrUserQuery,\r\n    useValidateCouponMutation,\r\n    usePaypalCheckoutMutation,\r\n} from \"../../generated/graphql\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport { Redirect } from \"react-router\";\r\nimport { checkAuth } from \"../../CheckAuth\";\r\nimport { resetCart } from \"../../redux/actions/userAction\";\r\n\r\nfunction CardSection() {\r\n    const CARD_ELEMENT_OPTIONS: any = {\r\n        iconStyle: \"solid\",\r\n        hidePostalCode: true,\r\n        style: {\r\n            base: {\r\n                iconColor: \"rgb(240, 57, 122)\",\r\n                color: \"rgb(240, 57, 122)\",\r\n                fontSize: \"16px\",\r\n                fontFamily: '\"Open Sans\", sans-serif',\r\n                fontSmoothing: \"antialiased\",\r\n                \"::placeholder\": {\r\n                    color: \"#CFD7DF\",\r\n                },\r\n            },\r\n\r\n            invalid: {\r\n                color: \"#e5424d\",\r\n                \":focus\": {\r\n                    color: \"#303238\",\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    return <CardElement options={CARD_ELEMENT_OPTIONS} />;\r\n}\r\n\r\nconst Checkout = props => {\r\n    const { data } = useGetCurrUserQuery();\r\n    const [checkout] = useCheckoutMutation();\r\n    const [validateCoupon] = useValidateCouponMutation();\r\n    const [paypalCheckout] = usePaypalCheckoutMutation();\r\n    const [discountPH, setDiscountPH] = useState(0);\r\n    const products = useSelector(state => state.productsInCart);\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState(\"\");\r\n    const [coupon, setCoupon] = useState(\"\");\r\n    const [subtotal, setSubtotal] = useState(-1);\r\n    const [Total, setTotal] = useState(-1);\r\n    const [shipping, setShipping] = useState(-1);\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [billing, setBilling] = useState({\r\n        refresh: false,\r\n        email: \"\",\r\n        name: \"\",\r\n        address: {\r\n            city: \"\",\r\n            line1: \"\",\r\n            zip: \"\",\r\n            state: \"\",\r\n        },\r\n    });\r\n\r\n    const [paidFor, setPaidFor] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [address, setAddress] = useState({\r\n        city: \"\",\r\n        line1: \"\",\r\n        zip: \"\",\r\n        state: \"\",\r\n        email: \"\",\r\n    });\r\n\r\n    const paypalRef = useRef();\r\n    const couponRef: any = useRef();\r\n    couponRef.current = coupon;\r\n\r\n    useEffect(() => {\r\n        var elems = document.querySelectorAll(\".autocomplete\");\r\n        M.Autocomplete.init(elems, {\r\n            data: {\r\n                Alabama: null,\r\n                Alaska: null,\r\n                Arizona: null,\r\n                Arkansas: null,\r\n                California: null,\r\n                Colorado: null,\r\n                Connecticut: null,\r\n                Delaware: null,\r\n                Florida: null,\r\n                Georgia: null,\r\n                Hawaii: null,\r\n                Idaho: null,\r\n                Illinois: null,\r\n                Indiana: null,\r\n                Iowa: null,\r\n                Kansas: null,\r\n                Kentucky: null,\r\n                Louisiana: null,\r\n                Maine: null,\r\n                Maryland: null,\r\n                Massachusettes: null,\r\n                Michigan: null,\r\n                Minnesota: null,\r\n                Mississippi: null,\r\n                Missouri: null,\r\n                Montana: null,\r\n                Nebraska: null,\r\n                Nevada: null,\r\n                \"New Hampshire\": null,\r\n                \"New Jersey\": null,\r\n                \"New Mexico\": null,\r\n                \"New York\": null,\r\n                \"North Carolina\": null,\r\n                \"North Dakota\": null,\r\n                Ohio: null,\r\n                Oklahoma: null,\r\n                Oregon: null,\r\n                Pennsylvania: null,\r\n                \"Rhode Island\": null,\r\n                \"South Carolina\": null,\r\n                \"South Dakota\": null,\r\n                Tennessee: null,\r\n                Texas: null,\r\n                Utah: null,\r\n                Vermont: null,\r\n                Virginia: null,\r\n                Washington: null,\r\n                \"West Virginia\": null,\r\n                Wisconsin: null,\r\n                Wyoming: null,\r\n            },\r\n        });\r\n\r\n        let win = window as any;\r\n        try {\r\n            let value = win.paypal\r\n                .Buttons({\r\n                    createOrder: async (data, actions) => {\r\n                        let products_str = JSON.stringify(products);\r\n                        console.log(\r\n                            \"couponRef.current :>> \",\r\n                            couponRef.current\r\n                        );\r\n                        let price = await paypalCheckout({\r\n                            variables: {\r\n                                products: products_str,\r\n                                coupon: couponRef.current || \"NONE\",\r\n                            },\r\n                        });\r\n\r\n                        if (!price) {\r\n                            return;\r\n                        } else {\r\n                            return actions.order.create({\r\n                                purchase_units: [\r\n                                    {\r\n                                        description: \"product.description\",\r\n                                        amount: {\r\n                                            currency_code: \"USD\",\r\n                                            value: Number(\r\n                                                Number(\r\n                                                    price.data?.paypalCheckout\r\n                                                ) / 100\r\n                                            ).toFixed(2),\r\n                                        },\r\n                                    },\r\n                                ],\r\n                            });\r\n                        }\r\n                    },\r\n                    onApprove: async (data, actions) => {\r\n                        const order = await actions.order.capture();\r\n                        setPaidFor(true);\r\n                        console.log(order);\r\n                    },\r\n                    onError: async err => {\r\n                        let products_str = JSON.stringify(products);\r\n                        var price: any = await paypalCheckout({\r\n                            variables: {\r\n                                products: products_str,\r\n                                coupon,\r\n                            },\r\n                        });\r\n                        setError(price.data.paypalCheckout);\r\n                    },\r\n                })\r\n                .render(paypalRef.current);\r\n        } catch {\r\n            setError(\"DONT_KNOW\");\r\n        }\r\n    }, [Total]);\r\n\r\n    if (!!error) {\r\n        return (\r\n            <div style={{ minHeight: \"70vh\" }}>\r\n                {/* // oops that's embarrasing page */}\r\n                <div\r\n                    className=\"row\"\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                    <h1>Oops this is embarrasing</h1>\r\n                </div>\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div className=\"faq-wrapper\">\r\n                        <div\r\n                            style={{\r\n                                width: \"100%\",\r\n                                borderBottom: \" 4px solid black\",\r\n                            }}\r\n                        ></div>\r\n\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            It looks like{\" \"}\r\n                            <span style={{ color: \"rgb(230, 19, 19)\" }}>\r\n                                {error}\r\n                            </span>\r\n                        </h3>\r\n\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            <strong style={{ color: \"#ff0000\" }}>-</strong> If\r\n                            you believe this is an error please contact us via\r\n                            instagram or email.\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (paidFor) {\r\n        //reset cart\r\n        dispatch(resetCart());\r\n\r\n        return (\r\n            <div style={{ minHeight: \"80vh\" }}>\r\n                <div className=\"centered\">\r\n                    <h3>Success</h3>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            width: \"50%\",\r\n                            borderBottom: \" 4px solid #ff0000\",\r\n                        }}\r\n                    ></div>\r\n                </div>\r\n\r\n                <div className=\"centered\">\r\n                    <div className=\"faq-wrapper\">\r\n                        <blockquote\r\n                            style={{\r\n                                borderLeft: \"5px solid black\",\r\n                                marginTop: \"64px\",\r\n                            }}\r\n                        >\r\n                            <h3 style={{ fontWeight: 550 }}>\r\n                                We Received your order.\r\n                            </h3>\r\n\r\n                            <p\r\n                                className=\"flow-text\"\r\n                                style={{ marginLeft: \"32px\" }}\r\n                            >\r\n                                <strong style={{ color: \"#ff0000\" }}>-</strong>{\" \"}\r\n                                Please check your paypal for updates.\r\n                            </p>\r\n                        </blockquote>\r\n\r\n                        <blockquote\r\n                            style={{\r\n                                borderLeft: \"5px solid #ff0000\",\r\n                                marginTop: \"64px\",\r\n                            }}\r\n                        >\r\n                            <h3\r\n                                style={{ fontWeight: 550 }}\r\n                                className=\"noselect\"\r\n                            >\r\n                                Thank you for shopping with Us! ٩(♡ε♡)۶\r\n                            </h3>\r\n                        </blockquote>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (products.length === 0) {\r\n        return <Redirect to=\"/products\" />;\r\n    }\r\n\r\n    if (redirect) {\r\n        console.log(\"checkAuth() :>> \", checkAuth());\r\n        if (checkAuth()) {\r\n            return (\r\n                <Redirect\r\n                    to={{ pathname: \"/my-orders\", state: { reload: true } }}\r\n                />\r\n            );\r\n        } else {\r\n            return <Redirect to=\"/products\" />;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        const { stripe, elements } = props;\r\n        if (!stripe || !elements) {\r\n            return;\r\n        }\r\n\r\n        const card = elements.getElement(CardElement);\r\n        const result = await stripe.createToken(card);\r\n\r\n        if (result.error) {\r\n            console.log(\"result.error :>> \", result.error);\r\n        } else {\r\n            console.log(\"result.token :>> \", result.token);\r\n            let tmp: any = address;\r\n            tmp.email = address.email;\r\n            let products_str = JSON.stringify(products),\r\n                token_str = JSON.stringify(result.token),\r\n                shipping_str = JSON.stringify(tmp);\r\n\r\n            let user_id;\r\n            if (!data) {\r\n                user_id = \"NONE\";\r\n            } else {\r\n                user_id = data.getCurrUser!.user_id!;\r\n            }\r\n\r\n            let billing_str = \"\";\r\n            if (billing.refresh) {\r\n                billing_str = JSON.stringify(billing);\r\n            } else {\r\n                billing_str = \"NONE\";\r\n            }\r\n\r\n            let response = await checkout({\r\n                variables: {\r\n                    token: token_str,\r\n                    user_id,\r\n                    products: products_str,\r\n                    shipping_info: shipping_str,\r\n                    billing_info: billing_str,\r\n                    coupon,\r\n                },\r\n            });\r\n\r\n            console.log(\"response :>> \", response);\r\n            if (!response!.data!.checkout) {\r\n                M.toast({ html: \"Failed to checkout\" });\r\n                M.toast({ html: \"Please double check your details\" });\r\n            } else if (response!.data!.checkout) {\r\n                setRedirect(true);\r\n            }\r\n        }\r\n    };\r\n\r\n    if (subtotal === -1) {\r\n        let tmp_subtotal = 0;\r\n\r\n        let shipping_total = 100;\r\n        for (let i = 0; i < products.length; i++) {\r\n            tmp_subtotal += products[i].price * products[i].quantity;\r\n            shipping_total += products[i].quantity * 50;\r\n        }\r\n\r\n        if (shipping_total > 500) {\r\n            shipping_total = 500;\r\n        }\r\n\r\n        let tax = Math.round(tmp_subtotal * 0.095);\r\n\r\n        setTotal(tmp_subtotal + tax);\r\n        setSubtotal(tmp_subtotal);\r\n        setShipping(shipping_total);\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let tmp_email = address.email;\r\n        if (checkAuth()) {\r\n            tmp_email = \"placeholder\";\r\n        }\r\n\r\n        if (\r\n            !name ||\r\n            !tmp_email ||\r\n            !address.line1 ||\r\n            !address.city ||\r\n            !address.zip ||\r\n            !address.state ||\r\n            billing.refresh\r\n        ) {\r\n            if (!tmp_email && document.getElementById(\"email\")) {\r\n                document.getElementById(\"email\")!.classList.add(\"invalid\");\r\n            }\r\n            if (!name) {\r\n                document.getElementById(\"name\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (!address.line1) {\r\n                document.getElementById(\"address\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (!address.city) {\r\n                document.getElementById(\"city\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (!address.zip) {\r\n                document.getElementById(\"zip\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (!address.state) {\r\n                document.getElementById(\"state\")!.classList.add(\"invalid\");\r\n            }\r\n\r\n            if (billing.refresh) {\r\n                if (\r\n                    !billing.name ||\r\n                    !billing.email ||\r\n                    !billing.address.line1 ||\r\n                    !billing.address.city ||\r\n                    !billing.address.zip ||\r\n                    !billing.address.state\r\n                ) {\r\n                    console.log(\"missing data\");\r\n\r\n                    if (!billing.name) {\r\n                        document\r\n                            .getElementById(\"billing_name\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.email) {\r\n                        document\r\n                            .getElementById(\"billing_email\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.address.line1) {\r\n                        document\r\n                            .getElementById(\"billing_address\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.address.city) {\r\n                        document\r\n                            .getElementById(\"billing_city\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.address.zip) {\r\n                        document\r\n                            .getElementById(\"billing_zip\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n\r\n                    if (!billing.address.state) {\r\n                        document\r\n                            .getElementById(\"billing_state\")!\r\n                            .classList.add(\"invalid\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            M.toast({\r\n                html: \"Please fill in the missing data\",\r\n                classes: \"rounded\",\r\n            });\r\n        } else {\r\n            handleSubmit();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\" style={{ height: \"100%\", margin: \"0\" }}>\r\n            <div className=\"col s12\" style={{ minHeight: \"93vh\" }}>\r\n                <div className=\"container\" style={{ marginTop: \"50px\" }}>\r\n                    <div className=\"row\">\r\n                        <a href=\"#/my-cart\">\r\n                            <svg\r\n                                style={{ marginRight: \"8px\" }}\r\n                                focusable=\"false\"\r\n                                width=\"12\"\r\n                                height=\"12\"\r\n                                viewBox=\"0 0 16 16\"\r\n                            >\r\n                                <path\r\n                                    d=\"M3.417 7H15a1 1 0 0 1 0 2H3.417l4.591 4.591a1 1 0 0 1-1.415 1.416l-6.3-6.3a1 1 0 0 1 0-1.414l6.3-6.3A1 1 0 0 1 8.008 2.41z\"\r\n                                    fill-rule=\"evenodd\"\r\n                                ></path>\r\n                            </svg>\r\n                            <span>Back To Cart</span>\r\n                        </a>\r\n                    </div>\r\n                    <div>\r\n                        <div\r\n                            className=\"ProductSummary container\"\r\n                            style={{ marginTop: \"32px\" }}\r\n                        >\r\n                            <div\r\n                                className=\"ProductSummary-info\"\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    flexDirection: \"column\",\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    style={{\r\n                                        color: \"rgba(26,26,26,.6)\",\r\n                                        fontWeight: \"bold\",\r\n                                    }}\r\n                                >\r\n                                    Total\r\n                                </span>\r\n                                <span\r\n                                    style={{\r\n                                        fontSize: \"36px\",\r\n                                        letterSpacing: \"-.03rem\",\r\n                                        color: \"#303030\",\r\n                                    }}\r\n                                >\r\n                                    ${Number(Total / 100).toFixed(2)}\r\n                                </span>\r\n                                <span\r\n                                    style={{\r\n                                        marginTop: \"32px\",\r\n                                        marginBottom: \"32px\",\r\n                                    }}\r\n                                    id=\"Products-summary\"\r\n                                >\r\n                                    {products.map((_val, i) => {\r\n                                        return (\r\n                                            <div\r\n                                                className=\"product\"\r\n                                                style={{\r\n                                                    marginBottom: \"16px\",\r\n                                                    display: \"flex\",\r\n                                                    justifyContent:\r\n                                                        \"space-between\",\r\n                                                }}\r\n                                            >\r\n                                                <div\r\n                                                    className=\"product-name\"\r\n                                                    style={{\r\n                                                        fontSize: \"16px\",\r\n                                                        fontWeight: 600,\r\n                                                    }}\r\n                                                >\r\n                                                    {products[i].name}\r\n                                                    {products[i].quantity !==\r\n                                                    1 ? (\r\n                                                        <>\r\n                                                            {\" \"}\r\n                                                            x\r\n                                                            {\r\n                                                                products[i]\r\n                                                                    .quantity\r\n                                                            }\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <></>\r\n                                                    )}\r\n                                                </div>\r\n                                                <div\r\n                                                    className=\"product-subtotal\"\r\n                                                    style={{ fontWeight: 390 }}\r\n                                                >\r\n                                                    $\r\n                                                    {Number(\r\n                                                        (products[i].price *\r\n                                                            products[i]\r\n                                                                .quantity) /\r\n                                                            100\r\n                                                    ).toFixed(2)}\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                    <div\r\n                                        className=\"subtotal\"\r\n                                        style={{\r\n                                            paddingBottom: \"16px\",\r\n                                            paddingTop: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Subtotal</span>\r\n                                        <span>\r\n                                            ${Number(subtotal / 100).toFixed(2)}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"divider\"></div>\r\n\r\n                                    <div\r\n                                        id=\"coupon-applied\"\r\n                                        style={{\r\n                                            display: \"none\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Coupon Applied</span>\r\n                                        <span style={{ fontWeight: \"bold\" }}>\r\n                                            -\r\n                                            {Number(discountPH / 100).toFixed(\r\n                                                2\r\n                                            )}\r\n                                        </span>\r\n                                    </div>\r\n                                    <div className=\"row\" id=\"promocode-input\">\r\n                                        <div className=\"col s8\">\r\n                                            <div className=\"input-field\">\r\n                                                <input\r\n                                                    id=\"PromoCode\"\r\n                                                    type=\"text\"\r\n                                                    className=\"validate\"\r\n                                                    value={coupon}\r\n                                                    onChange={e => {\r\n                                                        setCoupon(\r\n                                                            e.target.value.toLowerCase()\r\n                                                        );\r\n                                                    }}\r\n                                                />\r\n                                                <label htmlFor=\"PromoCode\">\r\n                                                    Add a promotion code\r\n                                                </label>\r\n                                                <span\r\n                                                    id=\"coupon-helper\"\r\n                                                    className=\"helper-text\"\r\n                                                    data-error=\" \"\r\n                                                ></span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col s3\">\r\n                                            <button\r\n                                                className=\"btn\"\r\n                                                style={{\r\n                                                    backgroundColor: \"#343145\",\r\n                                                    marginTop: \"25px\",\r\n                                                    marginBottom: \"15px\",\r\n                                                }}\r\n                                                onClick={async () => {\r\n                                                    //validate  coupon\r\n                                                    if (coupon.length !== 0) {\r\n                                                        let type = await validateCoupon(\r\n                                                            {\r\n                                                                variables: {\r\n                                                                    coupon_name: coupon,\r\n                                                                },\r\n                                                            }\r\n                                                        );\r\n                                                        console.log(\r\n                                                            \"type :>> \",\r\n                                                            type\r\n                                                        );\r\n                                                        if (\r\n                                                            type.data!\r\n                                                                .validateCoupon ===\r\n                                                            \"INVALID\"\r\n                                                        ) {\r\n                                                            document\r\n                                                                .getElementById(\r\n                                                                    \"PromoCode\"\r\n                                                                )!\r\n                                                                .classList.add(\r\n                                                                    \"invalid\"\r\n                                                                );\r\n\r\n                                                            document.getElementById(\r\n                                                                \"coupon-helper\"\r\n                                                            )!.attributes[\r\n                                                                \"data-error\"\r\n                                                            ].nodeValue = `The coupon you entered(${coupon}) is not valid`;\r\n\r\n                                                            setCoupon(\"\");\r\n                                                        } else if (\r\n                                                            type.data!\r\n                                                                .validateCoupon ===\r\n                                                            \"FREE_SHIPPING\"\r\n                                                        ) {\r\n                                                            // Handle Free Shipping here\r\n                                                            console.log(\r\n                                                                \"freesh\"\r\n                                                            );\r\n                                                            setShipping(0);\r\n                                                        } else {\r\n                                                            // amount to subtract from subtotal = subtotal * percentage\r\n                                                            let percentage =\r\n                                                                \"0.\" +\r\n                                                                type.data!\r\n                                                                    .validateCoupon;\r\n\r\n                                                            let discount = Math.round(\r\n                                                                subtotal *\r\n                                                                    Number(\r\n                                                                        percentage\r\n                                                                    )\r\n                                                            );\r\n\r\n                                                            let tmp = subtotal;\r\n                                                            tmp -= discount;\r\n\r\n                                                            let tax = Math.round(\r\n                                                                tmp * 0.095\r\n                                                            );\r\n\r\n                                                            setTotal(tmp + tax);\r\n                                                            console.log(\r\n                                                                \"tax :>> \",\r\n                                                                tax\r\n                                                            );\r\n                                                            setSubtotal(tmp);\r\n                                                            setDiscountPH(\r\n                                                                discount\r\n                                                            );\r\n\r\n                                                            // hide promo input and submit button\r\n                                                            document.getElementById(\r\n                                                                \"promocode-input\"\r\n                                                            )!.style.display =\r\n                                                                \"none\";\r\n                                                            // replace promo input and submit button with a icon that shows the coupon and discount applied\r\n                                                            document.getElementById(\r\n                                                                \"coupon-applied\"\r\n                                                            )!.style.display =\r\n                                                                \"flex\";\r\n                                                        }\r\n                                                    }\r\n                                                }}\r\n                                            >\r\n                                                Submit\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            marginTop: \"8px\",\r\n                                            marginBottom: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Sales Tax</span>\r\n                                        <span style={{ fontWeight: \"bold\" }}>\r\n                                            $\r\n                                            {Number(\r\n                                                Math.round(subtotal * 0.095) /\r\n                                                    100\r\n                                            ).toFixed(2)}\r\n                                            (9.5%)\r\n                                        </span>\r\n                                    </span>\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            marginTop: \"8px\",\r\n                                            marginBottom: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Shipping </span>\r\n                                        <span style={{ fontWeight: \"bold\" }}>\r\n                                            ${Number(shipping / 100).toFixed(2)}\r\n                                        </span>\r\n                                    </span>\r\n\r\n                                    <div className=\"divider\"></div>\r\n\r\n                                    <span\r\n                                        style={{\r\n                                            marginTop: \"16px\",\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"space-between\",\r\n                                        }}\r\n                                    >\r\n                                        <span>Total Due</span>\r\n                                        <span>\r\n                                            $\r\n                                            {Number(\r\n                                                (Total + shipping) / 100\r\n                                            ).toFixed(2)}\r\n                                        </span>\r\n                                    </span>\r\n\r\n                                    <div\r\n                                        style={{\r\n                                            display: \"flex\",\r\n                                            justifyContent: \"center\",\r\n                                            marginTop: \"32px\",\r\n                                        }}\r\n                                    >\r\n                                        <div\r\n                                            style={{\r\n                                                width: \"85%\",\r\n                                                maxWidth: \"600px\",\r\n                                            }}\r\n                                            ref={paypalRef as any}\r\n                                        />\r\n                                    </div>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div\r\n                className=\"col s12 m6 z-depth-3 \"\r\n                style={{ minHeight: \"93vh\", display: \"none\" }}\r\n            >\r\n                <div className=\"container \" style={{}}>\r\n                    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                        Or\r\n                    </div>\r\n                    <h2\r\n                        style={{\r\n                            color: \"rgba(26,26,26,.9)\",\r\n                            fontWeight: 500,\r\n                            fontSize: \"16px\",\r\n                        }}\r\n                    >\r\n                        Shipping Information\r\n                    </h2>\r\n                    {checkAuth() ? (\r\n                        <></>\r\n                    ) : (\r\n                        <div className=\"input-field\">\r\n                            <input\r\n                                id=\"email\"\r\n                                type=\"text\"\r\n                                value={address.email}\r\n                                onChange={e =>\r\n                                    setAddress({\r\n                                        ...address,\r\n                                        email: e.target.value,\r\n                                    })\r\n                                }\r\n                            />\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <span\r\n                                className=\"helper-text\"\r\n                                data-error=\"Please your email\"\r\n                            ></span>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"name\"\r\n                            value={name}\r\n                            type=\"text\"\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please your name\"\r\n                        ></span>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"address\"\r\n                            value={address.line1}\r\n                            type=\"text\"\r\n                            onChange={e =>\r\n                                setAddress({\r\n                                    ...address,\r\n                                    line1: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <label htmlFor=\"address\">Address</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please your address\"\r\n                        ></span>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col s6\">\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"city\"\r\n                                    value={address.city}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setAddress({\r\n                                            ...address,\r\n                                            city: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"city\">City</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please your city\"\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"zip\"\r\n                                    value={address.zip}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setAddress({\r\n                                            ...address,\r\n                                            zip: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"zip\">Zip</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please your zip\"\r\n                                ></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"input-field\">\r\n                        <input\r\n                            id=\"state\"\r\n                            value={address.state}\r\n                            className=\"autocomplete\"\r\n                            type=\"text\"\r\n                            onChange={e =>\r\n                                setAddress({\r\n                                    ...address,\r\n                                    state: e.target.value,\r\n                                })\r\n                            }\r\n                        />\r\n                        <label htmlFor=\"state\">State</label>\r\n                        <span\r\n                            className=\"helper-text\"\r\n                            data-error=\"Please Pick a State\"\r\n                        ></span>\r\n                    </div>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <p>\r\n                        <label>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                id=\"Billing_input\"\r\n                                onClick={() => {\r\n                                    setBilling({\r\n                                        refresh: !billing.refresh,\r\n                                        email: \"\",\r\n                                        name: \"\",\r\n                                        address: {\r\n                                            city: \"\",\r\n                                            line1: \"\",\r\n                                            zip: \"\",\r\n                                            state: \"\",\r\n                                        },\r\n                                    });\r\n                                }}\r\n                            />\r\n                            <span>Billing is different from shipping</span>\r\n                        </label>\r\n                    </p>\r\n\r\n                    {billing.refresh ? (\r\n                        <>\r\n                            <h2\r\n                                style={{\r\n                                    color: \"rgba(26,26,26,.9)\",\r\n                                    fontWeight: 500,\r\n                                    fontSize: \"16px\",\r\n                                }}\r\n                            >\r\n                                Billing Information\r\n                            </h2>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_email\"\r\n                                    type=\"text\"\r\n                                    value={billing.email}\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            email: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_email\">\r\n                                    Billing Email\r\n                                </label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please enter a your email\"\r\n                                ></span>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_name\"\r\n                                    value={billing.name}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            name: e.target.value,\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_name\">Name</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please enter a your name\"\r\n                                ></span>\r\n                            </div>\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_address\"\r\n                                    value={billing.address.line1}\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            address: {\r\n                                                ...billing.address,\r\n                                                line1: e.target.value,\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_address\">Address</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please enter your address\"\r\n                                ></span>\r\n                            </div>\r\n\r\n                            <div className=\"row\">\r\n                                <div className=\"col s6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            id=\"billing_city\"\r\n                                            value={billing.address.city}\r\n                                            type=\"text\"\r\n                                            onChange={e =>\r\n                                                setBilling({\r\n                                                    ...billing,\r\n                                                    address: {\r\n                                                        ...billing.address,\r\n                                                        city: e.target.value,\r\n                                                    },\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor=\"billing_city\">\r\n                                            City\r\n                                        </label>\r\n                                        <span\r\n                                            className=\"helper-text\"\r\n                                            data-error=\"Please enter your city\"\r\n                                        ></span>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col s6\">\r\n                                    <div className=\"input-field\">\r\n                                        <input\r\n                                            id=\"billing_zip\"\r\n                                            value={billing.address.zip}\r\n                                            type=\"text\"\r\n                                            onChange={e =>\r\n                                                setBilling({\r\n                                                    ...billing,\r\n                                                    address: {\r\n                                                        ...billing.address,\r\n                                                        zip: e.target.value,\r\n                                                    },\r\n                                                })\r\n                                            }\r\n                                        />\r\n                                        <label htmlFor=\"billing_zip\">Zip</label>\r\n                                        <span\r\n                                            className=\"helper-text\"\r\n                                            data-error=\"Please enter your zip\"\r\n                                        ></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    id=\"billing_state\"\r\n                                    value={billing.address.state}\r\n                                    className=\"autocomplete\"\r\n                                    type=\"text\"\r\n                                    onChange={e =>\r\n                                        setBilling({\r\n                                            ...billing,\r\n                                            address: {\r\n                                                ...billing.address,\r\n                                                state: e.target.value,\r\n                                            },\r\n                                        })\r\n                                    }\r\n                                />\r\n                                <label htmlFor=\"billing_state\">State</label>\r\n                                <span\r\n                                    className=\"helper-text\"\r\n                                    data-error=\"Please enter your state\"\r\n                                ></span>\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                    <h2\r\n                        style={{\r\n                            color: \"rgba(26,26,26,.9)\",\r\n                            fontWeight: 500,\r\n                            fontSize: \"16px\",\r\n                        }}\r\n                    >\r\n                        Payment Details\r\n                    </h2>\r\n                    <CardSection />\r\n\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\",\r\n                        }}\r\n                    >\r\n                        <button\r\n                            className=\"btn\"\r\n                            style={{\r\n                                marginTop: \"16px\",\r\n                                marginBottom: \"16px\",\r\n                                width: \"380px\",\r\n                                backgroundColor: \"#343145\",\r\n                            }}\r\n                            onClick={() => {\r\n                                validateForm();\r\n                            }}\r\n                        >\r\n                            Pay ${Number(Total / 100).toFixed(2)}\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","import \"../css/faq.scss\";\r\n\r\nconst FAQ = () => {\r\n    var eyeColors = [\r\n        \"rgb(36, 146, 242)\",\r\n        \"rgb(154, 24, 213)\",\r\n        \"#ff0000\",\r\n        \"#000\",\r\n    ];\r\n    let eyeColor = eyeColors[Math.floor(Math.random() * eyeColors.length)];\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <h1>FAQ</h1>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"faq-wrapper\">\r\n                    <div\r\n                        style={{\r\n                            width: \"100%\",\r\n                            borderBottom: \" 4px solid #ff0000\",\r\n                        }}\r\n                    ></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>Late Orders</h3>\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - Please be patient as the pandemic has slowed down mail\r\n                        times.\r\n                    </p>\r\n                    <div className=\"divider\"></div>\r\n                    <h3 style={{ fontWeight: 550 }}>Lost or Damaged Items</h3>\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> Please{\" \"}\r\n                        <a href=\"#/contact\"> contact us </a> about any lost or\r\n                        damaged items, and attach your order number.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        -{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            CantRelate.JP\r\n                        </strong>{\" \"}\r\n                        is not responsible for lost or damaged items but will\r\n                        replace when possible.\r\n                    </p>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>\r\n                        Incorrect Shipping Address\r\n                    </h3>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - Please double-check your orders before you place them.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> If wrong\r\n                        address is inputted,{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            please\r\n                            <a href=\"#/contact\"> contact us</a> as soon as\r\n                            possible\r\n                        </strong>\r\n                        . We will do our best to update your order.\r\n                    </p>\r\n\r\n                    <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                        - However{\" \"}\r\n                        <strong style={{ fontWeight: 550 }}>\r\n                            CantRelate.JP\r\n                        </strong>{\" \"}\r\n                        is not responsible for the user's error, and we will not\r\n                        replace the order if it has been shipped.\r\n                    </p>\r\n\r\n                    <div className=\"divider\"></div>\r\n\r\n                    <h3 style={{ fontWeight: 550 }}>\r\n                        Thank you for checking out Can't Relate.JP!\r\n                    </h3>\r\n\r\n                    <p\r\n                        className=\"flow-text\"\r\n                        style={{\r\n                            fontWeight: 525,\r\n                            marginLeft: \"32px\",\r\n                        }}\r\n                    >\r\n                        <strong style={{ color: \"#ff0000\" }}>-</strong> Happy\r\n                        Shopping! ٩(\r\n                        <strong style={{ color: eyeColor }}>◕</strong>‿\r\n                        <strong style={{ color: eyeColor }}>◕</strong>\r\n                        ｡)۶\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FAQ;\r\n","let URI = \"\";\r\n\r\nif (process.env.NODE_ENV === \"production\") {\r\n    URI = \"https://infinite-bayou-56493.herokuapp.com\";\r\n} else {\r\n    URI = \"http://localhost:4000\";\r\n}\r\n\r\nexport default URI;\r\n","import { useState } from \"react\";\r\nimport URI from \"../URI\";\r\nimport \"../css/contact.scss\";\r\nimport { FaInstagram, FaEnvelope } from \"react-icons/fa\";\r\nimport { checkAuth } from \"../CheckAuth\";\r\nimport { useGetCurrUserQuery } from \"../generated/graphql\";\r\nimport axios from \"axios\";\r\n\r\nconst Contact = () => {\r\n    const { data } = useGetCurrUserQuery();\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [orderNum, setOrderNum] = useState(\"\");\r\n\r\n    const submitForm = () => {\r\n        let tmp_email;\r\n        if (!!data) {\r\n            tmp_email = data!.getCurrUser.email;\r\n        } else {\r\n            tmp_email = email;\r\n        }\r\n\r\n        axios({\r\n            method: \"POST\",\r\n            url: `${URI}/api/contact`,\r\n            data: {\r\n                name,\r\n                email: tmp_email,\r\n                message,\r\n                orderNum,\r\n            },\r\n        }).then((res: any) => {\r\n            console.log(\"res :>> \", res);\r\n            if (res.data === \"SUCCess\") {\r\n                M.toast({ html: \"SUCCessfully sent message.\" });\r\n                setName(\"\");\r\n                setEmail(\"\");\r\n                setMessage(\"\");\r\n                setOrderNum(\"\");\r\n            } else {\r\n                //handle failure\r\n                M.toast({ html: \"Failed to send message.\" });\r\n                M.toast({ html: \"Please Contact Us via Instagram or Email\" });\r\n            }\r\n        });\r\n\r\n        // fetch(`${URI}/api/contact`, {\r\n        //     method: \"POST\",\r\n        //     body: JSON.stringify({\r\n        //         name,\r\n        //         email: tmp_email,\r\n        //         message,\r\n        //         orderNum,\r\n        //     }),\r\n        // }).\r\n    };\r\n\r\n    return (\r\n        <div id=\"contact-form\" className=\"container\">\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <h1>Contact Us</h1>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginBottom: \"10px\",\r\n                }}\r\n            >\r\n                <span>\r\n                    <a\r\n                        href=\"mailto:cantrelatejp@gmail.com\"\r\n                        style={{ width: \"300px\" }}\r\n                    >\r\n                        <FaEnvelope\r\n                            style={{ marginRight: \"5px\", fontSize: \"20px\" }}\r\n                            className=\"left black-text\"\r\n                        />\r\n                        cantrelatejp@gmail.com\r\n                    </a>\r\n                </span>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginBottom: \"10px\",\r\n                }}\r\n            >\r\n                <span>\r\n                    <a href=\"https://www.instagram.com/cantrelate.jp/\">\r\n                        <FaInstagram\r\n                            style={{ marginRight: \"5px\", fontSize: \"20px\" }}\r\n                            className=\"left black-text\"\r\n                        />\r\n                        @CantRelate.jp\r\n                    </a>\r\n                </span>\r\n            </div>\r\n\r\n            {/* <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"orderNum\">Order Number</label>\r\n                    </div>\r\n                    <input\r\n                        id=\"orderNum\"\r\n                        type=\"text\"\r\n                        className=\"validate browser-default\"\r\n                        value={orderNum}\r\n                        onChange={e => setOrderNum(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"message\">Message</label>\r\n                    </div>\r\n                    <textarea\r\n                        id=\"message\"\r\n                        className=\"validate browser-default\"\r\n                        value={message}\r\n                        onChange={e => setMessage(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"w-30\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        <label htmlFor=\"name\">Your Name</label>\r\n                    </div>\r\n                    <input\r\n                        id=\"name\"\r\n                        type=\"text\"\r\n                        className=\"validate browser-default\"\r\n                        value={name}\r\n                        onChange={e => setName(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {checkAuth() ? (\r\n                <></>\r\n            ) : (\r\n                <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                    <div className=\"w-30\">\r\n                        <div style={{ display: \"flex\" }}>\r\n                            <label className=\" browser-default\" htmlFor=\"email\">\r\n                                Your Email\r\n                            </label>\r\n                        </div>\r\n                        <input\r\n                            id=\"email\"\r\n                            type=\"text\"\r\n                            className=\"validate browser-default\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div\r\n                className=\"row\"\r\n                style={{ display: \"flex\", justifyContent: \"center\" }}\r\n            >\r\n                <button\r\n                    className=\"btn black\"\r\n                    style={{ width: \"25%\", marginTop: \"30px\" }}\r\n                    onClick={() => submitForm()}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </div> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Contact;\r\n","import \"../css/spolicy.scss\";\r\n\r\nconst ShippingPolicy = () => {\r\n    return (\r\n        <>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <h3\r\n                    style={{\r\n                        fontWeight: 550,\r\n                    }}\r\n                >\r\n                    Shipping Policy\r\n                </h3>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"50%\",\r\n                        borderBottom: \" 4px solid #ff0000\",\r\n                    }}\r\n                ></div>\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div className=\"divider\"></div>\r\n\r\n                <div className=\"spolicy-wrapper\">\r\n                    <blockquote style={{ borderLeft: \"5px solid black\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>Preorders</h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please allow 2-3 weeks for orders to be processed\r\n                            after pre-orders close.\r\n                        </p>\r\n                    </blockquote>\r\n                    <div className=\"divider\"></div>\r\n                    <blockquote style={{ borderLeft: \"5px solid black\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            Apparel or other specialty items\r\n                        </h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please allow for 3-4 weeks as they are specialty\r\n                            items\r\n                        </p>\r\n                    </blockquote>\r\n                    <div className=\"divider\"></div>\r\n                    <blockquote style={{ borderLeft: \"5px solid #ff0000\" }}>\r\n                        <h3 style={{ fontWeight: 550 }}>\r\n                            Lost or damaged items\r\n                        </h3>\r\n                        <p className=\"flow-text\" style={{ marginLeft: \"32px\" }}>\r\n                            - Please contact via instagram or email.\r\n                        </p>\r\n                    </blockquote>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ShippingPolicy;\r\n","import { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Products from \"../components/products/Products\";\r\nimport UsersOrders from \"../components/UsersOrders\";\r\nimport ProductDetails from \"../components/products/ProductDetails\";\r\nimport Cart from \"../components/checkout/Cart\";\r\nimport Checkout from \"../components/checkout/Checkout\";\r\nimport { Elements, ElementsConsumer } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport FAQ from \"../components/FAQ\";\r\nimport Contact from \"../components/Contact\";\r\nimport ShippingPolicy from \"../components/ShippingPolicy\";\r\nimport OrderSuccess from \"../components/OrderSuccess\";\r\n\r\nexport const Routes = () => {\r\n    const stripePromise = loadStripe(\r\n        \"pk_test_51IM63dFngR9vHhwSep5ZkKLLach7ZP7BXFkDjSgo6FmQRdy8DOkV96RdHREb1L4vMgQ1fK6FlNfwDdlFX8zKdf1D00wHpHGbCC\"\r\n    );\r\n\r\n    return (\r\n        <Switch>\r\n            <Route exact path=\"/products\" render={() => <Products />} />\r\n            <Route\r\n                exact\r\n                path=\"/product-details:id\"\r\n                render={() => <ProductDetails />}\r\n            />\r\n            {/* <Route exact path=\"/my-orders\" render={() => <UsersOrders />} /> */}\r\n            <Route exact path=\"/my-cart\" render={() => <Cart />} />\r\n            <Route\r\n                exact\r\n                path=\"/checkout\"\r\n                render={() => (\r\n                    <Elements stripe={stripePromise}>\r\n                        <ElementsConsumer>\r\n                            {({ stripe, elements }) => (\r\n                                <Checkout stripe={stripe} elements={elements} />\r\n                            )}\r\n                        </ElementsConsumer>\r\n                    </Elements>\r\n                )}\r\n            />\r\n            {/* <Route exact path=\"order-success\" render={() => <OrderSuccess />} /> */}\r\n            <Route\r\n                exact\r\n                path=\"/shipping_policy\"\r\n                render={() => <ShippingPolicy />}\r\n            />\r\n            <Route exact path=\"/FAQ\" render={() => <FAQ />} />\r\n            <Route exact path=\"/contact\" render={() => <Contact />} />\r\n            <Route render={() => <Redirect to=\"/products\" />} />\r\n        </Switch>\r\n    );\r\n};\r\n","import Navbar from \"./components/navbar/Navbar\";\nimport Footer from \"./components/footer/Footer\";\nimport { Routes } from \"./routes/Routes\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport \"./css/app.scss\";\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <div style={{ height: \"100%\", width: \"100%\" }}>\n                    <Navbar />\n                    <Routes />\n                    <Footer />\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import \"../css/Preloader.scss\";\r\nimport anime from \"animejs/lib/anime.es.js\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Preloader = () => {\r\n    useEffect(() => {\r\n        anime({\r\n            targets: [\".circle-1\"],\r\n            translateY: -24,\r\n            direction: \"alternate\",\r\n            loop: true,\r\n            elasticity: 400,\r\n            easing: \"easeInOutElastic\",\r\n            duration: 1600,\r\n            delay: 800,\r\n        });\r\n\r\n        anime({\r\n            targets: [\".circle-2\"],\r\n            translateY: 24,\r\n            direction: \"alternate\",\r\n            loop: true,\r\n            elasticity: 400,\r\n            easing: \"easeInOutElastic\",\r\n            duration: 1600,\r\n            delay: 800,\r\n        });\r\n\r\n        anime({\r\n            targets: [\".circle-3 \"],\r\n            translateY: -24,\r\n            direction: \"alternate\",\r\n            loop: true,\r\n            elasticity: 400,\r\n            easing: \"easeInOutElastic\",\r\n            duration: 1600,\r\n            delay: 800,\r\n        });\r\n\r\n        anime({\r\n            targets: [\".circle-4\"],\r\n            translateY: 24,\r\n            direction: \"alternate\",\r\n            loop: true,\r\n            elasticity: 400,\r\n            easing: \"easeInOutElastic\",\r\n            duration: 1600,\r\n            delay: 800,\r\n        });\r\n    });\r\n\r\n    return (\r\n        <div className=\"loadingWrapper\">\r\n            <div className=\"absolute-center\">\r\n                <div className=\"loader\">\r\n                    <div className=\"circle circle-1\"></div>\r\n                    <div className=\"circle circle-2\"></div>\r\n                    <div className=\"circle circle-3\"></div>\r\n                    <div className=\"circle circle-4\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;\r\n","import { useEffect, useState } from \"react\";\r\nimport { setAccessToken, setMainAccessToken } from \"./accessToken\";\r\nimport App from \"./App\";\r\nimport Preloader from \"./components/Preloader\";\r\nimport {\r\n    useGetMaintenanceQuery,\r\n    useMaintenanceLoginMutation,\r\n} from \"./generated/graphql\";\r\nimport URI from \"./URI\";\r\n\r\nconst AppWrapper = () => {\r\n    const { data, loading } = useGetMaintenanceQuery();\r\n    const [maintLogin] = useMaintenanceLoginMutation();\r\n\r\n    const [pageLoader, setPageLoader] = useState(true);\r\n\r\n    const [mainLoader, setMainLoader] = useState(true);\r\n    useEffect(() => {\r\n        //get new accessToken & refreshToken with fetch to URI/refresh_token\r\n        try {\r\n            let tmp = localStorage.getItem(\"iru5\") as string;\r\n            fetch(`${URI}/refresh_token`, {\r\n                method: \"POST\",\r\n                credentials: \"include\",\r\n                headers: {\r\n                    refreshToken: tmp,\r\n                },\r\n            }).then(async res => {\r\n                const { accessToken, refreshToken } = await res.json();\r\n                setAccessToken(accessToken);\r\n                localStorage.setItem(\"iru5\", refreshToken);\r\n                setPageLoader(false);\r\n            });\r\n        } catch {\r\n            setPageLoader(false);\r\n        }\r\n\r\n        try {\r\n            // let tmp = localStorage.getItem(\"main_qwf\") as string;\r\n            // fetch(`${URI}/maintenance_login`, {\r\n            //     method: \"POST\",\r\n            //     credentials: \"include\",\r\n            //     headers: {\r\n            //         refreshToken: tmp,\r\n            //     },\r\n            // }).then(async res => {\r\n            //     console.log(\"worked\");\r\n            //     const { accessToken, refreshToken } = await res.json();\r\n            //     console.log(\"accessToken :>> \", accessToken);\r\n            //     console.log(\"refreshToken :>> \", refreshToken);\r\n            //     setMainAccessToken(accessToken);\r\n            //     localStorage.setItem(\"main_qwf\", refreshToken);\r\n            //     console.log(\"setting\");\r\n            //     setMainLoader(false);\r\n            // });\r\n        } catch {}\r\n    });\r\n\r\n    if (pageLoader || loading) {\r\n        return <Preloader />;\r\n    } else if (mainLoader) {\r\n        return (\r\n            <>\r\n                <button\r\n                    onClick={async () => {\r\n                        let acc = localStorage.getItem(\"access_id\") as string;\r\n                        let pass = localStorage.getItem(\"password\") as string;\r\n                        try {\r\n                            const res = await maintLogin({\r\n                                variables: {\r\n                                    access_id: acc,\r\n                                    password: pass,\r\n                                },\r\n                            });\r\n\r\n                            if (res && res.data) {\r\n                                let tmp = res.data.maintenanceLogin\r\n                                    .accessToken as any;\r\n                                setMainAccessToken(tmp!);\r\n                                localStorage.setItem(\r\n                                    \"main_qwf\",\r\n                                    res.data.maintenanceLogin.refreshToken!\r\n                                );\r\n                                setMainLoader(false);\r\n\r\n                                // window.location.reload();\r\n                            }\r\n                        } catch {}\r\n                    }}\r\n                >\r\n                    App is in maintenance mode\r\n                </button>\r\n            </>\r\n        );\r\n    } else {\r\n        return <App />;\r\n    }\r\n};\r\n\r\nexport default AppWrapper;\r\n","import { useGetProductQuery, useGetProductsQuery } from \"../generated/graphql\";\r\n\r\nexport interface Product {\r\n    product_id: number;\r\n    name: string;\r\n    price: number;\r\n    stock: number;\r\n}\r\n\r\nexport interface ProductInCart {\r\n    product_id: number;\r\n    name: string;\r\n    price: number;\r\n    stock: number;\r\n    quantity: number;\r\n}\r\n\r\nexport interface State {\r\n    productsInCart: [\r\n        {\r\n            product_id: number;\r\n            name: string;\r\n            price: number;\r\n            stock: number;\r\n            quantity: number;\r\n        }\r\n    ];\r\n}\r\n\r\nconst loadState = () => {\r\n    try {\r\n        let serializedState = localStorage.getItem(\"store-state\");\r\n        if (serializedState) {\r\n            let state = JSON.parse(serializedState);\r\n            console.log(\"state :>> \", state);\r\n            return state;\r\n        }\r\n    } catch (err) {\r\n        console.log(\"err :>> \", err);\r\n    }\r\n};\r\n\r\nconst initState = loadState() || {\r\n    productsInCart: [],\r\n};\r\n\r\ntype Actions = {\r\n    type: string;\r\n    product?: Product;\r\n    newQuantity?: number;\r\n    productIndex?: number;\r\n};\r\n\r\nexport const RootReducer = (state = initState, action: Actions) => {\r\n    switch (action.type) {\r\n        case \"ADD_PRODUCT_TO_CART\": {\r\n            let tmp = state.productsInCart;\r\n\r\n            //if product is already in cart increase quantity instead of adding a new product\r\n            for (let i = 0; i < tmp.length; i++) {\r\n                if (tmp[i].product_id === action.product!.product_id) {\r\n                    tmp[i].quantity++;\r\n                    return { ...state, productsInCart: tmp };\r\n                }\r\n            }\r\n            let tmp2: any = action.product;\r\n            tmp2.quantity = 1;\r\n\r\n            tmp.push(tmp2);\r\n\r\n            return { ...state, productsInCart: tmp };\r\n        }\r\n\r\n        case \"CHANGE_QUANTITY_ON_PRODUCT\": {\r\n            let productsInCart = state.productsInCart;\r\n            if (action.newQuantity === 0) {\r\n                //remove product if quantity is 0\r\n                productsInCart.splice(action.productIndex!, 1);\r\n            } else {\r\n                productsInCart[\r\n                    action.productIndex!\r\n                ].quantity = action.newQuantity!;\r\n            }\r\n            return { ...state, productsInCart };\r\n        }\r\n\r\n        case \"RESET_CART\": {\r\n            // delete localStorage items\r\n            localStorage.setItem(\"store-state\", \" \");\r\n            // dump state\r\n            return {};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { RootReducer } from \"./RootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst saveState = state => {\r\n    try {\r\n        let serializedState = JSON.stringify(state);\r\n        localStorage.setItem(\"store-state\", serializedState);\r\n    } catch (err) {\r\n        console.log(\"err :>> \", err);\r\n    }\r\n};\r\n\r\nexport const store = createStore(RootReducer as any, composeWithDevTools());\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n","import ReactDOM from \"react-dom\";\nimport AppWrapper from \"./AppWrapper\";\nimport ApolloClient from \"apollo-client\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport jwtDecode from \"jwt-decode\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { ApolloLink, Observable } from \"apollo-link\";\nimport { HttpLink } from \"apollo-link-http\";\nimport { onError } from \"apollo-link-error\";\nimport { TokenRefreshLink } from \"apollo-link-token-refresh\";\nimport { getAccessToken, setAccessToken } from \"./accessToken\";\nimport URI from \"./URI\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/ReduxStore\";\n\nconst cache = new InMemoryCache({});\nconst requestLink = new ApolloLink(\n    (operation, forward) =>\n        new Observable(observer => {\n            let handle: any;\n            Promise.resolve(operation)\n                .then(operation => {\n                    const accessToken = getAccessToken();\n                    operation.setContext({\n                        headers: {\n                            authorization: accessToken\n                                ? `bearer ${accessToken}`\n                                : \"\",\n                        },\n                    });\n                })\n                .then(() => {\n                    handle = forward(operation).subscribe({\n                        next: observer.next.bind(observer),\n                        error: observer.error.bind(observer),\n                        complete: observer.complete.bind(observer),\n                    });\n                })\n                .catch(observer.error.bind(observer));\n\n            return () => {\n                if (handle) handle.unsubscribe();\n            };\n        })\n);\n\nconst client = new ApolloClient({\n    link: ApolloLink.from([\n        new TokenRefreshLink({\n            accessTokenField: \"accessToken\",\n            isTokenValidOrUndefined: () => {\n                const token = getAccessToken();\n\n                if (!token) {\n                    return true;\n                }\n\n                try {\n                    const { exp } = jwtDecode(token) as any;\n                    if (Date.now() >= exp * 1000) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                } catch {\n                    return false;\n                }\n            },\n            fetchAccessToken: () => {\n                return fetch(`${URI}/refresh_token`, {\n                    method: \"POST\",\n                    credentials: \"include\",\n                });\n            },\n            handleFetch: (accessToken: string) => {\n                setAccessToken(accessToken);\n            },\n            handleError: (err: any) => {\n                console.warn(\"Your refresh token is invalid. Try to relogin\");\n                console.error(err);\n            },\n        }) as any,\n        onError(({ graphQLErrors, networkError }) => {\n            console.log(graphQLErrors);\n            console.log(networkError);\n        }),\n        requestLink,\n        new HttpLink({\n            uri: `${URI}/graphql`,\n            credentials: \"include\",\n        }),\n    ]),\n    cache,\n});\n\nReactDOM.render(\n    <ApolloProvider client={client as any}>\n        <Provider store={store}>\n            <AppWrapper />\n        </Provider>\n    </ApolloProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}